{"version":3,"file":"order-summary-drawer-c9817d74.js","mappings":"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","sources":["webpack://checkout/./packages/core/src/app/order/getLineItemsCount.ts","webpack://checkout/./packages/ui/src/icon/IconCloseWithBorder.tsx","webpack://checkout/./packages/core/src/app/order/OrderModalSummarySubheader.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryModal.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryDrawer.tsx","webpack://checkout/./packages/core/src/app/order/mapFromCustom.tsx","webpack://checkout/./packages/core/src/app/order/getOrderSummaryItemImage.tsx","webpack://checkout/./packages/core/src/app/order/mapFromDigital.tsx","webpack://checkout/./packages/core/src/app/order/mapFromGiftCertificate.tsx","webpack://checkout/./packages/core/src/app/order/mapFromPhysical.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryItem.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryItems.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummarySection.tsx","webpack://checkout/./packages/core/src/app/order/getItemsCount.ts","webpack://checkout/./packages/core/src/app/order/removeBundledItems.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconChevronUp.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconGiftCertificate.tsx","webpack://checkout/./packages/core/src/app/ui/modal/ModalTrigger.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/isSmallScreen.ts","webpack://checkout/./packages/ui/src/button/Button.tsx"],"sourcesContent":["import { LineItemMap } from '@bigcommerce/checkout-sdk';\r\n\r\nexport default function getLineItemsCount({\r\n    physicalItems,\r\n    digitalItems,\r\n    giftCertificates,\r\n    customItems,\r\n}: LineItemMap): number {\r\n    return (\r\n        physicalItems.length +\r\n        digitalItems.length +\r\n        giftCertificates.length +\r\n        (customItems || []).length\r\n    );\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconCloseWithBorder: FunctionComponent = () => (\r\n    <svg fill=\"none\" height=\"37\" viewBox=\"0 0 38 37\" width=\"38\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path\r\n            d=\"M38 18.5C38 28.7173 29.7173 37 19.5 37C9.28273 37 1 28.7173 1 18.5C1 8.28273 9.28273 0 19.5 0C29.7173 0 38 8.28273 38 18.5Z\"\r\n            fill=\"#F3F3F3\"\r\n        />\r\n        <path\r\n            clipRule=\"evenodd\"\r\n            d=\"M24.6671 24.6674L12.9998 13.0002L14.4141 11.5859L26.0813 23.2532L24.6671 24.6674Z\"\r\n            fill=\"black\"\r\n            fillRule=\"evenodd\"\r\n        />\r\n        <path\r\n            clipRule=\"evenodd\"\r\n            d=\"M25.6674 13.0004L14.0002 24.6676L12.5859 23.2534L24.2532 11.5862L25.6674 13.0004Z\"\r\n            fill=\"black\"\r\n            fillRule=\"evenodd\"\r\n        />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconCloseWithBorder);\r\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport getItemsCount from './getItemsCount';\r\n\r\nexport interface OrderModalSummarySubheaderProps {\r\n    items: LineItemMap;\r\n}\r\n\r\nconst OrderModalSummarySubheader: FunctionComponent<OrderModalSummarySubheaderProps> = ({\r\n    items,\r\n}) => {\r\n    const itemsCount = getItemsCount(items);\r\n    const itemsText = itemsCount === 1 ? 'cart.item' : 'cart.items';\r\n\r\n    return <>\r\n        {itemsCount} <TranslatedString id={itemsText} />\r\n    </>;\r\n};\r\n\r\nexport default memo(OrderModalSummarySubheader);\r\n","import {\r\n    LineItemMap,\r\n    ShopperCurrency as ShopperCurrencyType,\r\n    StoreCurrency,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport React, { cloneElement, FunctionComponent, isValidElement, ReactNode } from 'react';\r\n\r\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\nimport { Button, IconCloseWithBorder } from '@bigcommerce/checkout/ui';\r\n\r\n// import { ShopperCurrency } from '../currency';\r\nimport { Modal, ModalHeader } from '../ui/modal';\r\nimport { isSmallScreen } from '../ui/responsive';\r\n\r\nimport OrderModalSummarySubheader from './OrderModalSummarySubheader';\r\nimport OrderSummaryItems from './OrderSummaryItems';\r\n// import OrderSummaryPrice from './OrderSummaryPrice';\r\nimport OrderSummarySection from './OrderSummarySection';\r\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\r\n// import OrderSummaryTotal from './OrderSummaryTotal';\r\n\r\nexport interface OrderSummaryDrawerProps {\r\n    additionalLineItems?: ReactNode;\r\n    items: LineItemMap;\r\n    total: number;\r\n    storeCurrency: StoreCurrency;\r\n    shopperCurrency: ShopperCurrencyType;\r\n    isOpen: boolean;\r\n    headerLink?: ReactNode & React.HTMLProps<HTMLDivElement>;\r\n    onRequestClose?(): void;\r\n    onAfterOpen?(): void;\r\n}\r\n\r\nconst OrderSummaryModal: FunctionComponent<\r\n    OrderSummaryDrawerProps & OrderSummarySubtotalsProps\r\n> = ({\r\n    // additionalLineItems,\r\n    // children,\r\n    // isTaxIncluded,\r\n    // taxes,\r\n    onRequestClose,\r\n    onAfterOpen,\r\n    // storeCurrency,\r\n    // shopperCurrency,\r\n    isOpen,\r\n    headerLink,\r\n    items,\r\n    // total,\r\n    // ...orderSummarySubtotalsProps\r\n}) => {\r\n    // const displayInclusiveTax = isTaxIncluded && taxes && taxes.length > 0;\r\n\r\n    const subHeaderText = <OrderModalSummarySubheader\r\n        // amountWithCurrency={<ShopperCurrency amount={total} />}\r\n        items={items}\r\n        // shopperCurrencyCode={shopperCurrency.code}\r\n        // storeCurrencyCode={storeCurrency.code}\r\n    />;\r\n\r\n    const continueButton = isSmallScreen() && <Button\r\n        className='cart-modal-continue'\r\n        data-test=\"manage-instrument-cancel-button\"\r\n        onClick={preventDefault(onRequestClose)}>\r\n            <TranslatedString id=\"cart.return_to_checkout\" />\r\n    </Button>;\r\n\r\n    return <Modal\r\n        additionalBodyClassName=\"cart-modal-body optimizedCheckout-orderSummary\"\r\n        additionalHeaderClassName=\"cart-modal-header optimizedCheckout-orderSummary with-continue-button\"\r\n        additionalModalClassName=\"optimizedCheckout-cart-modal\"\r\n        footer={continueButton}\r\n        header={renderHeader({\r\n            headerLink,\r\n            subHeaderText,\r\n            onRequestClose,\r\n        })}\r\n        isOpen={isOpen}\r\n        onAfterOpen={onAfterOpen}\r\n        onRequestClose={onRequestClose}\r\n    >\r\n        <OrderSummarySection>\r\n            <OrderSummaryItems displayLineItemsCount={false} items={items} />\r\n        </OrderSummarySection>\r\n        {/* <OrderSummarySection>\r\n            <OrderSummarySubtotals isTaxIncluded={isTaxIncluded} taxes={taxes} {...orderSummarySubtotalsProps} />\r\n            {additionalLineItems}\r\n        </OrderSummarySection>\r\n        <OrderSummarySection>\r\n            <OrderSummaryTotal\r\n                orderAmount={total}\r\n                shopperCurrencyCode={shopperCurrency.code}\r\n                storeCurrencyCode={storeCurrency.code}\r\n            />\r\n        </OrderSummarySection>\r\n        {displayInclusiveTax && <OrderSummarySection>\r\n                <h5\r\n                    className=\"cart-taxItem cart-taxItem--subtotal optimizedCheckout-contentPrimary\"\r\n                    data-test=\"tax-text\"\r\n                >\r\n                    <TranslatedString\r\n                        id=\"tax.inclusive_label\"\r\n                    />\r\n                </h5>\r\n                {(taxes || []).map((tax, index) => (\r\n                    <OrderSummaryPrice\r\n                        amount={tax.amount}\r\n                        key={index}\r\n                        label={tax.name}\r\n                        testId=\"cart-taxes\"\r\n                    />\r\n                ))}\r\n            </OrderSummarySection>} */}\r\n    </Modal>\r\n};\r\n\r\nconst renderHeader: FunctionComponent<{\r\n    headerLink?: ReactNode & React.HTMLProps<HTMLDivElement>;\r\n    subHeaderText: ReactNode;\r\n    onRequestClose?(): void;\r\n}> = ({ onRequestClose, headerLink, subHeaderText }) => {\r\n    let newHeaderLink;\r\n\r\n    if (isValidElement(headerLink)) {\r\n        newHeaderLink = cloneElement(headerLink, { className: 'modal-header-link cart-modal-link test' });\r\n    }\r\n\r\n    return <>\r\n        {newHeaderLink ?? headerLink}\r\n        <ModalHeader additionalClassName=\"cart-modal-title\">\r\n            <div>\r\n                <TranslatedString id=\"cart.cart_heading\" />\r\n                <div className='cart-heading-subheader'>{subHeaderText}</div>\r\n            </div>\r\n        </ModalHeader>\r\n        <a className=\"cart-modal-close\" href=\"#\" onClick={preventDefault(onRequestClose)}>\r\n            <span className=\"is-srOnly\">\r\n                <TranslatedString id=\"common.close_action\" />\r\n            </span>\r\n            <IconCloseWithBorder />\r\n        </a>\r\n    </>\r\n};\r\n\r\nexport default OrderSummaryModal;\r\n","import {\r\n    LineItemMap,\r\n    ShopperCurrency as ShopperCurrencyType,\r\n    StoreCurrency,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport classNames from 'classnames';\r\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useMemo } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\n// import { ShopperCurrency } from '../currency';\r\nimport { IconGiftCertificate } from '../ui/icon';\r\nimport { ModalTrigger } from '../ui/modal';\r\n\r\nimport getItemsCount from './getItemsCount';\r\nimport getLineItemsCount from './getLineItemsCount';\r\nimport OrderSummaryModal from './OrderSummaryModal';\r\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\r\nimport removeBundledItems from './removeBundledItems';\r\n\r\nexport interface OrderSummaryDrawerProps {\r\n    lineItems: LineItemMap;\r\n    total: number;\r\n    headerLink: ReactNode;\r\n    storeCurrency: StoreCurrency;\r\n    shopperCurrency: ShopperCurrencyType;\r\n    additionalLineItems?: ReactNode;\r\n}\r\n\r\nconst OrderSummaryDrawer: FunctionComponent<\r\n    OrderSummaryDrawerProps & OrderSummarySubtotalsProps\r\n> = ({\r\n    additionalLineItems,\r\n    coupons,\r\n    discountAmount,\r\n    giftCertificates,\r\n    handlingAmount,\r\n    headerLink,\r\n    isTaxIncluded,\r\n    lineItems,\r\n    onRemovedCoupon,\r\n    onRemovedGiftCertificate,\r\n    shippingAmount,\r\n    shopperCurrency,\r\n    storeCreditAmount,\r\n    giftWrappingAmount,\r\n    storeCurrency,\r\n    subtotalAmount,\r\n    taxes,\r\n    total,\r\n    fees,\r\n}) => {\r\n    const nonBundledLineItems = useMemo(() => removeBundledItems(lineItems), [lineItems]);\r\n\r\n    const renderModal = useCallback(\r\n        (props) => (\r\n            <OrderSummaryModal\r\n                {...props}\r\n                additionalLineItems={additionalLineItems}\r\n                coupons={coupons}\r\n                discountAmount={discountAmount}\r\n                fees={fees}\r\n                giftCertificates={giftCertificates}\r\n                giftWrappingAmount={giftWrappingAmount}\r\n                handlingAmount={handlingAmount}\r\n                headerLink={headerLink}\r\n                isTaxIncluded={isTaxIncluded}\r\n                items={nonBundledLineItems}\r\n                onRemovedCoupon={onRemovedCoupon}\r\n                onRemovedGiftCertificate={onRemovedGiftCertificate}\r\n                shippingAmount={shippingAmount}\r\n                shopperCurrency={shopperCurrency}\r\n                storeCreditAmount={storeCreditAmount}\r\n                storeCurrency={storeCurrency}\r\n                subtotalAmount={subtotalAmount}\r\n                taxes={taxes}\r\n                total={total}\r\n            />\r\n        ),\r\n        [\r\n            additionalLineItems,\r\n            coupons,\r\n            discountAmount,\r\n            giftCertificates,\r\n            handlingAmount,\r\n            headerLink,\r\n            isTaxIncluded,\r\n            nonBundledLineItems,\r\n            onRemovedCoupon,\r\n            onRemovedGiftCertificate,\r\n            giftWrappingAmount,\r\n            shippingAmount,\r\n            shopperCurrency,\r\n            storeCreditAmount,\r\n            storeCurrency,\r\n            subtotalAmount,\r\n            taxes,\r\n            total,\r\n            fees,\r\n        ],\r\n    );\r\n\r\n    return (\r\n        <ModalTrigger modal={renderModal}>\r\n            {({ onClick, onKeyPress }) => (\r\n                <div\r\n                    className=\"cartDrawer optimizedCheckout-orderSummary\"\r\n                    onClick={onClick}\r\n                    onKeyPress={onKeyPress}\r\n                    tabIndex={0}\r\n                >\r\n                    <figure\r\n                        className={classNames('cartDrawer-figure', {\r\n                            'cartDrawer-figure--stack': getLineItemsCount(nonBundledLineItems) > 1,\r\n                        })}\r\n                    >\r\n                        <div className=\"cartDrawer-imageWrapper\">{getImage(nonBundledLineItems)}</div>\r\n                    </figure>\r\n                    <div className=\"cartDrawer-body\">\r\n                        <h3 className=\"cartDrawer-items optimizedCheckout-headingPrimary\">\r\n                            <TranslatedString\r\n                                data={{ count: getItemsCount(nonBundledLineItems) }}\r\n                                id=\"cart.item_count_text\"\r\n                            />\r\n                        </h3>\r\n                        <a>\r\n                            <TranslatedString id=\"cart.show_details_action\" />\r\n                        </a>\r\n                    </div>\r\n                    {/* <div className=\"cartDrawer-actions\">\r\n                        <h3 className=\"cartDrawer-total optimizedCheckout-headingPrimary\">\r\n                            Testing\r\n                        </h3>\r\n                    </div> */}\r\n                </div>\r\n            )}\r\n        </ModalTrigger>\r\n    );\r\n};\r\n\r\nfunction getImage(lineItems: LineItemMap): ReactNode {\r\n    const productWithImage = lineItems.physicalItems[0] || lineItems.digitalItems[0];\r\n\r\n    if (productWithImage && productWithImage.imageUrl) {\r\n        return (\r\n            <img\r\n                alt={productWithImage.name}\r\n                data-test=\"cart-item-image\"\r\n                src={productWithImage.imageUrl}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (lineItems.giftCertificates.length) {\r\n        return <IconGiftCertificate />;\r\n    }\r\n}\r\n\r\nexport default memo(OrderSummaryDrawer);\r\n","import { CustomItem } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\r\n\r\nfunction mapFromCustom(item: CustomItem): OrderSummaryItemProps {\r\n    return {\r\n        id: item.id,\r\n        quantity: item.quantity,\r\n        amount: item.extendedListPrice,\r\n        name: item.name,\r\n    };\r\n}\r\n\r\nexport default mapFromCustom;\r\n","import { DigitalItem, PhysicalItem } from '@bigcommerce/checkout-sdk';\r\nimport React, { ReactNode } from 'react';\r\n\r\nexport default function getOrderSummaryItemImage(item: DigitalItem | PhysicalItem): ReactNode {\r\n    if (!item.imageUrl) {\r\n        return;\r\n    }\r\n\r\n    return <img alt={item.name} data-test=\"cart-item-image\" src={item.imageUrl} />;\r\n}\r\n","import { DigitalItem } from '@bigcommerce/checkout-sdk';\r\nimport React from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport getOrderSummaryItemImage from './getOrderSummaryItemImage';\r\nimport { OrderSummaryItemOption, OrderSummaryItemProps } from './OrderSummaryItem';\r\n\r\nfunction mapFromDigital(item: DigitalItem): OrderSummaryItemProps {\r\n    return {\r\n        id: item.id,\r\n        quantity: item.quantity,\r\n        amount: item.extendedComparisonPrice,\r\n        amountAfterDiscount: item.extendedSalePrice,\r\n        name: item.name,\r\n        image: getOrderSummaryItemImage(item),\r\n        productOptions: [\r\n            ...(item.options || []).map((option) => ({\r\n                testId: 'cart-item-product-option',\r\n                content: `${option.name} ${option.value}`,\r\n            })),\r\n            getDigitalItemDescription(item),\r\n        ],\r\n    };\r\n}\r\n\r\nfunction getDigitalItemDescription(item: DigitalItem): OrderSummaryItemOption {\r\n    if (!item.downloadPageUrl) {\r\n        return {\r\n            testId: 'cart-item-digital-product',\r\n            content: <TranslatedString id=\"cart.digital_item_text\" />,\r\n        };\r\n    }\r\n\r\n    return {\r\n        testId: 'cart-item-digital-product-download',\r\n        content: (\r\n            <a href={item.downloadPageUrl} rel=\"noopener noreferrer\" target=\"_blank\">\r\n                <TranslatedString id=\"cart.downloads_action\" />\r\n            </a>\r\n        ),\r\n    };\r\n}\r\n\r\nexport default mapFromDigital;\r\n","import { GiftCertificateItem } from '@bigcommerce/checkout-sdk';\r\nimport React from 'react';\r\n\r\nimport { IconGiftCertificate } from '../ui/icon';\r\n\r\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\r\n\r\nfunction mapFromGiftCertificate(item: GiftCertificateItem): OrderSummaryItemProps {\r\n    return {\r\n        id: item.id,\r\n        quantity: 1,\r\n        amount: item.amount,\r\n        name: item.name,\r\n        image: (\r\n            <span className=\"productImage-giftCertificate\" data-test=\"cart-item-gift-certificate\">\r\n                <IconGiftCertificate />\r\n            </span>\r\n        ),\r\n    };\r\n}\r\n\r\nexport default mapFromGiftCertificate;\r\n","import { PhysicalItem } from '@bigcommerce/checkout-sdk';\r\n\r\nimport getOrderSummaryItemImage from './getOrderSummaryItemImage';\r\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\r\n\r\nfunction mapFromPhysical(item: PhysicalItem): OrderSummaryItemProps {\r\n    return {\r\n        id: item.id,\r\n        quantity: item.quantity,\r\n        amount: item.extendedComparisonPrice,\r\n        amountAfterDiscount: item.extendedSalePrice,\r\n        name: item.name,\r\n        image: getOrderSummaryItemImage(item),\r\n        description: item.giftWrapping ? item.giftWrapping.name : undefined,\r\n        productOptions: (item.options || []).map((option) => ({\r\n            testId: 'cart-item-product-option',\r\n            content: `${option.name} ${option.value}`,\r\n        })),\r\n    };\r\n}\r\n\r\nexport default mapFromPhysical;\r\n","import React, { FunctionComponent, memo, ReactNode } from 'react';\r\n\r\n\r\nexport interface OrderSummaryItemProps {\r\n    id: string | number;\r\n    amount: number;\r\n    quantity: number;\r\n    name: string;\r\n    amountAfterDiscount?: number;\r\n    image?: ReactNode;\r\n    description?: ReactNode;\r\n    productOptions?: OrderSummaryItemOption[];\r\n}\r\n\r\nexport interface OrderSummaryItemOption {\r\n    testId: string;\r\n    content: ReactNode;\r\n}\r\n\r\nconst OrderSummaryItem: FunctionComponent<OrderSummaryItemProps> = ({\r\n    image,\r\n    name,\r\n    productOptions,\r\n    quantity,\r\n    description,\r\n}) => (\r\n    // <div className=\"product\" data-test=\"cart-item\">\r\n    <div className='product'>\r\n        <figure className=\"product-column product-figure\">{image}</figure>\r\n\r\n        <div className=\"product-column product-body\">\r\n            <h4\r\n                className=\"product-title optimizedCheckout-contentPrimary\"\r\n                data-test=\"cart-item-product-title\"\r\n            >\r\n                {name}\r\n            </h4>\r\n            {productOptions && productOptions.length > 0 && (\r\n                <ul\r\n                    className=\"product-options optimizedCheckout-contentSecondary\"\r\n                    data-test=\"cart-item-product-options\"\r\n                >\r\n                    {productOptions.map((option, index) => (\r\n                        <li className=\"product-option\" data-test={option.testId} key={index}>\r\n                            {option.content}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n            {description && (\r\n                <div\r\n                    className=\"product-description optimizedCheckout-contentSecondary\"\r\n                    data-test=\"cart-item-product-description\"\r\n                >\r\n                    {description}\r\n                </div>\r\n            )}\r\n        </div>\r\n\r\n        <div className='product-column product-body quantity'>\r\n            <span>\r\n                {`${quantity}` }\r\n            </span>\r\n        </div>\r\n        \r\n        {/* <div className=\"product-column product-actions\">\r\n            <div\r\n                className={classNames('product-price', 'optimizedCheckout-contentPrimary', {\r\n                    'product-price--beforeDiscount':\r\n                        isNumber(amountAfterDiscount) && amountAfterDiscount !== amount,\r\n                })}\r\n                data-test=\"cart-item-product-price\"\r\n            >\r\n                <ShopperCurrency amount={amount} />\r\n            </div>\r\n\r\n            {isNumber(amountAfterDiscount) && amountAfterDiscount !== amount && (\r\n                <div className=\"product-price\" data-test=\"cart-item-product-price--afterDiscount\">\r\n                    <ShopperCurrency amount={amountAfterDiscount} />\r\n                </div>\r\n            )}\r\n        </div> */}\r\n    </div>\r\n);\r\n\r\nexport default memo(OrderSummaryItem);\r\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\r\nimport React, { ReactNode } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { IconChevronDown, IconChevronUp } from '../ui/icon';\r\nimport { isSmallScreen } from '../ui/responsive';\r\n\r\nimport getItemsCount from './getItemsCount';\r\nimport mapFromCustom from './mapFromCustom';\r\nimport mapFromDigital from './mapFromDigital';\r\nimport mapFromGiftCertificate from './mapFromGiftCertificate';\r\nimport mapFromPhysical from './mapFromPhysical';\r\nimport OrderSummaryItem from './OrderSummaryItem';\r\n\r\nconst COLLAPSED_ITEMS_LIMIT = 4;\r\nconst COLLAPSED_ITEMS_LIMIT_SMALL_SCREEN = 3;\r\n\r\nexport interface OrderSummaryItemsProps {\r\n    displayLineItemsCount: boolean;\r\n    items: LineItemMap;\r\n}\r\n\r\ninterface OrderSummaryItemsState {\r\n    isExpanded: boolean;\r\n    collapsedLimit: number;\r\n}\r\n\r\nclass OrderSummaryItems extends React.Component<OrderSummaryItemsProps, OrderSummaryItemsState> {\r\n    constructor(props: OrderSummaryItemsProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isExpanded: false,\r\n            collapsedLimit: this.getCollapsedLimit(),\r\n        };\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { displayLineItemsCount = true, items } = this.props;\r\n        const { collapsedLimit, isExpanded } = this.state;\r\n\r\n        return (\r\n            <>\r\n                {displayLineItemsCount && <h3\r\n                    className=\"cart-section-heading optimizedCheckout-contentPrimary\"\r\n                    data-test=\"cart-count-total\"\r\n                >\r\n                    <TranslatedString\r\n                        data={{ count: getItemsCount(items) }}\r\n                        id=\"cart.item_count_text\"\r\n                    />\r\n                </h3>}\r\n                <div className='cart-list-header'>\r\n                    <div className=\"cart-title product\">Product</div>\r\n                    {/* <div className=\"product\">Product</div> */}\r\n                    <div className=\"quantity \">Quantity</div>\r\n                </div>\r\n\r\n                <ul aria-live=\"polite\" className=\"productList\">\r\n                    {[\r\n                        ...items.physicalItems\r\n                            .slice()\r\n                            .sort((item) => item.variantId)\r\n                            .map(mapFromPhysical),\r\n                        ...items.giftCertificates.slice().map(mapFromGiftCertificate),\r\n                        ...items.digitalItems\r\n                            .slice()\r\n                            .sort((item) => item.variantId)\r\n                            .map(mapFromDigital),\r\n                        ...(items.customItems || []).map(mapFromCustom),\r\n                    ]\r\n                        .slice(0, isExpanded ? undefined : collapsedLimit)\r\n                        .map((summaryItemProps) => (\r\n                            <li className=\"productList-item is-visible\" key={summaryItemProps.id}>\r\n                                <OrderSummaryItem {...summaryItemProps} />\r\n                            </li>\r\n                        ))}\r\n                </ul>\r\n\r\n                {this.renderActions()}\r\n            </>\r\n        );\r\n    }\r\n\r\n    private getCollapsedLimit(): number {\r\n        return isSmallScreen() ? COLLAPSED_ITEMS_LIMIT_SMALL_SCREEN : COLLAPSED_ITEMS_LIMIT;\r\n    }\r\n\r\n    private renderActions(): ReactNode {\r\n        const { isExpanded } = this.state;\r\n\r\n        if (this.getLineItemCount() <= this.getCollapsedLimit()) {\r\n            return;\r\n        }\r\n\r\n        return (\r\n            <div className=\"cart-actions\">\r\n                <button\r\n                    className=\"button button--tertiary button--tiny optimizedCheckout-buttonSecondary\"\r\n                    onClick={this.handleToggle}\r\n                    type=\"button\"\r\n                >\r\n                    {isExpanded ? (\r\n                        <>\r\n                            <TranslatedString id=\"cart.see_less_action\" />\r\n                            <IconChevronUp />\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <TranslatedString id=\"cart.see_all_action\" />\r\n                            <IconChevronDown />\r\n                        </>\r\n                    )}\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getLineItemCount(): number {\r\n        const { items } = this.props;\r\n\r\n        return (\r\n            (items.customItems || []).length +\r\n            items.physicalItems.length +\r\n            items.digitalItems.length +\r\n            items.giftCertificates.length\r\n        );\r\n    }\r\n\r\n    private handleToggle: () => void = () => {\r\n        const { isExpanded } = this.state;\r\n\r\n        this.setState({ isExpanded: !isExpanded });\r\n    };\r\n}\r\n\r\nexport default OrderSummaryItems;\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nconst OrderSummarySection: FunctionComponent = ({ children }) => (\r\n    <section className=\"cart-section optimizedCheckout-orderSummary-cartSection\">\r\n        {children}\r\n    </section>\r\n);\r\n\r\nexport default OrderSummarySection;\r\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\r\n\r\nexport default function getItemsCount({\r\n    physicalItems,\r\n    digitalItems,\r\n    giftCertificates,\r\n    customItems,\r\n}: LineItemMap): number {\r\n    const totalItemsCount = [...physicalItems, ...digitalItems, ...(customItems || [])].reduce(\r\n        (total, item) => (total += item.quantity),\r\n        0,\r\n    );\r\n\r\n    return totalItemsCount + giftCertificates.length;\r\n}\r\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\r\n\r\nexport default function removeBundledItems(lineItems: LineItemMap): LineItemMap {\r\n    return {\r\n        ...lineItems,\r\n        physicalItems: lineItems.physicalItems.filter((item) => typeof item.parentId !== 'string'),\r\n        digitalItems: lineItems.digitalItems.filter((item) => typeof item.parentId !== 'string'),\r\n    };\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconChevronUp: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconChevronUp);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nconst IconGiftCertificate: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M20 6h-2.18c.11-.31.18-.65.18-1a2.996 2.996 0 0 0-5.5-1.65l-.5.67-.5-.68C10.96 2.54 10.05 2 9 2 7.34 2 6 3.34 6 5c0 .35.07.69.18 1H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-5-2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM9 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm11 15H4v-2h16v2zm0-5H4V8h5.08L7 10.83 8.62 12 11 8.76l1-1.36 1 1.36L15.38 12 17 10.83 14.92 8H20v6z\" />\r\n    </svg>\r\n);\r\n\r\nexport default IconGiftCertificate;\r\n","import React, {\r\n    Component,\r\n    KeyboardEvent,\r\n    KeyboardEventHandler,\r\n    MouseEventHandler,\r\n    ReactNode,\r\n} from 'react';\r\n\r\nexport interface ModalTriggerProps {\r\n    children(props: { onClick: MouseEventHandler; onKeyPress: KeyboardEventHandler<HTMLDivElement> }): ReactNode;\r\n    modal(props: ModalTriggerModalProps): ReactNode;\r\n}\r\n\r\nexport interface ModalTriggerModalProps {\r\n    isOpen: boolean;\r\n    onRequestClose(): void;\r\n}\r\n\r\nexport interface ModalTriggerState {\r\n    isOpen: boolean;\r\n}\r\n\r\nexport default class ModalTrigger extends Component<ModalTriggerProps, ModalTriggerState> {\r\n    state = {\r\n        isOpen: false,\r\n    };\r\n\r\n    private canHandleEvent = false;\r\n\r\n    componentDidMount(): void {\r\n        this.canHandleEvent = true;\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        this.canHandleEvent = false;\r\n    }\r\n\r\n    render() {\r\n        const { children, modal } = this.props;\r\n        const { isOpen } = this.state;\r\n\r\n        return (\r\n            <>\r\n                {children({\r\n                    onClick: this.handleOpen,\r\n                    onKeyPress: this.handleKeyOpen,\r\n                })}\r\n\r\n                {modal({\r\n                    isOpen,\r\n                    onRequestClose: this.handleClose,\r\n                })}\r\n            </>\r\n        );\r\n    }\r\n\r\n    private handleOpen: () => void = () => {\r\n        if (!this.canHandleEvent) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            isOpen: true,\r\n        });\r\n    };\r\n\r\n    private handleClose: () => void = () => {\r\n        if (!this.canHandleEvent) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            isOpen: false,\r\n        });\r\n    };\r\n\r\n    private handleKeyOpen: (keyboardEvent: KeyboardEvent<HTMLElement>) => void = (\r\n        keyboardEvent,\r\n    ) => {\r\n        if (keyboardEvent.key === 'Enter') {\r\n            this.handleOpen();\r\n        }\r\n    };\r\n}\r\n","import { SMALL_SCREEN_MAX_WIDTH } from './breakpoints';\r\n\r\nlet query: MediaQueryList;\r\n\r\nexport default function isSmallScreen() {\r\n    query = window.matchMedia(`(max-width: ${SMALL_SCREEN_MAX_WIDTH}px)`);\r\n\r\n    return query.matches;\r\n}\r\n","import classNames from 'classnames';\r\nimport React, { ButtonHTMLAttributes, FunctionComponent } from 'react';\r\n\r\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n    isFullWidth?: boolean;\r\n    isLoading?: boolean;\r\n    size?: ButtonSize;\r\n    testId?: string;\r\n    variant?: ButtonVariant;\r\n}\r\n\r\nexport enum ButtonVariant {\r\n    Primary = 'primary',\r\n    Secondary = 'secondary',\r\n    Action = 'action',\r\n}\r\n\r\nexport enum ButtonSize {\r\n    Small = 'small',\r\n    Tiny = 'tiny',\r\n    Large = 'large',\r\n}\r\n\r\nfunction getClassName(\r\n    props: Pick<ButtonProps, 'className' | 'isFullWidth' | 'isLoading' | 'size' | 'variant'>,\r\n) {\r\n    const { className, isFullWidth, isLoading, size, variant } = props;\r\n\r\n    return classNames(\r\n        'button',\r\n        className,\r\n        { 'button--primary': variant === ButtonVariant.Primary },\r\n        { 'button--tertiary': variant === ButtonVariant.Secondary },\r\n        { 'button--action': variant === ButtonVariant.Action },\r\n        { 'button--small': size === ButtonSize.Small },\r\n        { 'button--tiny': size === ButtonSize.Tiny },\r\n        { 'button--large': size === ButtonSize.Large },\r\n        { 'button--slab': isFullWidth },\r\n        {\r\n            'optimizedCheckout-buttonPrimary':\r\n                variant === ButtonVariant.Primary || variant === ButtonVariant.Action,\r\n        },\r\n        { 'optimizedCheckout-buttonSecondary': variant === ButtonVariant.Secondary },\r\n        { 'is-loading': isLoading },\r\n    );\r\n}\r\n\r\nconst Button: FunctionComponent<ButtonProps> = ({\r\n    children,\r\n    className,\r\n    disabled,\r\n    isFullWidth,\r\n    isLoading,\r\n    size,\r\n    testId,\r\n    type,\r\n    variant,\r\n    ...rest\r\n}) => (\r\n    <button\r\n        {...rest}\r\n        className={getClassName({ className, isFullWidth, isLoading, size, variant })}\r\n        data-test={testId}\r\n        disabled={disabled || isLoading}\r\n        type={type || 'button'}\r\n    >\r\n        {children}\r\n    </button>\r\n);\r\n\r\nexport default Button;\r\n"],"names":["getLineItemsCount","physicalItems","digitalItems","giftCertificates","customItems","length","fill","height","viewBox","width","xmlns","d","clipRule","fillRule","memo","items","itemsCount","getItemsCount","itemsText","TranslatedString","id","renderHeader","newHeaderLink","onRequestClose","headerLink","subHeaderText","isValidElement","cloneElement","className","ModalHeader","additionalClassName","href","onClick","preventDefault","onAfterOpen","isOpen","continueButton","isSmallScreen","Button","Modal","additionalBodyClassName","additionalHeaderClassName","additionalModalClassName","footer","header","OrderSummarySection","OrderSummaryItems","displayLineItemsCount","additionalLineItems","coupons","discountAmount","handlingAmount","isTaxIncluded","lineItems","onRemovedCoupon","onRemovedGiftCertificate","shippingAmount","shopperCurrency","storeCreditAmount","giftWrappingAmount","storeCurrency","subtotalAmount","taxes","total","fees","nonBundledLineItems","useMemo","removeBundledItems","renderModal","useCallback","props","ModalTrigger","modal","onKeyPress","tabIndex","productWithImage","imageUrl","alt","name","src","IconGiftCertificate","getImage","data","count","item","quantity","amount","extendedListPrice","getOrderSummaryItemImage","getDigitalItemDescription","downloadPageUrl","testId","content","rel","target","extendedComparisonPrice","amountAfterDiscount","extendedSalePrice","image","productOptions","options","map","option","value","description","giftWrapping","undefined","index","key","handleToggle","isExpanded","state","setState","collapsedLimit","getCollapsedLimit","render","this","slice","sort","variantId","summaryItemProps","renderActions","getLineItemCount","type","IconChevronUp","IconChevronDown","children","reduce","filter","parentId","canHandleEvent","handleOpen","handleClose","handleKeyOpen","keyboardEvent","componentDidMount","componentWillUnmount","Component","window","matchMedia","matches","ButtonVariant","ButtonSize","getClassName","isFullWidth","isLoading","size","variant","Primary","Secondary","Action","Small","Tiny","Large","disabled","rest"],"sourceRoot":""}