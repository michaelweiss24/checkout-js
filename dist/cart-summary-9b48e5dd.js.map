{"version":3,"file":"cart-summary-9b48e5dd.js","mappings":"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","sources":["webpack://checkout/./packages/core/src/app/cart/CartSummary.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryPrice.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummary.tsx"],"sourcesContent":["import { Checkout, ShopperCurrency, StoreCurrency } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nimport { withCheckout } from '../checkout';\r\nimport { isBuyNowCart } from '../common/utility';\r\nimport OrderSummary from '../order/OrderSummary';\r\n\r\nimport EditLink from './EditLink';\r\nimport mapToCartSummaryProps from './mapToCartSummaryProps';\r\nimport { RedeemableProps } from './Redeemable';\r\nimport withRedeemable from './withRedeemable';\r\n\r\nexport type WithCheckoutCartSummaryProps = {\r\n    checkout: Checkout;\r\n    cartUrl: string;\r\n    storeCurrency: StoreCurrency;\r\n    shopperCurrency: ShopperCurrency;\r\n    storeCreditAmount?: number;\r\n    isNewMultiShippingUIEnabled: boolean;\r\n} & RedeemableProps;\r\n\r\nconst CartSummary: FunctionComponent<\r\n    WithCheckoutCartSummaryProps & {\r\n        isMultiShippingMode: boolean;\r\n    }\r\n> = ({ cartUrl, isMultiShippingMode, isNewMultiShippingUIEnabled, ...props }) => {\r\n    const headerLink = isBuyNowCart() ? null : (\r\n        <EditLink\r\n            isMultiShippingMode={isNewMultiShippingUIEnabled && isMultiShippingMode}\r\n            url={cartUrl}\r\n        />\r\n    );\r\n\r\n    return withRedeemable(OrderSummary)({\r\n        ...props,\r\n        cartUrl,\r\n        headerLink,\r\n        isNewMultiShippingUIEnabled,\r\n    });\r\n};\r\n\r\nexport default withCheckout(mapToCartSummaryProps)(CartSummary);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nconst OrderSummaryHeader: FunctionComponent = ({ children }) => (\r\n    <header className=\"cart-header\">\r\n        <h3 className=\"cart-title optimizedCheckout-headingSecondary\">\r\n            <TranslatedString id=\"cart.cart_heading\" />\r\n        </h3>\r\n        {children}\r\n    </header>\r\n);\r\n\r\nexport default OrderSummaryHeader;\r\n","import classNames from 'classnames';\r\nimport React, { FC, ReactNode, useCallback, useEffect, useState } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\r\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nimport { ShopperCurrency } from '../currency';\r\n\r\nexport interface OrderSummaryPriceProps {\r\n    label: ReactNode;\r\n    amount?: number | null;\r\n    zeroLabel?: ReactNode;\r\n    className?: string;\r\n    testId?: string;\r\n    currencyCode?: string;\r\n    superscript?: string;\r\n    actionLabel?: ReactNode;\r\n    onActionTriggered?(): void;\r\n}\r\n\r\nexport interface OrderSummaryPriceState {\r\n    highlight: boolean;\r\n    previousAmount?: number;\r\n}\r\n\r\nfunction getDisplayValue(amount?: number | null, zeroLabel?: ReactNode): ReactNode | number {\r\n    const notYetSetSymbol = '--';\r\n\r\n    if (typeof amount === 'undefined' || amount === null) {\r\n        return notYetSetSymbol;\r\n    }\r\n\r\n    if (zeroLabel && amount === 0) {\r\n        return zeroLabel;\r\n    }\r\n\r\n    return amount;\r\n}\r\n\r\nfunction isNumberValue(displayValue: number | ReactNode): displayValue is number {\r\n    return typeof displayValue === 'number';\r\n}\r\n\r\nconst OrderSummaryPrice: FC<OrderSummaryPriceProps> = ({\r\n    amount,\r\n    actionLabel,\r\n    onActionTriggered,\r\n    children,\r\n    className,\r\n    currencyCode,\r\n    label,\r\n    superscript,\r\n    testId,\r\n    zeroLabel,\r\n}) => {\r\n    const [ highlight, setHighlight ] = useState<boolean>(false);\r\n    const [ previousAmount, setPreviousAmount ] = useState<OrderSummaryPriceProps['amount']>(amount);\r\n    const {\r\n        checkoutState: {\r\n            statuses: { isSubmittingOrder }\r\n        }\r\n    } = useCheckout();\r\n\r\n    const displayValue = getDisplayValue(amount, zeroLabel);\r\n    const isActionDisabled = isSubmittingOrder();\r\n    \r\n    useEffect(() => {\r\n        setHighlight(amount !== previousAmount);\r\n        setPreviousAmount(amount);\r\n    }, [ amount ]);\r\n\r\n    const handleTransitionEnd: (node: HTMLElement, done: () => void) => void = useCallback((node, done) => {\r\n        node.addEventListener('animationend', ({ target }) => {\r\n            if (target === node) {\r\n                setHighlight(false);\r\n                done();\r\n            }\r\n        });\r\n    }, [ setHighlight ]);\r\n\r\n    const handleActionTrigger = () => {\r\n        if (isActionDisabled || !onActionTriggered) {\r\n            return;\r\n        }\r\n\r\n        onActionTriggered();\r\n    }\r\n\r\n    return (\r\n        <div data-test={testId}>\r\n            <CSSTransition\r\n                addEndListener={handleTransitionEnd}\r\n                classNames=\"changeHighlight\"\r\n                in={highlight}\r\n                timeout={{}}\r\n            >\r\n                <div\r\n                    aria-live=\"polite\"\r\n                    className={classNames(\r\n                        'cart-priceItem',\r\n                        'optimizedCheckout-contentPrimary',\r\n                        className,\r\n                    )}\r\n                >\r\n                    <span className=\"cart-priceItem-label\">\r\n                        <span data-test=\"cart-price-label\">\r\n                            {label}\r\n                            {'  '}\r\n                        </span>\r\n                        {currencyCode && (\r\n                            <span className=\"cart-priceItem-currencyCode\">\r\n                                {`(${currencyCode}) `}\r\n                            </span>\r\n                        )}\r\n                        {onActionTriggered && actionLabel && (\r\n                            <span className=\"cart-priceItem-link\">\r\n                                <a\r\n                                    className={classNames({\r\n                                        'link--disabled': isActionDisabled,\r\n                                    })}\r\n                                    data-test=\"cart-price-callback\"\r\n                                    href=\"#\"\r\n                                    onClick={preventDefault(handleActionTrigger)}\r\n                                >\r\n                                    {actionLabel}\r\n                                </a>\r\n                            </span>\r\n                        )}\r\n                    </span>\r\n\r\n                    <span className=\"cart-priceItem-value\">\r\n                        <span data-test=\"cart-price-value\">\r\n                            {isNumberValue(displayValue) ? (\r\n                                <ShopperCurrency amount={displayValue} />\r\n                            ) : (\r\n                                displayValue\r\n                            )}\r\n                        </span>\r\n\r\n                        {superscript && (\r\n                            <sup data-test=\"cart-price-value-superscript\">{superscript}</sup>\r\n                        )}\r\n                    </span>\r\n\r\n                    {children}\r\n                </div>\r\n            </CSSTransition>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderSummaryPrice;\r\n","import {\r\n    ExtensionRegion,\r\n    LineItemMap,\r\n    ShopperCurrency,\r\n    StoreCurrency,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, ReactNode, useMemo } from 'react';\r\n\r\nimport { Extension } from '@bigcommerce/checkout/checkout-extension';\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport OrderSummaryHeader from './OrderSummaryHeader';\r\nimport OrderSummaryItems from './OrderSummaryItems';\r\nimport OrderSummaryPrice from './OrderSummaryPrice';\r\nimport OrderSummarySection from './OrderSummarySection';\r\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\r\nimport removeBundledItems from './removeBundledItems';\r\n\r\nexport interface OrderSummaryProps {\r\n    lineItems: LineItemMap;\r\n    total: number;\r\n    headerLink: ReactNode;\r\n    storeCurrency: StoreCurrency;\r\n    shopperCurrency: ShopperCurrency;\r\n    additionalLineItems?: ReactNode;\r\n}\r\n\r\nconst OrderSummary: FunctionComponent<OrderSummaryProps & OrderSummarySubtotalsProps> = ({\r\n    isTaxIncluded,\r\n    taxes,\r\n    headerLink,\r\n    lineItems}) => {\r\n    const nonBundledLineItems = useMemo(() => removeBundledItems(lineItems), [lineItems]);\r\n    const displayInclusiveTax = isTaxIncluded && taxes && taxes.length > 0;\r\n\r\n    return (\r\n        <article className=\"cart optimizedCheckout-orderSummary\" data-test=\"cart\">\r\n            <OrderSummaryHeader>{headerLink}</OrderSummaryHeader>\r\n\r\n            <OrderSummarySection>\r\n                <OrderSummaryItems displayLineItemsCount items={nonBundledLineItems} />\r\n            </OrderSummarySection>\r\n\r\n            <Extension region={ExtensionRegion.SummaryLastItemAfter} />\r\n\r\n            {/* <OrderSummarySection>\r\n                <OrderSummaryTotal\r\n                    orderAmount={total}\r\n                    shopperCurrencyCode={shopperCurrency.code}\r\n                    storeCurrencyCode={storeCurrency.code}\r\n                />\r\n            </OrderSummarySection> */}\r\n\r\n            {displayInclusiveTax && <OrderSummarySection>\r\n                <h5\r\n                    className=\"cart-taxItem cart-taxItem--subtotal optimizedCheckout-contentPrimary\"\r\n                    data-test=\"tax-text\"\r\n                >\r\n                    <TranslatedString\r\n                        id=\"tax.inclusive_label\"\r\n                    />\r\n                </h5>\r\n                {(taxes || []).map((tax, index) => (\r\n                    <OrderSummaryPrice\r\n                        amount={tax.amount}\r\n                        key={index}\r\n                        label={tax.name}\r\n                        testId=\"cart-taxes\"\r\n                    />\r\n                ))}\r\n            </OrderSummarySection>}\r\n        </article>\r\n    );\r\n};\r\n\r\nexport default OrderSummary;\r\n"],"names":["cartUrl","isMultiShippingMode","isNewMultiShippingUIEnabled","props","headerLink","url","children","className","TranslatedString","id","amount","actionLabel","onActionTriggered","currencyCode","label","superscript","testId","zeroLabel","useState","highlight","setHighlight","previousAmount","setPreviousAmount","isSubmittingOrder","displayValue","getDisplayValue","isActionDisabled","useEffect","handleTransitionEnd","useCallback","node","done","addEventListener","CSSTransition","addEndListener","classNames","in","timeout","href","onClick","preventDefault","isNumberValue","ShopperCurrency","isTaxIncluded","taxes","lineItems","nonBundledLineItems","useMemo","removeBundledItems","displayInclusiveTax","length","OrderSummarySection","OrderSummaryItems","displayLineItemsCount","items","Extension","region","map","tax","index","key","name"],"sourceRoot":""}