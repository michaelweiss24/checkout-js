{"version":3,"file":"checkout-56a0acb5.js","mappings":"8+EA2BA,SAFyB,E,SAAAA,oBAAiDC,E,wECzB3D,SAASC,EACpBC,EACAC,GAEA,IAAIC,EAEJ,YAJA,IAAAD,IAAAA,EAAA,IAIO,WACH,OAAIC,IAIJA,EAAmBF,EAAQ,aAAIC,GAGnC,CACJ,CCgIA,QAzH0B,SAAC,G,IAAEE,EAAe,kBAAEC,EAAQ,WAC5CC,GAAiB,IAAAC,UACnB,WAAM,OAAAP,EAAoC,EAAAQ,kBAAmB,CAACJ,GAAxD,GACN,CAACA,IAECK,GAAiB,IAAAF,UACnB,WAAM,OAAAP,EAAoC,EAAAU,kBAAmB,CAACN,EAAgBO,WAAxE,GACN,CAACP,IAECQ,GAA8B,IAAAL,UAChC,WACI,OAAAP,EACI,EAAAa,+BACA,CAACT,GAFL,GAIJ,CAACA,IAECU,GAAmC,IAAAP,UACrC,WACI,OAAAP,EACI,EAAAe,oCACA,CAACX,GAFL,GAIJ,CAACA,IAyECD,EAAoC,CACtCa,cAvEkB,WAClBV,IAAiBW,uBACjBR,IAAiBO,eACrB,EAqEIE,mBAnEuB,SAACC,GACxBb,IAAiBY,mBAAmBC,GACpCV,IAAiBW,cAAcD,EACnC,EAiEIE,gBA/DoB,SAACC,GACrBhB,IAAiBe,gBAAgBC,EACrC,EA8DIC,eA5DmB,WACnBjB,IAAiBkB,qBACjBf,IAAiBc,gBACrB,EA0DIE,mBAxDuB,SAACC,GACxBjB,IAAiBgB,mBAAmBC,EACxC,EAuDIC,uBArD2B,SAACC,GAC5BnB,IAAiBkB,uBAAuBC,EAC5C,EAoDIC,0BAlD8B,WAC9BpB,IAAiBoB,2BACrB,EAiDIC,8BA/CkC,SAACF,GACnCnB,IAAiBqB,8BAA8BF,GAC/ChB,IAA8BkB,gCAC9BhB,IAAmCgB,+BACvC,EA4CIC,oBA1CwB,WACxBtB,IAAiBsB,qBACrB,EAyCIC,sBAvC0B,SAACC,EAAoBC,GAC/CzB,IAAiBuB,sBAAsBC,GACvCrB,IAA8BoB,sBAAsBE,GACpDpB,IAAmCkB,sBAAsBE,EAC7D,EAoCIC,eAlCmB,SAACP,GACpBnB,IAAiB0B,eAAeP,EACpC,EAiCIQ,gBA/BoB,WACpB3B,IAAiB2B,iBACrB,EA8BIC,gBA5BoB,WACpB5B,IAAiB4B,kBACjBzB,IAA8ByB,kBAC9BvB,IAAmCuB,iBACvC,EAyBIC,aAvBiB,WACjB7B,IAAiB6B,cACrB,EAsBIC,kBApBsB,SAACL,GACvBtB,IAA8B2B,kBAAkBL,GAChDpB,IAAmCyB,kBAAkBL,EACzD,GAoBA,OACI,gBAACM,EAAAC,EAAiBC,SAAQ,CAACC,MAAO,CAAExC,iBAAgB,IAC/CE,EAGb,C,yCC3IYuC,E,uBAAZ,SAAYA,GACR,2FACA,yFACA,oFACA,gDACA,gEACH,CAND,CAAYA,IAAAA,EAAwB,KAQ7B,IAAMC,IAA6B,MACtC,uCACID,EAAyBE,kCAC7B,wCACIF,EAAyBG,iCAC7B,qCACIH,EAAyBI,+BAC7B,mBAAgCJ,EAAyBK,aACzD,4BAAwCL,EAAyBM,qB,cCNxDC,EAAY,SAAC,G,IAAEC,EAAM,SAGtB,GAEJ,SAAa,mBAFDC,EAAa,gBAAEC,EAAS,YAAEC,EAAW,cAG/CC,EAAaH,IACbI,EAASH,IACTI,EAAWH,IACTI,ECjBiB,WACzB,IAAMC,GAAmB,IAAAC,YAAWC,EAAA,GAEpC,IAAKF,EACD,MAAM,IAAIG,MAAM,4DAGpB,OAAOH,CACX,CDSiCI,GAAe,iBACtCC,EACFT,GAAcC,GAAUC,GAAYC,EAAiBM,gBAAgBb,GACnEc,EAAcrB,EAA8BO,GAYlD,OAVA,IAAAe,YAAU,WACN,GAAIF,EAGA,OAFKN,EAAiBS,gBAAgBF,EAAad,GAE5C,WACHO,EAAiBU,gBAAgBjB,EACrC,CAER,GAAG,CAACc,EAAaP,EAAkBM,EAAiBb,IAEhDa,EACO,uBAAKK,GAAIJ,IAGb,IACX,C,uCE/BaJ,GAAmB,E,SAAAhE,oBAAiDC,E,uPCRpEwE,EAAmB,SAC5BC,EACAC,GAEA,OAAQA,EAAOC,OACNC,EAAoBC,wBACd,gCAAKJ,GAAK,CAAEK,0BAA2BJ,EAAO7C,UAG9C4C,CAEnB,E,qBCTO,SAASM,EAA4B,G,IACxC1E,EAAe,kBAEf,MAAO,CACH2E,YAAa,EAAAC,qBAAqBC,eAClCC,QAAS,W,MACA9E,EAAgB+E,aAA0D,QAA7C,EAAA/E,EAAgBgF,WAAWC,KAAK9B,qBAAa,eAAEe,GAAI,CACjFgB,OAAQ,CAEJC,QAAS,CAAC,2CAGtB,EAER,CCdO,SAASC,EAA4B,G,IACxCC,EAAS,YAET,MAAO,CACHV,YAAa,EAAAC,qBAAqBU,eAClCR,QAAS,SAACG,GACE,IAAAM,EAAUN,EAAKzD,QAAO,MACxBgE,EAAqBC,SAASC,cAChC,iCAA0BL,EAAUnB,GAAE,OAEpCyB,EAASH,aAAkB,EAAlBA,EAAoBE,cAAc,UAE7CC,GACAC,OAAOC,OAAOF,EAAOJ,MAAOA,EAEpC,EAER,CCfO,SAASO,EAAkC,G,IAC9CC,EAAQ,WAER,MAAO,CACHpB,YAAa,EAAAC,qBAAqBoB,qBAClClB,QAAS,SAACG,GACE,IAAAgB,EAAShB,EAAKzD,QAAO,KAE7BuE,EAAS,CACLzB,KAAMC,EAAoBC,uBAC1BhD,QAASyE,GAEjB,EAER,CChBO,SAASC,EAA4B,G,IACxClG,EAAe,kBACfqF,EAAS,YAET,MAAO,CACHV,YAAa,EAAAC,qBAAqBuB,gBAClCrB,QAAS,W,MACCsB,GAA4D,QAA7C,EAAApG,EAAgBgF,WAAWC,KAAK9B,qBAAa,eAAEiD,eAAgB,GAEpFpG,EAAgBqG,uBAAuBhB,EAAUnB,GAAI,CACjDI,KAAM,6BACN9C,QAAS,CACL4E,aAAY,IAGxB,EAER,CCPA,ICIY7B,EDJZ,aAGI,WACYvE,EACA+F,EACAO,GAFA,KAAAtG,gBAAAA,EACA,KAAA+F,SAAAA,EACA,KAAAO,YAAAA,EALJ,KAAAC,SAAyD,CAAC,CAM/D,CAsHP,OApHU,YAAAC,eAAN,W,sHACI,SAAMC,KAAKzG,gBAAgBwG,kB,cAA3B,S,YAGJ,YAAAE,kBAAA,W,QACUtC,EAAQqC,KAAKzG,gBAAgBgF,WAC7B5B,EAAagB,EAAMa,KAAKhC,gBACxB0D,EAA6B,QAApB,EAAAvC,EAAMa,KAAK2B,iBAAS,eAAE1C,GAC/B2C,EAAqC,QAAtB,EAAAzC,EAAMa,KAAK/B,mBAAW,eAAE4D,MAAMC,SAE9CJ,GAAWE,IAIhBzD,SAAAA,EAAY4D,SAAQ,SAAC3B,GACjB,IAAM4B,EAAM,IAAIC,IAAI7B,EAAU4B,KAE9BA,EAAIE,aAAaC,IAAI,cAAe/B,EAAUnB,IAC9C+C,EAAIE,aAAaC,IAAI,SAAUT,GAC/BM,EAAIE,aAAaC,IAAI,eAAgBP,GAErC,IAAMQ,EAAO5B,SAAS6B,cAAc,QAEpCD,EAAKE,IAAM,UACXF,EAAKG,GAAK,WACVH,EAAKI,KAAOR,EAAIS,WAEHjC,SAASkC,KAEjBC,YAAYP,EACrB,IACJ,EAEM,YAAArD,gBAAN,SAAsB6D,EAAmB7E,G,8HAGrC,KAFMqC,EAAYoB,KAAKzG,gBAAgBgF,WAAWC,KAAK6C,qBAAqB9E,IAGxE,U,iBAIA,O,sBAAA,GAAMyD,KAAKzG,gBAAgBgE,gBAAgB6D,EAAW7E,I,cAAtD,SAEAyD,KAAKsB,iBAAiB1C,G,0CAED1B,OACjB8C,KAAKH,YAAY0B,IACb,EACA,CAAEC,UAAW,qBACb,IAAetE,MACf,CAAEuE,YAAa7C,EAAUnB,GAAIlB,OAAM,I,+BAMnD,YAAAiB,gBAAA,SAAgBjB,GACZyD,KAAKzG,gBAAgBmI,oBAAoBnF,GAEzC,IAAMqC,EAAYoB,KAAKzG,gBAAgBgF,WAAWC,KAAK6C,qBAAqB9E,GAE5E,GAAKqC,EAAL,CAIA,IAAM+C,EAAW3B,KAAKF,SAASlB,EAAUnB,IAEzC,GAAKkE,EAAL,CAIA,IAAsB,UAAAA,EAAA,eAAU,EAC5BC,EADc,OAElB,QAEO5B,KAAKF,SAASlB,EAAUnB,GAN/B,CANA,CAaJ,EAEA,YAAAL,gBAAA,SAAgBb,GACZ,IAAMqC,EAAYoB,KAAKzG,gBAAgBgF,WAAWC,KAAK6C,qBAAqB9E,GAE5E,OAAOsF,QAAQjD,EACnB,EAEQ,YAAA0C,iBAAR,SAAyB1C,GAAzB,WACUkD,EAAe,CACjBvI,gBAAiByG,KAAKzG,gBACtB+F,SAAUU,KAAKV,SACfV,UAAS,GAGRoB,KAAKF,SAASlB,EAAUnB,MACzBuC,KAAKF,SAASlB,EAAUnB,IAAM,IAGlC0B,OAAO4C,OAAO,GAAkBxB,SAAQ,SAACyB,GACrC,IAAMC,EAAiBD,EAAqBF,GAExC,EAAKI,iBAAiBD,EAAe/D,YAAa+D,IAClD,EAAKnC,SAASlB,EAAUnB,IAAI0E,KACxB,EAAK5I,gBAAgB6I,uBACjBxD,EAAUnB,GACVwE,EAAe/D,YACf+D,EAAe5D,SAI/B,GACJ,EAEQ,YAAA6D,iBAAR,SACIrE,EACAQ,GAEA,OAAOA,EAAQH,cAAgBL,CACnC,EACJ,EA7HA,ICIA,SAAYC,GACR,sDACH,CAFD,CAAYA,IAAAA,EAAmB,KAUxB,IAAMuE,EAAoB,SAAC,G,IAC9B9I,EAAe,kBACfC,EAAQ,WACRqG,EAAW,cAEL,GAA6B,IAAAyC,YAAW5E,EAAkB,CAC5DM,2BAA2B,IADxBuE,EAAc,KAAEjD,EAAQ,KAKzBkD,EAAkB,CACpB1F,iBAHqB,IAAI2F,EAAiBlJ,EAAiB+F,EAAUO,GAIrE0C,eAAc,GAGlB,OACI,gBAACtF,EAAA,EAAiBpB,SAAQ,CAACC,MAAO0G,GAAkBhJ,EAE5D,C,kBC9CA,IAAKkJ,E,iBAAL,SAAKA,GACD,oBACA,qBACH,CAHD,CAAKA,IAAAA,EAAW,KAKhB,S,wGCkHA,SAAe,EAAAC,EAAA,IAhCR,SACHC,EACA,G,IAAEC,EAAO,UAAEhF,EAAI,OAIP,EAEJ+E,EAAO,mBAFKnG,EAAS,YAAEqG,EAAmB,sBAAEC,EAAoB,uBAAEC,EAAuB,0BAAEC,EAAwB,2BAIjHrG,EAASH,IAETyG,GACF,EAAAC,EAAA,GACIvG,aAAM,EAANA,EAAQwG,iBACR,sDAGR,MAAO,CACHC,UAAWxF,IAAS6E,EAAA9G,EAAY0H,QAC1BR,IACAC,IACNQ,OACI1F,IAAS6E,EAAA9G,EAAY0H,QACfN,EAAwBH,EAAQW,aAChC3F,IAAS6E,EAAA9G,EAAY6H,SACrBR,EAAyBJ,EAAQW,kBACjCtK,EACVgK,sBAAqB,EAE7B,GAEA,EAAqD,IAAAQ,OAlF7C,SAAC,G,IACDL,EAAS,YACTE,EAAM,SACGI,EAA0B,UACnC,IAAAT,sBAAAA,OAAqB,IAAG,GAAK,EAE3BL,GAAU,EAAAe,EAAA,GAAgBD,EAA4BN,GAG5D,OAFgB,EAAAQ,EAAA,GAAqBhB,EAASK,EAAuBK,GAGjE,uBAAKO,UAAU,iCAAgC,YAAW,mBACpDjB,EAAQkB,WAAalB,EAAQmB,WAC3B,qBAAGF,UAAU,oBACT,wBAAMA,UAAU,cAAc,UAAGjB,EAAQkB,UAAS,MAClD,wBAAMD,UAAU,eAAejB,EAAQmB,YAI7CnB,EAAQoB,OAASpB,EAAQqB,UACvB,qBAAGJ,UAAU,iBACT,wBAAMA,UAAU,gBAAgB,UAAGjB,EAAQqB,QAAO,MAClD,wBAAMJ,UAAU,OAAOjB,EAAQoB,QAIvC,uBAAKH,UAAU,OACX,qBAAGA,UAAU,gCACT,wBAAMA,UAAU,kBAAkB,UAAGjB,EAAQsB,SAAQ,MACpDtB,EAAQuB,UACL,wBAAMN,UAAU,kBAAkB,aAAMjB,EAAQuB,YAIxD,qBAAGN,UAAU,iBACRjB,EAAQwB,MAAQ,wBAAMP,UAAU,YAAY,UAAGjB,EAAQwB,KAAI,OAC3DxB,EAAQyB,mBACL,wBAAMR,UAAU,UAAU,UAAGjB,EAAQyB,kBAAiB,OAEzDzB,EAAQ0B,YACL,wBAAMT,UAAU,eAAe,UAAGjB,EAAQ0B,WAAU,QAEvD1B,EAAQ2B,kBACL,wBAAMV,UAAU,gBAAgB,UAAGjB,EAAQ2B,iBAAgB,SAjC7D,IAuCtB,I,sGC9EaC,EAAmB,WAMhC,SAAe,IAAAC,UAAQ,SAAuC,G,IAC1DC,EAAU,aACV,IAAAC,UAAAA,OAAS,IAAG,aAAM,EAAS,EAC3B,IAAAC,uCAAAA,OAAsC,IAAG,GAAK,EAC9C,IAAA3B,sBAAAA,OAAqB,IAAG,GAAK,EAE7B,OAAO,SAAO,iBACPyB,EACEG,QAAO,SAAC,GAAe,OAAP,QAAO,IACvBC,QAAO,SAACC,EAAQ,G,IAAEC,EAAI,OAAEC,EAAQ,WAAEC,EAAK,QAAEC,EAAS,YAwB/C,OAvBAJ,EAAOC,IAAQ,UAEXC,IACAF,EAAOC,GAAQD,EAAOC,GACjBI,OACAH,SAASN,EAAU,WAAY,CAAEO,MAAK,EAAEF,KAAI,MAGxC,aAATA,GAAuBG,GAAaP,IACpCG,EAAOC,GAAQD,EAAOC,GACjBK,IAAIF,EAAWR,EAAU,MAAO,CAAEO,MAAK,EAAEF,KAAI,EAAEK,IAAKF,OAG/C,aAATH,GAAgC,aAATA,IAAwBG,GAAalC,IAC7D8B,EAAOC,GAAQD,EAAOC,GACjBK,IAAIF,EAAWR,EAAU,MAAO,CAAEO,MAAK,EAAEF,KAAI,EAAEK,IAAKF,MAG7DJ,EAAOC,GAAQD,EAAOC,GAAMM,QACxBd,EACAG,EAAU,UAAW,CAAEK,KAAI,EAAEE,MAAK,KAG/BH,CACX,GAAG,CAAC,KACTQ,QACC,EAAAC,EAAA,GAAoC,CAAEd,WAAU,EAAEC,UAAS,IAEnE,IClCO,SAASc,EACZC,GAEA,IAAMC,EAAoE,CACtEpC,YAAa,kBACbO,UAAW,qBACXC,SAAU,oBACVE,QAAS,uBACTC,SAAU,yBACVC,SAAU,yBACVC,KAAM,eACNwB,gBAAiB,gBACjBC,oBAAqB,gBACrBvB,WAAY,sBACZN,MAAO,wBAGX,OAAO,SAACpG,EAAM,G,IAAEsH,EAAK,QAAEF,EAAI,OAAEc,EAAG,MAAET,EAAG,MACjC,GAAKK,EAIL,MAAa,aAAT9H,EACI+H,EAAiCX,GAC1BU,EAASf,UACZ,UAAGgB,EAAiCX,GAAK,oBAI1CU,EAASf,UAAU,gCAAiC,CAAEO,MAAK,IAGzD,QAATtH,GAAkByH,EACXK,EAASf,UAAU,2BAA4B,CAAEO,MAAK,EAAEG,IAAG,IAGzD,QAATzH,GAAkBkI,EACXJ,EAASf,UAAU,2BAA4B,CAAEO,MAAK,EAAEY,IAAG,IAGzD,YAATlI,EACO8H,EAASf,UAAU,mCAAoC,CAAEO,MAAK,SADzE,CAGJ,CACJ,CAEA,SAAe,IAAAT,UAAQ,SAA8C,G,IACjEC,EAAU,aACVgB,EAAQ,WACRd,EAAsC,yCACtC3B,EAAqB,wBAErB,OAAO8C,EAA8B,CACjCrB,WAAU,EACVC,UAAWc,EAAyBC,GACpCd,uCAAsC,EACtC3B,sBAAqB,GAE7B,G,6DCtEe,SAAS+C,EACpBpD,EACA8B,EACAzB,GAIA,OAFsB,OAAqC,CAAEyB,WAAU,EAAEzB,sBAAqB,IAEzEgD,aAAY,OAAuBvB,EAAY9B,GACxE,C,4DCRe,SAASgB,EACpBhB,EACAK,EACAK,GAEA,IAAI4C,IAAW,IAAAC,SAAQvD,GASvB,OAPIU,IAAWL,IACXiD,GAAU,OACNtD,EACAU,EAAOuB,QAAO,SAACuB,GAAU,OAACA,EAAMC,MAAP,MAI1BH,CACX,C,6DCZe,SAASI,EACpBhD,EACAV,GAEA,IAAMd,GAAS,iBACRwB,EAAOwB,QACN,SAACyB,EAAmB,G,MAwF5BC,EAxF8BxB,EAAI,OAAEqB,EAAM,SAAEI,EAAS,YAAWC,EAAY,UAChE,GAAIL,EAAQ,CACHE,EAAkBI,eACnBJ,EAAkBI,aAAe,CAAC,GAGtC,IAAMP,EACFxD,GACAA,EAAQ+D,cACR/D,EAAQ+D,aAAaC,MAAK,SAAC,GAAgB,OAAP,YAAmB5B,CAAZ,IAEzC6B,EAAaT,GAASA,EAAMS,WAQlC,OANAN,EAAkBI,aAAa3B,GAAQ8B,EACnCL,EACAI,EACAH,GAGGH,CACX,CAEA,GAoES,kBAFrBC,EAlEyCxB,IAoEY,sBAAdwB,EApES,CAC1BK,EAAajE,GAAWA,EAAQoC,GAEtCuB,EAAkBvB,IAIjB,QAJyB,EAAA8B,EACtBL,EACAI,EACAH,UACH,eAAE1F,aAAc,EACrB,CAEA,OAAOuF,CACX,GACA,CAAC,IAgBT,OAZAzE,EAAOiF,mBACHnE,QAAyC3J,IAA9B2J,EAAQmE,mBAAkCnE,EAAQmE,uBAGlC9N,IAA3B6I,EAAO8D,kBACP9D,EAAO8D,gBAAkB,SAGM3M,IAA/B6I,EAAO+D,sBACP/D,EAAO+D,oBAAsB,IAG1B/D,CACX,CAEA,SAASgF,EACLL,EACAI,EACAH,GAEA,GAAIG,QACA,OAgBR,SAAyBJ,EAAoBC,GACzC,GAAIA,GAAgBD,IAAc,IAAqBO,KACnD,OAAO,IAAIC,KAAKP,GAGpB,GAAID,IAAc,IAAqBS,SACnC,MAAO,GAGX,OAAOR,GAAgB,EAC3B,CA1BeS,CAAgBV,EAAWC,GAGtC,GAAID,IAAc,IAAqBO,MAA8B,iBAAfH,EAUtD,OAAOA,EATH,GAAIA,EAAY,CACN,MAAqBA,EAAWO,MAAM,KAArCC,EAAI,KAAEC,EAAK,KAAEC,EAAG,KAEvB,OAAO,IAAIN,KAAKO,OAAOH,GAAOG,OAAOF,GAAO,EAAGE,OAAOD,GAC1D,CAMR,C,iDClFA,SAFsB,E,SAAA,GAAgB,EAAA5L,EAAkB,CAAE8L,kBAAmB,iB,uMCD7E,wBAIA,QAHI,YAAAC,YAAA,WACI,OAAO,CACX,EACJ,EAJA,G,yBCAA,cACI,WAAYC,GACR,QAAK,UAAC,CACF3C,KAAM,sCACN2C,QAAO,KACT,K,OAEF,OAAe,EAAMC,EAAiCC,W,CAC1D,CACJ,OATsD,oBAStD,EATA,CAAsDC,EAAA,G,QCItD,WACI,WAAoBC,EAAsCC,GAAtC,KAAAD,mBAAAA,EAAsC,KAAAC,YAAAA,CAA+B,CAe7F,OAbI,YAAAN,YAAA,W,IAAA,WAAY,kDACR,IAAMK,EAAqBE,EAAIpD,QAAO,SAACrH,GAAO,SAAKuK,mBAAmBG,QAAQ1K,IAAO,CAAvC,IAE9C,GAAkC,IAA9BuK,EAAmBI,OACnB,OAAO,EAGX,MAAM,IAAIP,EACN7H,KAAKiI,YAAYrD,UAAU,sCAAuC,CAC9DyD,QAASL,EAAmBM,KAAK,QAG7C,EACJ,EAhBA,G,eCCMC,EAAsB,CAAC,WAAY,WAAY,YAAa,YAAa,SAAU,c,mECH5EC,GAAgB,EAAAC,EAAA,GAAgBxL,EAAA,EAAkB,CAC3DyK,kBAAmB,kB,oFCUvB,yB,qDAII,EAAA/J,MAA+B,CAC3B+K,WAAW,G,CA2BnB,QAhC8C,oBAU1C,YAAAC,kBAAA,sBACYC,EAAiB5I,KAAK6I,MAAK,aAEnC7I,KAAK8I,UAAYC,YAAW,WACxB,EAAKC,SAAS,CAAEN,WAAW,GAC/B,GAAGE,EACP,EAEA,YAAAK,qBAAA,WACIC,cAAclJ,KAAK8I,UACvB,EAEA,YAAAK,OAAA,WACY,IAAAC,EAAapJ,KAAK6I,MAAK,SACvBH,EAAc1I,KAAKrC,MAAK,UAEhC,OACI,gBAAC0L,EAAA,EAAc,CAACC,wBAAsB,EAACC,UAAWb,GAC9C,gBAACc,EAAA,EAAc,CAAChL,KAAM,CAAEgC,IAAK4I,GAAY3L,GAAG,4BAGxD,EACJ,EAhCA,CAA8C,EAAAgM,e,ICfzCC,E,6CAAL,SAAKA,GACD,gBACA,gBACA,mCACA,iCACA,wDACA,gCACH,CAPD,CAAKA,IAAAA,EAAgB,KASrB,U,0BCkBA,QAjBI,SAAC,G,IAAEC,EAAY,eAAEnQ,EAAQ,WAAE+P,EAAS,YAE9BK,EACF,uBAAK9F,UAAU,oCACV+F,MAAMF,GACFG,KAAK,GACLC,KAAI,SAACC,EAAIC,GAAM,OACZ,uBAAKnG,UAAU,qBAAqBoG,IAAK,6BAAsBD,IAC3D,uBAAKnG,UAAU,mBAFP,KAQ5B,OAAO,gBAACqG,EAAA,EAAe,CAAO3Q,SAAQ,EAAE+P,UAAS,EAAEa,oBAbxB,EAa4CR,SAAQ,GACnF,ECrBe,SAASS,EAAiBC,GACrC,MAAO,oBAAqBA,CAChC,CCJA,IAAMC,EAAY,WAGLC,EAA8B,CACvC,YACAD,EACA,wBACA,kBACA,wBACA,aACA,iBACA,sBACA,uBACA,mBACA,mBACA,wBACA,eACA,qBACA,uBACA,yBACA,mBACA,kBACA,qBACA,0BACA,0BACA,yBAGSE,EAAwB,SAACC,GAClC,OAAOA,EAAU5F,QAAO,SAACzJ,GACrB,QAAIA,IAAakP,IAAcF,EAAiBC,WAIA,IAAzCE,EAAkBrC,QAAQ9M,EACrC,GACJ,EClCe,SAASsP,EAEpBC,GAEA,MAAO,eAAgBA,CAC3B,CCAe,SAASC,EACpBC,GAEA,OCFW,SACXC,EACAC,GAIA,I,QAFMC,EAAwC,GAEjB,MAAA9L,OAAO+L,QAAQF,GAAf,eAA4B,CAA9C,WAAIJ,GAAF,KAAW,MACpB,GAAKD,EAA0CC,GAI/C,IAAyB,UAAAA,EAAUO,WAAV,eAAsB,CAG3C,IAHC,IAAMC,EAAU,KACXC,EAAS,CAAEC,UAAWV,EAAWrF,QAAS,EAAGgG,SAAS,GAEjC,MAAApM,OAAO+L,QAAQE,GAAf,eAA4B,CAA5C,WAAClB,EAAG,KAAEpO,EAAK,KAClB,GAAIoO,KAAOa,GAASA,EAAMb,KAASpO,EAAO,CACtCuP,EAAO9F,QAAU,EACjB,KACJ,CAEIwF,EAAMb,KAASpO,GACfuP,EAAO9F,UAGC,YAAR2E,IAA+B,IAAVpO,IACrBuP,EAAOE,SAAU,EAEzB,CAEAN,EAAQ9I,KAAKkJ,EACjB,CACJ,CAEA,IAAMG,EAAUP,EACXQ,MAAK,SAACC,EAAGC,GAAM,OAAAA,EAAEpG,QAAUmG,EAAEnG,OAAd,IACfT,QAAO,SAACuG,GAAW,OAAAA,EAAO9F,QAAU,CAAjB,IAAoB,GAE5C,OAAyB,QAAlB,EAAAiG,aAAO,EAAPA,EAASF,iBAAS,QAA4C,QAAxC,EAAAL,EAAQpE,MAAK,SAACwE,GAAW,OAAAA,EAAOE,OAAP,WAAe,eAAED,SAC3E,CDpCWM,CACHd,EACA,EAAQ,OAEhB,C,QEAA,yB,8CAqCA,QArC4C,oBACxC,YAAAnC,kBAAA,W,MACU,EAOF3I,KAAK6I,MANLxL,EAAW,cACXwO,EAAU,aACVC,EAA2B,8BAC3BzQ,EAAQ,WACR0Q,EAAO,UACP,IAAAC,QAAAA,OAAO,IAAG,IAAAC,KAAI,EAGZC,GAAeJ,GAA6C,oBAAbzQ,GAA+C,0BAAbA,EAEjF,CAAC,EADD,CAAE8Q,aAxBa,IA2BrBN,IAAU,GACNxQ,SAAQ,IACPA,IAAQ,gCACF6Q,GAAY,CACf9K,UAAW/D,EACX0O,QAAO,EACPC,QAAS,WAAM,OAAAA,EAAQ3Q,EAAR,I,GAG3B,EAEA,YAAA4N,qBAAA,WACU,MAA6BjJ,KAAK6I,OAExCuD,EAFoB,gBAEP,CAAE/Q,SAFe,YAGlC,EAEA,YAAA8N,OAAA,WACY,IAAA9L,EAAgB2C,KAAK6I,MAAK,YAElC,OAAO,uBAAKpL,GAAIJ,GACpB,EACJ,EArCA,CAA4C,EAAAoM,e,gBCZ7B,SAAS4C,GACpBC,GAEA,IAAI9L,EAUJ,OAPIA,EADA8L,IAAW,EAAAC,GAAA,KACL,uCAAgCD,EAAQrL,YAExC,UAAGqJ,OAAOkC,SAASC,SAASC,QAAQ,MAAO,IAAG,uBAGxDpC,OAAOkC,SAASE,QAAQlM,GAEjB,IAAImM,QAAQ,EAAAV,KACvB,CCiBA,SA1B+D,SAAC,GAC5D,IAAAJ,EAAU,aACVE,EAAO,UACP,IAAAC,QAAAA,OAAO,IAAG,IAAAC,KAAI,EACXW,GAAI,cAJqD,oCAMtDC,GAAgB,IAAA7P,YAAW8P,EAAA,GAC3BC,GAAoB,IAAAC,cACtB,SAACC,GACG,OAAApB,GAAW,gCACJoB,GAAO,CACVC,SAAU,CACN9L,UAAWwL,EAAKvP,YAChB8P,cAAeN,aAAa,EAAbA,EAAelH,SAASf,UAAU,sBACjDwI,cAAeP,aAAa,EAAbA,EAAelH,SAASf,UAAU,sBACjDmH,QAAO,EACPC,QAAS,WAAM,OAAAA,EAAQY,EAAKvR,SAAb,EACfgS,mBAAoBhB,MAR5B,GAWJ,CAACR,EAAYgB,EAAed,EAASa,EAAKvP,cAG9C,OAAO,gBAAC,GAAc,eAACwO,WAAYkB,GAAuBH,GAC9D,ECCA,SAzBqE,SAAC,GAClE,IAAAvR,EAAQ,WACRwQ,EAAU,aACVE,EAAO,UACP,IAAAC,QAAAA,OAAO,IAAG,IAAAC,KAAI,EACXW,GAAI,cAL2D,+CAO5DC,GAAgB,IAAA7P,YAAW8P,EAAA,GAC3BC,GAAoB,IAAAC,cACtB,SAACC,G,MACG,OAAApB,GAAW,gCACJoB,KAAO,MACT5R,GAAW,CACR+F,UAAWwL,EAAKvP,YAChB0O,QAAO,EACPC,QAAS,WAAM,OAAAA,EAAQ3Q,EAAR,EACfiS,WAAYjB,IACf,IAPL,GASJ,CAACR,EAAYgB,EAAed,EAASa,EAAKvP,cAG9C,OAAO,gBAAC,GAAc,eAACwO,WAAYkB,EAAmB1R,SAAUA,GAAcuR,GAClF,ECwBA,SAzCmF,SAAC,GAChF,QAAAd,4BAAAA,OAA2B,OAAO,EAClCC,EAAO,UACP1Q,EAAQ,WACLuR,GAAI,cAJyE,sDAMhF,OAAQvR,GACJ,IAAK,WACD,OACI,gBAAC,IAAc,eACXgC,YAAa,UAAGhC,EAAQ,kBACxB6O,IAAK7O,EACLA,SAAUA,EACV0Q,QAASA,GACLa,IAIhB,IAAK,iBACL,IAAK,uBACD,OACI,gBAAC,IAAoB,eACjBvP,YAAa,UAAGhC,EAAQ,kBACxB6O,IAAK7O,EACLA,SAAUA,EACV0Q,QAASA,GACLa,IAKpB,OAAO,gBAAC,GAAc,eACdvP,YAAa,UAAGhC,EAAQ,kBACxByQ,4BAA6BA,EAC7B5B,IAAK7O,EACLA,SAAUA,EACV0Q,QAASA,GACLa,GAEhB,EC1BA,IAAMW,GAAoB,CACtB,iBACA,uBACA,uBAmHJ,UAAe,IAAA7J,OAAK,EAAAf,EAAA,IAzCpB,SAA2C,G,MACvC6K,EAAa,gBACbjU,EAAe,kBAGX,EAWCiU,EAAa,KAVV/Q,EAAS,YACTgR,EAAW,cACXC,EAAqB,wBAGrBC,EAKHH,EAAa,+BAFVI,EAEHJ,EAAa,kCACZ5Q,EAASH,IACToR,EAAqBpD,EAAsE,QAAhD,EAAA7N,aAAM,EAANA,EAAQwG,iBAAiB0K,+BAAuB,QAAI,IAC/FC,EAAWN,IAEjB,IAAKC,IACD,OAAO,KAGX,IAAK9Q,GAAwC,IAA9BiR,EAAmBzF,UAAiB2F,aAAQ,EAARA,EAAUC,SACzD,OAAO,KAGX,IAAMzE,EAAYsE,EAAmB/I,QACjC,SAACzJ,GAAa,OAAAwG,QAAQ+L,EAA2BvS,KAAcsS,EAAsBtS,EAAvE,IAChB+M,SAAWyF,EAAmBzF,OAEhC,MAAO,CACH7O,gBAAe,EACfiU,cAAa,EACbK,mBAAkB,EAClBtE,UAAS,EAEjB,GAEoB,EA9GwG,SACxH,G,IACIsE,EAAkB,qBAClBtU,EAAe,kBACfiU,EAAa,gBACbS,EAAoB,uBACpB1E,EAAS,YACT2E,EAAmB,sBACnBC,EAAgB,mBAChBC,EAAmB,sBAEfzI,GAAa,SAAW,SAEhC,IACIsI,EAAqBJ,EACzB,CAAE,MAAOQ,GACL,OAAO,IACX,CAiCA,OACI,uBAAKvK,UAAU,4BACVhF,MAAQoP,EAAsB,CAAEI,SAAU,WAAYC,KAAM,IAAKC,IAAK,cAAYtV,GAEnF,yBACI,gBAACuV,EAAA,EAAgB,CAAChR,GAAG,4BAEzB,uBAAKqG,UAAU,gCACX,gBAAC,EAA8B,CAAC6F,aAAckE,EAAmBzF,OAAQmB,UAAWA,GAChF,uBAAKzF,UAAU,kBAxCH+J,EAAmB9D,KAAI,SAAC1O,GAChD,GAAI6S,GAtBa,SAAC7S,GAA8B,OAAAkS,GAAkBmB,SAASrT,EAA3B,CAsBrBsT,CAAiBtT,GACxC,OAAO,KAGX,IAAMuT,EAAyB/D,EAAsB,CAAEpN,GAAIpC,IAE3D,OAAKuT,EAYE,gBAACA,EAAsB,CAClBrV,gBAAiBA,EACjBiU,cAAeA,EACfnQ,YAAa,UAAGhC,EAAQ,kBACxB6O,IAAK7O,EACLsK,SAAUA,EACVtK,SAAUA,EACV8S,iBAAkBA,EAClBC,oBAAqBA,IAnBtB,gBAAC,GAAwB,CAC5BhC,aAAc7S,EAAgBsV,qBAC9BhD,WAAYtS,EAAgBuV,mBAC5BhD,6BAA6B,EAC7B5B,IAAK7O,EACLA,SAAUA,EACV2Q,QAASoC,EACTrC,QAASoC,GAcrB,OAgBQ,uBAAKrK,UAAU,sBAAqB,4BAAM,gBAAC2K,EAAA,EAAgB,CAAChR,GAAG,qBAG3E,K,gBCpFA,SAfqB,WACjB,IAAMsR,GAAmB,IAAA/R,YAAWrB,GAAAC,GAEpC,IAAKmT,EACD,MAAM,IAAI7R,MAAM,2DAGpB,OAAO,IAAAxD,UACH,WAAM,OACFJ,iBAAkByV,EAAiBzV,iBADjC,GAGN,CAACyV,GAET,E,2CCiFA,UAAe,IAAArL,OAvEgE,SAAC,G,IAC5EsL,EAAgC,mCAChC3T,EAAQ,WACRwT,EAAoB,uBACpBI,EAA4B,+BAC5BH,EAAkB,qBAClB,IAAAX,iBAAAA,OAAgB,IAAG,IAAAlC,KAAI,EAEjB,GAAsC,IAAAiD,WAAkB,GAAvDC,EAAc,KAAEC,EAAiB,KAChC9V,EAAqB,KAAc,iBA2B3C,IAzBA,IAAAgE,YAAU,WACNuR,EAAqB,CAAExT,SAAQ,IAE/B,IACIyT,EAAmB,CACfzT,SAAQ,EACRgU,KAAM,CACFC,OAAQ,SAACC,EAAgB1U,GACrBuU,EAAkBG,GAEd1U,GACAvB,EAAiBwB,uBAAuB,CAACyU,eAAc,GAE/D,IAGZ,CAAE,MAAOlB,GACLF,EAAiBE,EACrB,CAEA,OAAO,WACHQ,EAAqB,CAAExT,SAAQ,GACnC,CACJ,GAAG,CAACyT,EAAoBD,EAAsBxT,EAAU8S,KAEnDgB,EACD,OAAO,KAGX,IC9DFK,EDkEE,OACI,uBAAK1L,UAAU,qBAAqBkI,QClEjC,SAACyD,GACJA,EAAMC,kBAEFF,GACAA,EAAGC,EAEX,GD6DQ,qBAAG3L,UAAU,8BACT,gBAAC2K,EAAA,EAAgB,CACbjQ,KAAM,CACFmR,SAAU,OACVC,aAAc,iBAElBnS,GAAG,8BAGX,gBAACoS,GAAA,GAAM,CACH/L,UAAU,4DAA2D,YAC3D,2BACVyF,UAAWyF,EACXhD,QAnBc,kE,iEACtB,SAAMiD,EAA6B,CAAE5T,SAAQ,K,cAA7C,S,aAoBQ,gBAACyU,GAAA,EAAQ,CAACC,oBAAoB,yCAC9B,gBAACtB,EAAA,EAAgB,CACbjQ,KAAM,CAAEoR,aAAc,iBACtBnS,GAAG,gCAKvB,IEdA,UAAe,EAAAkF,EAAA,IAzBsB,SAAC,G,IAClCpJ,EAAe,kBACfiU,EAAa,gBAGT,EAEAA,EAAa,KAFL9Q,EAAW,cAAED,EAAS,YAClBuS,EACZxB,EAAa,0CAEX3Q,EAAWH,IACXE,EAASH,IAEf,OAAKI,GAAaD,EAIX,CACHiS,qBAAsBtV,EAAgBsV,qBACtCI,6BAA8B1V,EAAgB0V,6BAC9CH,mBAAoBvV,EAAgBuV,mBACpCE,iCAAkCA,IAClCgB,2BAA4BpT,EAAOwG,iBAAiB4M,iCAA8B9W,GAR3E,IAUf,GAEA,EAA0D,IAAAwK,OAjDtD,SAAC,GACD,IAAAsM,EAA0B,6BAC1Bf,EAA4B,+BACzBrC,GAAI,cAHN,+DAKOtT,EAAqB,KAAc,iBAQ3C,OAAI0W,IAA+BC,GAAA,EAAgBC,KACxC,gBAAC,IAAsB,eAClBjB,6BAR2B,SAAChC,GAGxC,OAFA3T,EAAiB0B,4BAEViU,EAA6BhC,EACxC,EAKgB5R,SAAU2U,GACNpD,IAIb,IACX,K,gBCvCA,SAZkE,SAAC/D,GAK/D,OAJA,IAAAvL,YAAU,WACN6S,IACJ,GAAG,IAGC,uBAAKrM,UAAU,sBACX,gBAAC,GAAc,iBAAK+E,IAGhC,EAIA,IAAMsH,GAAuB,W,MACzB,GAAKnR,SAASC,cAAc,8BAA5B,CAIA,IAAMmC,EAAYpC,SAASC,cAAc,kCACnCmR,EAAoC,QAArB,EAAAhP,aAAS,EAATA,EAAWiP,kBAAU,eAAEpR,cAAc,2BAEtDmC,GAAagP,EACbA,EAAatR,MAAMwR,OAAS,OAKhCvH,WAAWoH,GAAsB,GAXjC,CAYJ,ECvBM,GAAY,WAGL,GAA8B,CACvC,YACA,GACA,wBACA,kBACA,wBACA,WACA,aACA,iBACA,sBACA,uBACA,mBACA,mBACA,wBACA,eACA,qBACA,0BACA,uBACA,yBACA,mBACA,kBACA,qBACA,2BAoHJ,UAAe,IAAAzM,OA3FwD,SAAC,GACpE,IAAAuK,EAAoB,uBACpBlC,EAAO,UACP,IAAAwE,eAAAA,OAAc,IAAG,GAAK,EACtB,IAAAzE,4BAAAA,OAA2B,OAAO,EAClCpB,EAAS,YACT,IAAA8F,SAAAA,OAAQ,IAAG,GAAK,EACb5D,GAAI,cAP6D,0GAS9D6D,EAnBgC,SAAC/F,GACvC,OAAO,EAAY5F,QAAO,SAACzJ,GACvB,QAAIA,IAAa,KAAcgP,EAAiBC,WAIA,IAAzC,GAAkBnC,QAAQ9M,EACrC,GACJ,CAW+BqV,CAA2BhG,QAAAA,EAAa,IAEnE,GAAkC,IAA9B+F,EAAmBrI,OACnB,OAAO,KAGX,GAAI6F,EACA,IACIA,EAAqBwC,EACzB,CAAE,MAAOpC,GACL,KAAIA,aAAiBnR,OAAS6O,GAG1B,MAAMsC,EAGV,OALItC,EAAQsC,GAKL,IACX,CAGJ,OACI,iCACMkC,IAAmBC,GACjB,yBACI,gBAAC/B,EAAA,EAAgB,CAAChR,GAAG,+BAI7B,uBAAKqG,UAAU,kBACV2M,EAAmB1G,KAAI,SAAC1O,GACrB,MAAiB,aAAbA,EAEI,gBAAC,IAAc,eACXgC,YAAa,UAAGhC,EAAQ,kBACxB6O,IAAK7O,EACLA,SAAUA,EACV0Q,QAASA,GACLa,IAKC,cAAbvR,EAEI,gBAAC,IAAiB,eACdgC,YAAa,UAAGhC,EAAQ,kBACxB6O,IAAK7O,EACLA,SAAUA,EACV0Q,QAASA,GACLa,IAKC,mBAAbvR,GAA8C,yBAAbA,EAE7B,gBAAC,IAAoB,eACjBgC,YAAa,UAAGhC,EAAQ,kBACxB6O,IAAK7O,EACLA,SAAUA,EACV0Q,QAASA,GACLa,IAMZ,gBAAC,GAAc,eACXvP,YAAa,UAAGhC,EAAQ,kBACxByQ,4BAA6BA,EAC7B5B,IAAK7O,EACLA,SAAUA,EACV0Q,QAASA,GACLa,GAGhB,KAIhB,IChJA,IAAM+D,GAA4B,CAAC,aAEtBC,GAA2B,SAACvV,GACrC,OAAOsV,GAA0BxI,QAAQ9M,IAAa,CAC1D,EAEe,SAASwV,GACpB9C,EACAlR,EACAxB,GAEA,QAAIuV,GAAyBvV,KAIzB0S,EAASC,UAKN,IAAA8C,OACHjU,EAASkU,UACT,SAACC,GAAY,OAAmD,IAAnD,GAAkB7I,QAAQ6I,EAAQC,WAAlC,GAErB,CCoFA,UAAe,EAAAtO,EAAA,IA7Bf,SAA4C,G,IACxCpJ,EAAe,kBACfiU,EAAa,gBAGT,EAEAA,EAAa,KAFL0D,EAAiB,oBAAExU,EAAW,cAAE+Q,EAAW,cACvC0D,EACZ3D,EAAa,sBAEX4D,EAAiBF,IACjBrU,EAAWH,IACXqR,EAAWN,IAEjB,IAAK2D,IAAmBvU,IAAakR,EACjC,OAAO,KAGX,IAAM1S,EACFwB,EAASkU,UAAyC,IAA7BlU,EAASkU,SAAS3I,OAAevL,EAASkU,SAAS,GAAGE,WAAa,GAE5F,MAAO,CACHpW,MAAOuW,EAAevW,OAASkT,EAASlT,MACxCQ,SAAQ,EACRgW,WAAYR,GAAW9C,EAAUlR,EAAUxB,GAC3C8V,aAAcA,IACdG,QAAS/X,EAAgBgY,gBAEjC,GAEA,EAnF2F,SAAC,G,IACxF1W,EAAK,QACLQ,EAAQ,WACRgW,EAAU,aACVF,EAAY,eACZ,IAAAK,UAAAA,OAAS,IAAG,IAAAvF,KAAI,EAChB,IAAAwF,eAAAA,OAAc,IAAG,IAAAxF,KAAI,EACrBqF,EAAO,UAqBP,OACI,uBAAKxN,UAAU,eAAc,YAAW,0BACpC,uBACIA,UAAU,qDAAoD,YACpD,iBAETjJ,GAGL,uBAAKiJ,UAAU,wBACVuN,GACG,gBAACxB,GAAA,GAAM,CACHtG,UAAW4H,EACXnF,QAhCuB,kE,oGAE/B4E,GAAyBvV,GACzB,GAAMiW,EAAQ,CAAEjW,SAAQ,KADxB,M,cACA,SACAmW,EAAU,CAAEE,aAAa,IACzBpH,OAAOkC,SAASmF,S,aAEhB,SAAML,K,OAAN,SACAE,EAAU,CAAEE,aAAa,I,uDAGzB,EAAAE,GAAA,GAAgB,IAAyB,2BAAf,EAAM/T,KAChC2T,EAAU,CAAEE,aAAa,IAEzBD,EAAe,G,+BAmBPI,KAAMhC,GAAA,GAAWiC,KACjBC,OAAO,gBACPC,QAASnC,GAAA,GAAcoC,WAEvB,gBAACxD,EAAA,EAAgB,CAAChR,GAAG,+BAM7C,I,4BC1DA,SApBkE,SAAC,G,IAAEjE,EAAQ,WAAE+P,EAAS,YAC9EK,EACF,uBAAK9F,UAAU,mCACX,uBAAKA,UAAU,2BACX,uBAAKA,UAAU,sBACX,uBAAKA,UAAU,sBACX,uBAAKA,UAAU,oBAEnB,uBAAKA,UAAU,8DAEnB,uBAAKA,UAAU,wDACX,uBAAKA,UAAU,0CAM/B,OAAO,gBAACqG,EAAA,EAAe,CAAO3Q,SAAQ,EAAE+P,UAAS,EAAEK,SAAQ,GAC/D,E,mJCpBasI,GACT,mGCMW,SAASC,GAAyB,G,IAC7CxM,EAAQ,WAER,OAAO,SAAO,CACV9K,OAAO,WACFyK,IAAI,KACJC,QAAQ2M,GAAcvM,EAASf,UAAU,iCACzCM,SAASS,EAASf,UAAU,mCAEzC,CCUA,SAASwN,GACLzM,GAEA,OAAO,SAAC9H,EAAM,G,IAAEsH,EAAK,QAAEY,EAAG,MAAET,EAAG,MAC3B,GAAKK,EAIL,MAAa,aAAT9H,EACO8H,EAASf,UAAU,0BAA2B,CAAEO,MAAK,IAGnD,QAATtH,GAAkByH,EACXK,EAASf,UAAU,qBAAsB,CAAEO,MAAK,EAAEG,IAAG,IAGnD,QAATzH,GAAkBkI,EACXJ,EAASf,UAAU,qBAAsB,CAAEO,MAAK,EAAEY,IAAG,IAGnD,YAATlI,EACO8H,EAASf,UAAU,oCAAqC,CAAEO,MAAK,SAD1E,CAGJ,CACJ,CAEA,UAAe,KAAAT,UAAQ,SAA2C,G,IAC9DC,EAAU,aACVgB,EAAQ,WACR,IAAA0M,qBAAwBC,EAAW,cAAEC,EAAO,UAAEC,EAAK,QAAEC,EAAS,YAE9D,OAAO,SAAO,CACV1O,WAAW,WAASmB,SAASS,EAASf,UAAU,sCAChDZ,UAAU,WAASkB,SAASS,EAASf,UAAU,qCAC/C8N,UAAU,WACLxN,SAASS,EAASf,UAAU,qCAAuC0N,GACnE/M,QACGgN,EACA5M,EAASf,UAAU,4CAA8C0N,GAEpE/M,QACGiN,EACA7M,EAASf,UAAU,4CAA8C0N,GAEpEvM,IACG0M,EACA9M,EAASf,UAAU,iDAAmD0N,GAEzEhN,IAAI,IAAKK,EAASf,UAAU,kDAEhCY,OAAO2M,GAAyB,CAAExM,SAAQ,KAC1CH,QACG,EAAAC,GAAA,GAAoC,CAChCd,WAAU,EACVC,UAAWwN,GAAgCzM,KAG3D,I,gBCrDA,SAASgN,GAAiCC,EAAiCC,GACvE,OAAID,EACO,CAAC,KAGLC,EAA2B,GAAK,CAAC,IAC5C,CA0GA,UAAe,EAAAC,EAAA,IACX,KAAAC,YAAgF,CAC5EC,aAAc,SAACjR,EAAQ,G,IAAW,UAAAkR,eAAQ,IAAG,IAAAhH,KAAI,GACpClK,EACb,EACAmR,iBAAkB,SAAC,GAAyD,OACxEnP,UAAW,GACXC,SAAU,GACVnJ,MAAO,GACP6X,SAAU,GACV9L,aAAc,CAAC,EACfuM,uBAAwBR,GANe,yBAA0B,4BAAO,EAQ5ES,iBAAkB,SAAC,G,MACfzN,EAAQ,WACRhB,EAAU,aAEJ0N,EAEL,QAF4B,EAAA1N,EAAWkC,MACpC,SAAC,GAAqB,OAAP,cAAO,WACzB,eAAEwM,aAEH,IAAKhB,EACD,MAAM,IAAInV,MAAM,iCASpB,OANeoW,GAAkC,CAC7C3N,SAAQ,EACRhB,WAAU,EACV0N,sBAAsB,EAAAkB,GAAA,GAAwBlB,IAItD,GA/BJ,EA9EA,SAAC,G,IAAEmB,EAAsC,yCAAE7O,EAAU,aAAE8O,EAAkB,qBAAEC,EAAiB,oBAAE1E,EAAgC,mCAAE2E,EAAQ,WAAEC,EAAsB,yBAAEhB,EAAsB,yBAClLiB,GAA4B,IAAAna,UAAQ,WACtC,GAAK+Z,EAAL,CAIA,IAAI,EAAAK,GAAA,GAAeL,IAAqD,MAA9BA,EAAmBM,OAAgB,CACzE,IAAMC,EAAeP,EAAmB7L,QAAQP,MAAM,KAEtD,OAAI2M,EAAa5L,OAAS,EAElB,gBAACqG,EAAA,EAAgB,CACbjQ,KAAM,CAAE3D,MAAOmZ,EAAa,GAAG3O,QAC/B5H,GAAG,+BAKR,gBAACgR,EAAA,EAAgB,CAAChR,GAAG,sCAChC,CAEA,OAAOgW,EAAmB7L,OAjB1B,CAkBJ,GAAG,CAAC6L,IAEElQ,EAASiQ,EAnDnB,SAAiC7O,EAAyBiO,GACtD,OAAOjO,EAAWoF,KAAI,SAAA1D,GAClB,GAAmB,2BAAfA,EAAMpB,KAAmC,CACjC,IAAAgI,EAAY5G,EAAK,QAGnB4N,IAFQhH,aAAO,EAAPA,EAASiH,QAAS,IAELnK,KAAI,SAAAoK,GAC3B,MAAO,CACHrY,MAAO8W,EAAyB,IAAMuB,EAAKrY,MAC3CqJ,MAAOgP,EAAKhP,MAEpB,IAEA,OAAO,gCACAkB,GAAK,CACR4G,QAAS,CACLiH,MAAOD,IAGnB,CAEA,OAAO5N,CACX,GACJ,CA6BQ+N,CAAwBzP,EAAYiO,GAAyBjO,EAEjE,OACI,gBAAC0P,GAAA,EAAI,CACDvQ,UAAU,gBACVrG,GAAG,8BACHsU,OAAO,+BAEP,gBAACuC,GAAA,EAAQ,KACJT,GACG,gBAACU,GAAA3Y,EAAK,CAACiC,KAAM0W,GAAA,EAAUrX,OAAQ2W,GAEnC,uBAAK/P,UAAU,uBACVP,EAAOwG,KAAI,SAAC1D,GAAU,OACnB,gBAACmO,GAAA,EAAgB,CACbC,aAAcpO,EAAMpB,KACpByP,WAAY,8BAAuBrO,EAAMpB,MACzCoB,MAAOA,EACPuN,uBAAwBA,EACxB1J,IAAK7D,EAAM5I,GACXkX,gBAAiBtO,EAAMC,OAAS,oBAAiBpN,GAPlC,MAa/B,uBAAK4K,UAAU,gBACX,gBAAC+L,GAAA,GAAM,CACH+E,SAAUlB,GAAqB1E,EAC/BvR,GAAG,2BACH8L,UAAWmK,GAAqB1E,EAChC+C,OAAO,2BACPlU,KAAK,SACLmU,QAASnC,GAAA,GAAcgF,SAEvB,gBAACpG,EAAA,EAAgB,CAAChR,GAAG,oCAGzB,qBACIqG,UAAU,2CAA0C,YAC1C,yBACV9C,KAAK,IACLvD,GAAG,2BACHuO,SAAS,EAAA8I,GAAA,GAAenB,IAExB,gBAAClF,EAAA,EAAgB,CAAChR,GAAG,2BAKzC,K,4ECvGA,UAAe,IAAAiG,OA3BwC,SAAC,G,IAAEqR,EAAQ,WAAEnB,EAAsB,yBAChFoB,GAAc,IAAAhI,cAChB,SAACnE,GAAsB,OACnB,gBAACoM,GAAA,GAAS,iBACFpM,EAAMxC,MAAK,CACf6O,aAAcrM,EAAMxC,MAAMpB,KAC1BxH,GAAIoL,EAAMxC,MAAMpB,KAChB2O,uBAAwBA,EACxB/V,KAAK,UANU,GASvB,CAAC+V,IAGCuB,GAAe,IAAAzb,UAAQ,WAAM,uBAAC+U,EAAA,EAAgB,CAAChR,GAAG,wBAArB,GAAgD,IAEnF,OACI,gBAAC2X,GAAA,EAAS,CACNC,MAAOL,EACPpB,uBAAwBA,EACxBuB,aAAcA,EACdlQ,KAAK,QACL8P,SAAUA,GAGtB,IC6KA,UAAe,EAAAjC,EAAA,IACX,KAAAC,YAA0E,CACtEG,iBAAkB,SAAC,G,IAAE,IAAArY,MAAiB,OAClCA,WADsB,IAAG,KAAE,EAAO,EAGtCmY,aAAc,SAACjR,EAAQ,G,IAAW,UAAAuT,uBAAgB,IAAG,IAAArJ,KAAI,GACpClK,EACrB,EACAqR,iBAAkB,SAAC,GACf,OAAAjB,GAAyB,CAAExM,SADF,YACzB,GARR,EASG,IAAAjC,OApLH,SAAC,G,IACD7I,EAAK,QACL0a,EAAM,SACN,IAAAC,eAAAA,OAAc,IAAG,GAAK,EACtBC,EAAqB,wBACrB,IAAAC,eAAAA,OAAc,IAAG,IAAAzJ,KAAI,EACrB0J,EAAc,iBACdC,EAAS,YACTC,EAAU,aACVjC,EAAsB,yBACLkC,EAAS,eAEpBC,GAAsB,IAAArc,UAAQ,WAChC,OAAI+b,EACIE,EACO,uBAGJ,0BAGP9a,EACO,gCAGJ,oBACX,GAAG,CAAC4a,EAAuBE,EAAgB9a,IAErCmb,GAAW,IAAAtc,UACb,WAAM,OACF,uBAAKoK,UAAU,gBACX,gBAAC+L,GAAA,GAAM,CAAC7D,QAAS0J,GACb,gBAACjH,EAAA,EAAgB,CAAChR,GAAG,sBAH3B,GAON,CAACiY,IAGCO,GAAS,IAAAvc,UAAQ,WACnB,OAAIic,GAA4C,MAA1BA,EAAe5B,OAC1BiC,EAGPP,IAA0BE,EACtBH,EACO,gBAACU,GAAA,EAAc,CAAC3M,WAAS,IAGhCqM,GAAsC,mBAAzBA,EAAUO,WAChBH,EAIP,yBACI,gBAACI,GAAA,EAAc,CAAC3Y,GAAG,0BAA0BuO,QAAS6J,IACtD,gBAACO,GAAA,EAAc,CAAC3Y,GAAG,gCAAgCuO,QAAS0J,KAMpE,uBAAK5R,UAAU,gBACX,gBAAC+L,GAAA,GAAM,CACH/L,UAAU,oCACVkI,QAAS0J,EACT7X,KAAK,UAEL,gBAAC4Q,EAAA,EAAgB,CAAChR,GAAG,0BAEzB,gBAACoS,GAAA,GAAM,CAACtG,UAAWiM,EAAgB3X,KAAK,SAASmU,QAASnC,GAAA,GAAcgF,SACpE,gBAACpG,EAAA,EAAgB,CAAChR,GAAG,sBAIrC,GAAG,CACCkY,EACAF,EACAO,EACAH,EACAL,EACAE,EACAE,IAGEvH,GAAQ,IAAA3U,UAAQ,WAClB,IAAKic,EACD,OAAO,KAGH,IAAA5B,EAAW4B,EAAc,OAEjC,OACI,gBAACpB,GAAA3Y,EAAK,CAACiC,KAAM0W,GAAA,EAAUrX,OACP,MAAX6W,EACG,gBAACtF,EAAA,EAAgB,CAAChR,GAAG,yCAErB,gBAACgR,EAAA,EAAgB,CACbhR,GACe,MAAXsW,EACM,8BACA,6BAM9B,GAAG,CAAC4B,IAEEU,GAAO,IAAA3c,UAAQ,WACjB,GAAIic,GAA4C,MAA1BA,EAAe5B,OACjC,OAAO,KAGX,GAAI0B,GAAyBG,IAAcD,EAAgB,CAC/C,IAAAW,EAAuBV,EAAS,OAAxBO,EAAeP,EAAS,WAExC,OACI,yBACI,gBAACpM,EAAA,EAAc,CACXhL,KAAM,CACF+X,QAASC,KAAKC,MAAMH,EAAS,KAEjC7Y,GACmB,YAAf0Y,EACM,wBACA,+CAK1B,CAEA,OAAIV,IAA0BG,EACnB,gBAAC,GAAU,CAAChC,uBAAwBA,IAI3C,gCACI,yBACI,gBAACnF,EAAA,EAAgB,CAAChR,GAAG,sBAEzB,gBAAC,GAAU,CAACmW,uBAAwBA,IAGhD,GAAG,CAAC+B,EAAgBF,EAAuBG,EAAWE,IAEtD,OACI,gBAACY,GAAA,EAAK,CACFC,wBAAwB,kBACxBC,yBAAyB,gBACzBC,OACI,gBAACC,GAAA,EAAW,KACR,gBAACrI,EAAA,EAAgB,CAAChR,GAAIsY,KAG9BR,OAAQA,EACRG,eAAgBA,EAChBqB,uBAAuB,GAEvB,gBAAC1C,GAAA,EAAI,KACD,gBAAC6B,GAAA,EAAc,CAAC3M,UAAWiM,IAAmB3a,IAC7CwT,EACAgI,EACAJ,GAIjB,M,4BC9Me,SAASe,GAAqB1M,GAEzC,OAAOA,EAAO2M,eAAe,mBAAqB3M,EAAO2M,eAAe,oBAC5E,CC+CA,SAzCmD,W,UAEzC,GADoB,UAAa,cACezY,KAA9C0Y,EAAgB,mBAClBlH,EAA0D,QAA7B,EAAW,QAAX,GAAAvT,EADA,sBACW,eAAE2G,wBAAgB,eAAE4M,2BAE5DmH,EACFnH,IACA,QAAuBA,IACvBkH,EAAiBlH,GAEfoH,IACAD,GACFH,GAAqB1M,UACY,QAAjC,EAAA6M,aAAa,EAAbA,EAAeE,0BAAkB,eAAEC,iCAiBvC,OAfA,IAAAha,YAAU,WACH8Z,GAAiCJ,GAAqB1M,WACpC,QAA0B0F,GACrC1F,OAAOiN,kBACPjN,OAAOkN,gBAEJC,2BAA2B,CAChCC,uBAAuB,IAEtBC,MAAK,SAACtM,GACHA,EAAOlC,OAAO,2BAClB,GAEZ,GAAG,IAECiO,EAEI,uBAAKtT,UAAU,qCACX,uBAAKrG,GAAG,0BAAyB,YAAW,6BAKjD,gCACX,E,gBC5CMma,GAAqE,SAAC,G,IAAEpX,EAAG,MAAO,OACpF,gBAACqX,GAAA,EAAiB,CACd1C,aAAc,gBAAC3L,EAAA,EAAc,CAAChL,KAAM,CAAEgC,IAAG,GAAI/C,GAAG,yBAChDwH,KAAK,gBACL8M,OAAO,2BAJyE,EAQlF+F,GAA4D,SAAC,G,IAAEtX,EAAG,MAAO,OAC3E,gBAAC8T,GAAA,EAAQ,CAACvE,oBAAoB,2BAC1B,gBAAC6H,GAA8B,CAACpX,IAAKA,IAFkC,EAMzEuX,GAA+D,SAAC,G,IAAEvX,EAAG,MAAO,OAC9E,yBACI,gBAACgJ,EAAA,EAAc,CAAChL,KAAM,CAAEgC,IAAG,GAAI/C,GAAG,sCAFwC,EAiBlF,UAAe,IAAAiG,OAXiF,SAAC,G,IAC7FlD,EAAG,MAGH,OAFsB,yBAGX,gBAACuX,GAAwB,CAACvX,IAAKA,IAGnC,gBAACsX,GAAqB,CAACtX,IAAKA,GACvC,IC3Be,SAASwX,GAAiC,G,IACrDC,EAAU,aACVtS,EAAQ,WAEFuS,EAEF,CAAC,EASL,OAPID,IACAC,EAAaC,eAAgB,WAAUC,MACnC,EAAC,GACDzS,EAASf,UAAU,oCAIpB,SAAOsT,EAClB,C,oDCaA,UAAe,IAAAxU,OA1BgD,SAAC,G,IAC5D2C,EAAK,QACLwM,EAAwB,2BACtB,OACF,gCACI,gBAACwF,GAAA,GAAK,iBACEhS,EAAK,CACTiS,QAASjS,EAAMvK,MACfgI,UAAU,gBACVrG,GAAI4I,EAAMpB,KACV8M,OAAO,4BACPlU,KAAK,cAGT,gBAAC0a,GAAA,EAAK,CAACC,QAASnS,EAAMpB,MAClB,gBAACuE,EAAA,EAAc,CACX/L,GACIoV,EACM,mCACA,iDAhBpB,ICdN,+BAgBA,QAbW,EAAA4F,mBAAP,SAA0BC,GACtBC,eAAeC,QAAQ5Y,KAAKkK,IAAK,UAAGwO,GACxC,EAEO,EAAAG,mBAAP,WAGI,MAAiB,SAFHF,eAAeG,QAAQ9Y,KAAKkK,IAG9C,EAEO,EAAA6O,sBAAP,WACIJ,eAAeK,WAAWhZ,KAAKkK,IACnC,EAdO,EAAAA,IAAM,kBAejB,C,CAhBA,GCgBA,SAAS+O,GAAwBpG,EAAmCD,GAChE,QAAIsG,GAAwBL,uBAIrBhG,GAAmCD,CAC9C,CAoHA,UAAe,EAAAE,EAAA,IACX,KAAAC,YAAgE,CAC5DG,iBAAkB,SAAC,G,IACf,IAAArY,MAAAA,OAAK,IAAG,KAAE,EACV,IAAA+X,uBAAAA,OAAsB,IAAG,GAAK,EAE5B,OACF/X,MAAK,EACL6d,gBAAiBO,GAHO,2BAG2CrG,GACnEuF,eAAe,EAHb,EAKNnF,aAAc,SAACjR,EAAQ,IACnBoX,EAD+C,2BAC7BpX,EACtB,EACAqR,iBAAkB,SAAC,G,IAAEzN,EAAQ,WAAEyT,EAAgB,mBAAEC,EAAsB,yBAC7Dxe,GAAQ,WACTA,MAAM8K,EAASf,UAAU,iCACzBU,IAAI,KACJJ,SAASS,EAASf,UAAU,kCAE3B0U,GAAa,SAAO,CAAEze,MAAK,IAEjC,OAAIue,IAAqBC,EACdC,EAAW9T,OACdwS,GAAiC,CAC7BC,aAAcmB,EACdzT,SAAQ,KAKb2T,CACX,GA/BJ,EAgCG,IAAA5V,OA3HH,SAAC,G,IACD6V,EAAY,eACZC,EAAe,kBACfC,EAA4B,+BAC5BlQ,EAAS,YACTmQ,EAAa,gBACbC,EAAW,cACXP,EAAgB,mBAChBvG,EAAwB,2BACxBwG,EAAsB,yBACtBzF,EAAsB,yBACtBgG,EAAwB,2BAElBC,GAAc,IAAA7M,cAChB,SAAC8M,GAAoC,OACjC,gBAAC,IAAc,iBAAKA,EAAU,CAAEjH,yBAA0BA,IADzB,GAGrC,CAACA,IAGL,OACI,gBAACwB,GAAA,EAAI,CACDvQ,UAAU,gBACVrG,GAAG,0BACHsU,OAAO,2BAKP,gBAACuC,GAAA,EAAQ,CACLyF,OACI,gBAACC,GAAA,EAAM,CAACC,QAAM,GACV,gBAACxL,EAAA,EAAgB,CAAChR,GAAG,mCAI7B,uBAAKqG,UAAU,2BACX,uBAAKA,UAAU,sBACX,gBAAC,GAAU,CAAC8P,uBAAwBA,EAAwBmB,SAAU2E,IAErEE,GAA4B,gBAAC,GAAuB,OAEnDL,GAAgB1G,IACd,gBAACqH,GAAA,EAAc,CAACjV,KAAK,kBAAkBkE,OAAQ0Q,KAIvD,uBACI/V,UAAW,IAAW,oCAAqC,CACvD,kCAAmC8P,KAGvC,gBAAC/D,GAAA,GAAM,CACH/L,UAAU,uBACVrG,GAAG,6BACH8L,UAAWA,EACXwI,OAAO,oCACPlU,KAAK,SACLmU,QAASnC,GAAA,GAAcgF,SAEvB,gBAACpG,EAAA,EAAgB,CAAChR,GAAIgc,OAKjCL,GACG,gBAAC,GAAkB,CAACC,uBAAwBA,EAAwB7Y,IAAK4Y,KAG3E7P,GACE,yBACI,gBAACkF,EAAA,EAAgB,CAAChR,GAAG,wBAAyB,IAC9C,iCACc,2BACVA,GAAG,0BACHuO,QAAS2N,EACTQ,KAAK,SACLC,SAAU,GAEV,gBAAC3L,EAAA,EAAgB,CAAChR,GAAG,4BAKhC+b,GAIjB,M,gBC9HA,UAAe,EAAAa,GAAA,IANoB,WAAM,OACrC,uBAAKC,QAAQ,cAAcC,MAAM,8BAC7B,wBAAMC,EAAE,kbAFyB,ICMzC,UAAe,EAAAH,GAAA,IANyB,WAAM,OAC1C,uBAAKC,QAAQ,cAAcC,MAAM,8BAC7B,wBAAMC,EAAE,qxBAF8B,I,gBCmD9C,UAAe,IAAA9W,OAzC6C,SAAC,G,IAAE,IAAAkQ,uBAAAA,OAAsB,IAAG,GAAK,EACnFoB,GAAc,IAAAhI,cAChB,SAACnE,GAAsB,OACnB,gBAAC4R,GAAA,EAAM,CAACC,eAAe,IAClB,SAAC,G,IAAEnF,EAAM,SAAEoF,EAAM,SAAO,OACrB,uBAAK7W,UAAU,uBACX,gBAACmR,GAAA,GAAS,iBACFpM,EAAMxC,MAAK,CACf0J,oBAAoB,uBACpBtS,GAAIoL,EAAMxC,MAAMpB,KAChB2O,uBAAwBA,EACxB/V,KAAM0X,EAAS,OAAS,cAE3B3B,GACG,gBAAC2E,GAAA,EAAK,CACFC,QAAS3P,EAAMxC,MAAMpB,KACrBxH,GAAI,UAAGoL,EAAMxC,MAAMpB,KAAI,UACvB2O,wBAAwB,GAExB,gBAACnF,EAAA,EAAgB,CAAChR,GAAG,6BAG7B,qBACIqG,UAAU,uCACV9C,KAAK,IACLgL,QAAS2O,GAERpF,EAAS,gBAAC,GAAO,MAAM,gBAAC,GAAY,OAvBxB,GAFV,GA+BvB,CAAC3B,IAGCuB,GAAe,IAAAzb,UAAQ,WAAM,uBAAC+U,EAAA,EAAgB,CAAChR,GAAG,2BAArB,GAAmD,IAEtF,OAAO,gBAAC2X,GAAA,EAAS,CAACC,MAAOL,EAAapB,uBAAwBA,EAAwBuB,aAAcvB,EAAyB,KAAOuB,EAAclQ,KAAK,YAC3J,ICqKA,UAAe,EAAA6N,EAAA,IACX,KAAAC,YAAgE,CAC5DG,iBAAkB,SAAC,G,IAAE,IAAArY,MAAiB,OAClCA,WADsB,IAAG,KAAE,EAE3B6X,SAAU,GAFwB,EAItCM,aAAc,SAACjR,EAAQ,IACnB6Y,EADsC,kBAC7B7Y,EACb,EACAqR,iBAAkB,SAAC,G,IAAEzN,EAAQ,WACzB,OAAAwM,GAAyB,CAAExM,SAAQ,IAAIH,QACnC,SAAO,CACHkN,UAAU,WAASxN,SACfS,EAASf,UAAU,uCAH/B,GATR,EAgBG,IAAAlB,OArLH,SAAC,G,IACDmX,EAAS,YACTpB,EAA4B,+BAC5BqB,EAAiB,oBACjBjgB,EAAK,QACLkgB,EAAoB,uBACpBC,EAAW,cACXhM,EAAgC,mCAChCrJ,EAAQ,WACR,IAAAgO,SAAAA,OAAQ,IAAG,IAAA1H,KAAI,EACfyN,EAAa,gBACbP,EAAiB,oBACjB,IAAA8B,gBAAAA,OAAe,IAAG,IAAAhP,KAAI,EACtB,IAAAqJ,iBAAAA,OAAgB,IAAG,IAAArJ,KAAI,EACvBiP,EAAW,cACXC,EAA2B,8BAC3BvH,EAAsB,yBACtB,IAAAwH,SAAAA,OAAQ,IAAG,IAAiBC,MAAK,EAE3BC,GAAkB,IAAAtO,cAAY,WAChC,OAAKnS,EAKD,qBAAGiJ,UAAU,sCACT,gBAACsS,GAAA,EAAc,CACX5X,KAAM,CAAE3D,MAAK,GACb4C,GAAG,0CACHuO,QAAS2H,EACT5B,OAAO,kBATR,IAaf,GAAG,CAAClX,EAAO8Y,IAEX,OACI,gBAACU,GAAA,EAAI,CACDvQ,UAAU,gBACVrG,GAAG,8BACHsU,OAAO,+BAEP,gBAACuC,GAAA,EAAQ,CACLyF,OACI,gBAACC,GAAA,EAAM,CAACC,QAAM,GACV,gBAACxL,EAAA,EAAgB,CAAChR,GAAG,uCAI5Byd,GACG,gBAAC3G,GAAA3Y,EAAK,CAACmW,OAAO,+BAA+BlU,KAAM0W,GAAA,EAAUrX,OCxGlE,SACXmR,EACAzJ,GAIA,OAFayJ,EAAMkN,MAAQlN,EAAMkN,KAAK1d,MAGlC,IAAK,kBACD,OAAO+G,EAAU,oCAErB,IAAK,8BACD,OAAOA,EAAU,8CAErB,QACI,OAAOA,EAAU,0BAE7B,CDyFyB4W,CAAgBN,GAAa,SAAChR,GAAQ,OAAAvE,EAASf,UAAUsF,EAAnB,KAI9CkR,IAAa,EAAiBK,gBAC3B,gBAAClH,GAAA3Y,EAAK,CAACiC,KAAM0W,GAAA,EAAUmH,MACnB,gBAAClS,EAAA,EAAc,CAAChL,KAAM,CAAE3D,MAAK,GAAI4C,GAAG,gCAI3C2d,IAAa,EAAiBO,0BAC3B,gBAACpH,GAAA3Y,EAAK,CAACiC,KAAM0W,GAAA,EAAUmH,MACnB,gBAAClS,EAAA,EAAc,CAAChL,KAAM,CAAE3D,MAAK,GAAI4C,GAAG,+BAI3C2d,IAAa,EAAiBQ,eAC3B,gBAACrH,GAAA3Y,EAAK,CAACiC,KAAM0W,GAAA,EAAUrX,OACnB,gBAACkZ,GAAA,EAAc,CACX3Y,GAAG,oCACHuO,QAASiP,MAKnBG,IAAa,EAAiBC,OAC5BD,IAAa,EAAiBQ,gBAC9B,gBAAC,GAAU,CAAChI,uBAAwBA,EAAwBmB,SAAU2E,IAG1E,gBAAC,GAAa,CAAC9F,uBAAwBA,IAEvC,qBAAG9P,UAAU,yBACT,4BACMiX,GACE,gBAAC3E,GAAA,EAAc,CACX3Y,GAAG,mBACHuO,QAAUsJ,EACVvD,OAAO,0BAGZgJ,GACC,iCACc,uBACV/Z,KAAO8Z,EACPha,IAAI,sBACJ+a,OAAO,UAEP,gBAACpN,EAAA,EAAgB,CAAChR,GAAG,sCAI/B2d,IAAa,EAAiBC,OAASF,GACrC,4BACI,gBAAC/E,GAAA,EAAc,CACX3Y,GAAG,2CACHuO,QAASiP,MAMzB,uBAAKnX,UAAU,gBACX,gBAAC+L,GAAA,GAAM,CACH+E,SAAUoG,GAAehM,EACzBvR,GAAG,6BACH8L,UAAWyR,GAAehM,EAC1B+C,OAAO,2BACPlU,KAAK,SACLmU,QAASnC,GAAA,GAAcgF,SAEvB,gBAACpG,EAAA,EAAgB,CAAChR,GAAG,6BAGxB2d,IAAa,EAAiBK,gBAC3B,qBACI3X,UAAU,2CAA0C,YAC1C,0BACV9C,KAAK,IACLvD,GAAG,0BACHuO,SAAS,EAAA8I,GAAA,GAAeqE,IAExB,gBAAC1K,EAAA,EAAgB,CAAChR,GAAIgc,KAI7BoB,GACGO,IAAa,EAAiBQ,eAC9BR,IAAa,EAAiBK,gBAC1B,qBACI3X,UAAU,2CAA0C,YAC1C,yBACV9C,KAAK,IACLvD,GAAG,2BACHuO,SAAS,EAAA8I,GAAA,GAAenB,IAExB,gBAAClF,EAAA,EAAgB,CACbhR,GACI2d,IAAa,EAAiBO,yBACxB,gCACA,2BAO7BP,IAAa,EAAiBK,gBAAkBH,KAIjE,M,eElNe,SAASQ,GAA+B,GACnD,IAAA3I,EAAsB,yBACtBvM,EAAY,eACT7E,GAAM,cAH0C,2CAKnD,OAAO,gCACAA,GAAM,CACToR,uBAAwBA,GAA0BA,EAAuB/K,OAAS,EAClFxB,cAAc,EAAAmV,GAAA,GAAkCnV,IAExD,C,gBCwOA,UAAe,EAAAkM,EAAA,IACX,KAAAC,YAAkD,CAC1CG,iBAAkB,SAAC,G,IACf,IAAArY,MAAAA,OAAK,IAAG,KAAE,EACV,IAAA+X,uBAAAA,OAAsB,IAAG,GAAK,EAE5B,OACF/X,MAAK,EACL6d,iBAHwB,4BAG4B9F,EACpDuF,eAAe,EAHb,EAKNnF,aAAc,SAAEjR,EAAQ,IACpBia,EAD+B,aACrB,CACNC,YAAY,EACZvD,gBAAiB3W,EAAO2W,iBAEhC,EACAtF,iBAAkB,SAAC,G,IAAEzN,EAAQ,WAAEyT,EAAgB,mBAAEC,EAAsB,yBACnE,GAAID,IAAqBC,EACrB,OAAOrB,GAAiC,CAChCC,aAAcmB,EACdzT,SAAQ,GAGxB,GAvBR,EAwBO,IAAAjC,OA/OqF,SAAC,G,IAC7F+V,EAA4B,+BAC5BlQ,EAAS,YACTsC,EAAU,aACVwN,EAAsB,yBACtBjN,EAAY,eACZsN,EAAa,gBACbC,EAAW,cACXR,EAAiB,oBACjBI,EAAY,eACZC,EAAe,kBACf3G,EAAwB,2BACxBuG,EAAgB,mBAChB3e,EAAI,OACJsZ,EAAM,SAGA,GAAsD,IAAA7E,WAAS,GAA9DgN,EAAsB,KAAEC,EAAyB,KAClD,GAA8B,IAAAjN,UAAS,IAAtCkN,EAAU,KAAEC,EAAa,KAC1B,GAAsC,IAAAnN,WAAS,GAA9CoN,EAAc,KAAEC,EAAiB,KAClC,GAAwC,IAAArN,WAAS,GAAhDsN,EAAe,KAAEC,EAAkB,KACpC,GAA4B,IAAAvN,WAAS,GAApCwN,EAAS,KAAEC,EAAY,KACxBC,EAA4B,WAC9BzD,EAAkB,CACdte,MAAOuhB,EACP1D,mBAAmB3E,aAAM,EAANA,EAAQ2E,kBAEnC,EACMmE,GAAmB,IAAA7P,cAAY,SAAC8P,EAAwBjiB,GAC1D6e,EAAc7e,GACdwhB,EAAcxhB,GACdshB,GAA2BthB,GAC3B0hB,EAAkBO,GAEdA,GACAH,GAAa,EAErB,GAAG,CAACR,EAA2BzC,KAE/B,IAAApc,YAAU,aACA7C,EAAKsiB,YAAcL,IAAcN,GAAcE,GACjDM,GAER,GAAG,CAACR,EAAYE,EAAgBI,KAEhC,IAAApf,YAAU,YACFyW,aAAM,EAANA,EAAQkI,aACRW,GAER,GAAG,CAAC7I,aAAM,EAANA,EAAQkI,aAEZ,IAAMe,GAAgB,IAAAhQ,cAAY,SAACiQ,GAC/BR,EAAmBQ,EACvB,GAAG,KAqBH,IAAA3f,YAAU,WAGN,OAfAuO,EAAY,CACRxQ,SAAU,YACV6hB,UAAW,CACP9b,UAAW,gBACX+b,cAAeN,EACftT,UAAWyT,EACXI,UAAWC,EACXC,UAAW,YACXjiB,SAAU,UAOX,WArBP+Q,EAAa,CACT/Q,SAAU,aAoBD,CACjB,GAAG,IAEH,IAAMkiB,EAAuB,SACzB9f,EACA+f,GACA,IAAMC,EAAkBze,SAAS0e,eAAejgB,GAEhD,GAAIggB,EACA,OAAO,EAAAE,GAAA,GAAiBF,EAAiBD,EAKjD,EAEMngB,EAAc,8BAEdggB,GAA8D,IAAArQ,cAAa,WAC7E,IAAM4Q,EAAYL,EAAqB,UAAGlgB,EAAW,WAAW,CAAC,QAAS,mBAAoB,eAAgB,eACxGwgB,EAAYN,EAAqB,UAAGlgB,EAAW,WAAW,CAAC,UAC3DygB,EAAYP,EAAqB,UAAGlgB,EAAW,WAAW,CAAC,UAEjE,OAAOwgB,GAAaD,GAAaE,EAAY,CACzCC,UAAWF,EAAUG,MACrBC,UAAWL,EAAUI,MACrBE,qBAAsBN,EAAUI,MAChCG,eAAgBL,EAAUE,MAC1BI,gBAAiBR,EAAU,oBAC3BS,iBAAkBT,EAAU,cAC5BU,YAAaV,EAAU,sBACvB1kB,CACR,GAAG,IAyBG2gB,GAAc,IAAA7M,cAAY,SAAC8M,GAAoC,OACjE,gBAAC,IAAc,iBACNA,EAAU,CACfjH,yBAA2BA,IAHkC,GAKlE,CACCA,IAGE0L,EAAajC,IAAmBI,EAAW,8CAAgDjD,EAEjG,OACI,gCACI,gBAAC,GAAgB,CAAClQ,UAAWiT,IAC7B,gBAACnI,GAAA,EAAI,CACDvQ,UAAU,gBACVrG,GAAG,0BACHsU,OAAO,2BAEP,uBAAKjO,UAAU,gBAAgBhF,MAAQ,CAAC0f,QAAShC,EAAkB,YAAStjB,IACxE,gBAACob,GAAA,EAAQ,CACLyF,QAAUuC,GACN,gBAACtC,GAAA,EAAM,CAACC,QAAM,GACV,gBAACxL,EAAA,EAAgB,CAAChR,GAAG,mCAI7B,uBAAKqG,UAAU,2BACX,uBAAKA,UAAU,sBACX,uBAAKrG,GAAG,kBACR,4BACG8b,GAAgB1G,IAA6B,gBAACqH,GAAA,EAAc,CAC3DjV,KAAK,kBACLkE,OAAS0Q,KAIjB,uBAAK/V,UAAU,uCACPwY,GAAmBA,IAAmBI,IAAgB,gBAAC7M,GAAA,GAAM,CAC7D/L,UAAU,6BACV8Q,SAAWsH,EACXze,GAAG,oCACH8L,UAAYA,EACZwI,OAAO,2CACPlU,KAAK,SACLmU,QAAUnC,GAAA,GAAcgF,SAExB,gBAACpG,EAAA,EAAgB,CAAChR,GAAK8gB,OAKlCnF,GACG,gBAAC,GAAkB,CAACC,uBAAwBA,EAAwB7Y,IAAK4Y,KAIxE7P,GAAa,yBACV,gBAACkF,EAAA,EAAgB,CAAChR,GAAG,wBACnB,IACF,iCACc,2BACVA,GAAG,0BACHuO,QAAU2N,EACVQ,KAAK,SACLC,SAAU,GAEV,gBAAC3L,EAAA,EAAgB,CAAChR,GAAG,6BAI9B6e,GAAkB9C,IA5FjC,uBACI1V,UAAU,+BACVrG,GAAK,UAAGJ,EAAW,WACnBohB,YAAY,QAEZ,uBACI3a,UAAU,qBAEV,uBACIA,UAAU,+BACVrG,GAAK,UAAGJ,EAAW,cAG3B,uBACIyG,UAAU,+BACVrG,GAAK,UAAGJ,EAAW,eAoFvC,MC1IA,gC,qDACI,EAAAM,MAAuB,CACnB+gB,sBAAsB,EACtBC,SAAS,EACTC,wBAAwB,GA+JpB,EAAAC,wBAAsC,WAC1C,EAAK7V,SAAS,CACV0V,sBAAsB,EACtBE,wBAAwB,GAEhC,EA2EQ,EAAAE,wBAAsC,6D,uEAClC1D,EAAapb,KAAK6I,MAAK,S,8CAGvBuS,IAAa,EAAiBC,OAASrb,KAAK+e,WAC5C,GAAM/e,KAAKgf,qBAAqB,CAAEnkB,MAAOmF,KAAK+e,cAD9C,M,OACA,S,2CAGJ/e,KAAKgJ,SAAS,CACV0V,sBAAsB,I,6BAK1B,EAAAM,qBAAwE,SAC5Ejd,GAAM,kD,uEAEEkd,EAAmBjf,KAAK6I,MAAK,e,iBAGjC,O,uBAAA,GAAMoW,EAAeld,I,cAArB,S,iDAIA/B,KAAKgJ,SAAS,CACV4V,wBAAwB,I,6BAK5B,EAAAM,sBAAwE,SAC5EC,GAAU,kD,yGAEJ,EASFnf,KAAK6I,MARL0Q,EAAY,eACZ6F,EAAe,kBACfC,EAAY,eACZzM,EAAsB,yBACtB,IAAA0M,iBAAAA,OAAgB,IAAG,IAAArT,KAAI,EACvB,IAAAkN,kBAAAA,OAAiB,IAAG,IAAAlN,KAAI,EACxB,IAAAsT,uBAAAA,OAAsB,IAAG,IAAAtT,KAAI,EAC7BuT,EAAuB,0BAGrB3kB,EAAQskB,EAAWtkB,MAAMwK,OACzBoa,GACFJ,IAAgBzM,QAAiC1Z,E,iBAGhC,O,sBAAA,GAAMkmB,EAAgB,CACnCvkB,MAAK,EACL6kB,8BACInG,IAAgB4F,EAAWzG,kBAErB+G,EACVE,6BAA4BR,EAAWzG,iBAEjC+G,K,OAWV,OAnBQjhB,EAAS,SASf,KAEFghB,EAAwBL,EAAWzG,iBAEnCQ,GAAwBT,mBAAmB0G,EAAWzG,iBAEhD3K,EAAWvP,EAAKiP,cAEhBmS,EAA0BphB,EAAKqhB,6BAEjC9R,GAAYA,EAAS+R,uBAAyB/R,EAASC,WAAY4R,aAAuB,EAAvBA,EAAyBG,+BACrF,CAAP,EAAOT,EAAiB,EAAiB7D,iBAG7C,GAAMzb,KAAKggB,0C,cAAX,SAEAhgB,KAAK+e,gBAAa7lB,E,aAYlB,O,aATI,EAAA0Y,GAAA,GAAgB,IACA,yBAAf,EAAM/T,MACY,kCAAf,EAAMA,OAEVmC,KAAK+e,gBAAa7lB,EAElBigB,MAGA,EAAAvH,GAAA,GAAgB,IAA2B,MAAjB,EAAMmC,OACzB,CAAP,EAAOuL,EAAiB,EAAiB1D,iBAGzC,EAAAhK,GAAA,GAAgB,IAA2B,MAAjB,EAAMmC,OACzB,CAAP,EAAOuL,EAAiB,EAAiB3D,4BAG7C4D,EAAuB,G,gCAIvB,EAAAU,aAAoE,SACxEC,GAAW,kD,mFAEL,EAIFlgB,KAAK6I,MAHLsX,EAAM,SACN,IAAAvF,SAAAA,OAAQ,IAAG,IAAA3O,KAAI,EACf,IAAAmU,cAAAA,OAAa,IAAG,IAAAnU,KAAI,E,iBAIpB,O,sBAAA,GAAMkU,EAAOD,I,cAAb,SAEAtF,IAEA5a,KAAK+e,gBAAa7lB,E,+BAElBknB,EAAc,G,+BAId,EAAAC,oBAAiE,SAAOte,GAAM,kD,+EAMlF,OALM,EAGF/B,KAAK6I,MAFL,IAAAyX,cAAAA,OAAa,IAAG,IAAArU,KAAI,EACpB,IAAAsU,iBAAAA,OAAgB,IAAG,IAAAtU,KAAI,EAG3B,GAAMqU,EAAcxE,GAA+B/Z,K,cAAnD,SAEAwe,I,YAGI,EAAAC,kBAAgC,WAC5B,MAA4B,EAAK3X,MAAK,uBAAtB,IAAG,IAAAoD,KAAI,GAEd,EAAiBwU,cACtC,EAEQ,EAAAC,0BAAwC,WACtC,MAA8D,EAAK7X,MAAjE8X,EAAU,aAAE,IAAArB,iBAAAA,OAAgB,IAAG,IAAArT,KAAI,EAAEwH,EAAkB,qBAE3DA,GACAkN,EAAWlN,GAGf6L,EAAiB,EAAiBjE,MACtC,EAEQ,EAAAuF,mBAAiC,WAC/B,MAAuD,EAAK/X,MAA1D8X,EAAU,aAAE,IAAArB,iBAAAA,OAAgB,IAAG,IAAArT,KAAI,EAAEiP,EAAW,cAEpDA,GACAyF,EAAWzF,GAGfoE,EAAiB,EAAiBuB,MACtC,EAEQ,EAAAC,kBAA6C,SAACjmB,GAC1C,IAAAvB,EAAqB,EAAKuP,MAAK,iBAEvC,EAAKkW,WAAalkB,EAClBvB,EAAiBsB,mBAAmBC,EACxC,EAEQ,EAAAkmB,gBAA8B,WAC1B,MAA4B,EAAKlY,MAAK,uBAAtB,IAAG,IAAAoD,KAAI,GAEd,EAAiBoP,MACtC,EAEQ,EAAA2E,uCAAqD,6D,6FACnD,EAIFhgB,KAAK6I,MAHLoG,EAA4B,+BAC5B,IAAAkK,kBAAAA,OAAiB,IAAG,IAAAlN,KAAI,GACxB+D,EAA0B,+BAGIA,IAA+BC,GAAA,EAAgB+Q,UAC7E,GAAM/R,EAA6B,CAC/B5T,SAAU2U,EACViR,6BAA8B9H,EAC9B+H,8BAA+B,SAACnmB,GAAY,SAAKmmB,8BAA8BnmB,EAAnC,KAJhD,M,cACA,S,aAMAoe,I,oCASZ,QAlbuB,oBASb,YAAAxQ,kBAAN,W,4IACU,EAMF3I,KAAK6I,MALLiG,EAAkB,qBAClBjU,EAAK,QACL,IAAAsmB,QAAAA,OAAO,IAAG,IAAAlV,KAAI,EACd,IAAAkC,iBAAAA,OAAgB,IAAG,IAAAlC,KAAI,EACvB+D,EAA0B,6BAG9BhQ,KAAK+e,WAAalkB,E,8CAGVmV,GAA8BA,IAA+BC,GAAA,EAAgB+Q,UAC7E,GAAMlS,EAAmB,CAACzT,SAAU2U,KADpC,M,OACA,S,sDAGJ7B,EAAiB,G,oBAGrBnO,KAAKgJ,SAAS,CAAE2V,SAAS,IAEzBwC,I,YAGE,YAAAlY,qBAAN,W,wIACU,EAIFjJ,KAAK6I,MAHL,IAAAgG,qBAAAA,OAAoB,IAAG,IAAA5C,KAAI,EAC3B+D,EAA0B,6BAC1B,IAAA7B,iBAAAA,OAAgB,IAAG,IAAAlC,KAAI,E,iBAIvB,O,sBAAA,GAAM4C,EAAqB,CAAExT,SAAU2U,K,cAAvC,S,+BAEA7B,EAAiB,G,+BAIzB,YAAAhF,OAAA,WACY,IAAAiS,EAAapb,KAAK6I,MAAK,SACzB,EAAoC7I,KAAKrC,MAAvC+gB,EAAoB,uBAAEC,EAAO,UAC/ByC,EAAwBhG,IAAa,EAAiByF,MACtDQ,EAAgCjG,IAAa,EAAiBqF,cAC9Da,GAAyBF,IAA0BC,EAEzD,OACI,gBAAC,GAAgB,CAAC9X,WAAYoV,GACzBD,GAAwB1e,KAAKuhB,2BAC7BD,GAAyBthB,KAAKwhB,kBAC9BJ,GAAyBphB,KAAKyhB,kBAC9BJ,GAAiCrhB,KAAK0hB,0BAGnD,EAEQ,YAAAD,gBAAR,WACU,MAsBFzhB,KAAK6I,MArBL0Q,EAAY,eACZtL,EAAoB,uBACpB0T,EAAiB,oBACjB9S,EAAoB,uBACpBhU,EAAK,QACLiU,EAAkB,qBAClB,IAAA8S,oBAAAA,OAAmB,IAAG,GAAK,EAC3B,IAAA5S,iCAAAA,OAAgC,IAAG,GAAK,EACxC,IAAAuB,eAAAA,OAAc,IAAG,GAAK,EACtBsR,EAAY,eACZC,EAAoB,uBACpB1I,EAAgB,mBAChBvG,EAAwB,2BACxB,IAAA1E,iBAAAA,OAAgB,IAAG,IAAAlC,KAAI,EACvB,IAAAmC,oBAAAA,OAAmB,IAAG,IAAAnC,KAAI,EAC1BxR,EAAI,OACJmZ,EAAsB,yBACtByF,EAAsB,yBACtB3L,EAAqB,wBACrBqU,EAAsB,yBACtB/R,EAA0B,6BAGxBwJ,EAAkBsI,IAAyBpU,EAC7C,KACA,gBAAC,GAAkB,CACnBO,qBAAsBA,EACtB7B,aAAcyC,EACdhD,WAAYiD,EACZyB,eAAgBA,EAChB7F,UAAWiX,EACX3V,QAASoC,EACTrC,QAASoC,IAGP6T,EAAqBJ,GAAuB5S,EAElD,OACI+S,EACI,gBAAC,GAAe,CACZxI,aAAcA,EACdC,gBAAiBA,EACjBC,6BAA6B,oBAC7B7G,uBAAwBiP,EACxBzV,aAAcyC,EACdhU,MAAOmF,KAAK+e,YAAclkB,EAC1BgR,WAAYiD,EACZuK,uBAAwBA,EACxB9P,UAAWqY,GAAuBrR,GAAkBvB,EACpD0K,cAAe1Z,KAAK8gB,kBACpB3H,kBAAmBnZ,KAAKkf,sBACxBvF,YAAa3Z,KAAK+gB,gBAClB3H,iBAAkBA,EAClBvG,yBAA0BA,EAC1BpY,KAAMA,IAGd,gBAAC,GAAS,CACN8e,aAAcA,EACdC,gBAAiBA,EACjBC,6BAA6B,oBAC7B7G,uBAAwBiP,EACxBhnB,MAAOmF,KAAK+e,YAAclkB,EAC1Bwe,uBAAwBA,EACxBzF,uBAAwBA,EACxBrK,UAAWyY,EACXtI,cAAe1Z,KAAK8gB,kBACpB3H,kBAAmBnZ,KAAKkf,sBACxBvF,YAAa3Z,KAAK+gB,gBAClB3H,iBAAkBA,EAClBQ,0BAA0B,QAAuB5J,GACjD6C,yBAA0BA,GAGtC,EAEQ,YAAA0O,yBAAR,WACU,MAAmDvhB,KAAKrC,MAAtD+gB,EAAoB,uBAAEE,EAAsB,yBAE9C,EACF5e,KAAK6I,MADDoZ,EAAoB,uBAAEC,EAAgB,mBAAEC,EAAW,cAAEvO,EAAsB,yBAGnF,OACI,gBAAC,GAAc,CACX/Y,MAAOmF,KAAK+e,WACZtJ,sBAAuBmJ,EACvBhL,uBAAwBA,EACxB2B,OAAQmJ,EACRlJ,eAAgByM,EAChBvM,eAAgB1V,KAAK6e,wBACrBvJ,iBAAkBtV,KAAKgf,qBACvBpJ,UAAWuM,EACXxM,eAAgBuM,GAG5B,EASQ,YAAAR,wBAAR,WACU,MASF1hB,KAAK6I,MARLuZ,EAAqB,wBACrBpT,EAAgC,mCAChC0E,EAAiB,oBACjBD,EAAkB,qBAClBZ,EAAwB,2BACxBe,EAAsB,yBACtBhB,EAAsB,yBACtBY,EAAsC,yCAG1C,OACI,gBAAC,GAAiB,CACdC,mBAAoBA,EACpBb,uBAAwBA,EACxBY,uCAAwCA,EACxC7O,WAAYyd,EACZ1O,kBAAmBA,EACnB1E,iCAAkCA,EAClC4E,uBAAwBA,EACxBD,SAAU3T,KAAK0gB,0BACfzN,SAAUjT,KAAKqgB,oBACfxN,yBAA0BA,GAGtC,EAEQ,YAAA2O,gBAAR,WACU,MAcFxhB,KAAK6I,MAbLwZ,EAAU,aACVxnB,EAAK,QACLigB,EAAiB,oBACjBC,EAAoB,uBACpBuH,EAAc,iBACdL,EAAoB,uBACpBjH,EAAW,cACXhM,EAAgC,mCAChCuT,EAAwB,2BACxBvS,EAA0B,6BAC1BkL,EAAW,cACXtH,EAAsB,yBACtBwH,EAAQ,WAGZ,OACI,gBAAC,GAAS,CACNP,UAAWyH,EACX7I,6BACIzJ,EACM,oBACA,oCAEVnV,MAAOmF,KAAK+e,YAAclkB,EAC1BigB,kBAAmBA,EACnB9L,iCAAkCA,EAClC4E,uBAAwBA,EACxBqO,qBAAsBA,EACtBlH,qBAAsBA,IAAyBsH,EAC/CrH,YAAaA,EACbrH,SAAU3T,KAAK4gB,mBACflH,cAAe1Z,KAAK8gB,kBACpB3H,kBAAmBnZ,KAAKggB,uCACxB/E,gBAAiBjb,KAAKwgB,kBACtBlL,iBAAkBtV,KAAK8e,wBACvBlE,SAAU5a,KAAKigB,aACf9E,4BAA6BoH,EAC7BrH,YAAaA,EACbE,SAAUA,GAGtB,EA4LQ,YAAA8F,8BAAR,SAAsCnmB,GACLiF,KAAK6I,MAAK,iBAEtB5N,8BAA8BF,EACnD,EACJ,EAlbA,CAAuB,EAAA6P,WAmhBvB,UAAe,EAAA4X,EAAA,IAAc,EAAA7f,EAAA,IA/FtB,SAAwC,G,IAC3CpJ,EAAe,kBACfiU,EAAa,gBAGT,EAmBAA,EAAa,KAlBT0D,EAAiB,oBACjBuR,EAAwB,2BACxB/lB,EAAW,cACX+Q,EAAW,cACXtN,EAAO,UACPuiB,EAAc,iBACdjmB,EAAS,YACTiR,EAAqB,wBAEzB,EASAF,EAAa,OATHmV,EAAc,iBAAEC,EAAmB,sBAAEC,EAA6B,gCAC5E,EAQArV,EAAa,SAPToU,EAAmB,sBACnB5S,EAAgC,mCAChC8T,EAAsB,yBACtB9H,EAAW,cACXiH,EAAoB,uBACpBc,EAAyB,4BAI3B3R,EAAiBF,IACjBrU,EAAWH,IACXqR,EAAWN,IACXuV,EAAO7iB,IACPgiB,EAAcO,IACd9lB,EAASH,IAEf,IAAKI,IAAaD,IAAWomB,EACzB,OAAO,KAIP,MAQApmB,EAAmF,iBAP/Ewc,EAAgB,mBAChBvG,EAAwB,2BACxBkI,EAAoB,uBACpBwH,EAAwB,2BACxBlJ,EAAsB,yBACtB4J,EAAQ,WAIVjT,GAA6B,EAAAkT,GAAA,GAC/BtmB,EAAOwG,iBAAiB4M,4BAGtBwD,EAAyCyP,EAAS,wCAExD,MAAO,CACHb,sBAAuBK,IACvBlJ,aAAc3c,EAAOumB,cAAcC,qBACnCzB,kBAAmB/kB,EAAOwG,iBAAiB0K,wBAC3C6S,WAAYpnB,EAAgBonB,WAC5BL,cAAe/mB,EAAgB8pB,sBAC/BjE,gBAAiB7lB,EAAgB6lB,gBACjCH,eAAgB1lB,EAAgB+pB,gBAChC1Q,uBAAwBhW,EAAOumB,cAAcI,wBAC7C1U,qBAAsBtV,EAAgBsV,qBACtCI,6BAA8B1V,EAAgB0V,6BAC9CpU,OAAOuW,aAAc,EAAdA,EAAgBvW,SAASkT,aAAQ,EAARA,EAAUlT,OAC1CkJ,UAAWgK,aAAQ,EAARA,EAAUhK,UACrByP,uCAAsC,EACtCsH,kBAAmBle,EAAOyD,MAAMmjB,mBAChC1U,mBAAoBvV,EAAgBuV,mBACpC4E,kBAAmBqP,IACnBtP,mBAAoBoP,IACpBxD,gBAAgBjO,aAAc,EAAdA,EAAgB3T,IAChCmkB,oBAAqBA,IACrB5S,iCAAkCA,IAClCuB,eAAgBuS,IAChB/H,qBAAoB,EACpBwH,yBAAwB,EACxBD,eAAgB1lB,EAAOwG,iBAAiBqgB,qBACxCzI,YAAaA,IACbiH,qBAAsBA,IACtBE,YAAW,EACXD,iBAAkBU,IAClBxJ,iBAAgB,EAChBpJ,2BAA0B,EAC1B6C,yBAAwB,EACxBsN,OAAQ5mB,EAAgBmqB,eACxBxI,YAAayH,IACb/O,wBAAwB,EAAAA,GAAA,GAAuBhX,EAAOwG,kBACtDiW,uBAAsB,EACtB3L,sBAAuBA,IACvBqU,uBAAwB/R,IAA+BC,GAAA,EAAgB+Q,YAAa,EAAA2C,GAAA,GAAmCX,GAE/H,GAE6B,CAA6CY,K,2BCrnB1E,UAAe,EAAAvJ,GAAA,IANoB,WAAM,OACrC,uBAAK/J,OAAO,KAAKgK,QAAQ,YAAYuJ,MAAM,KAAKtJ,MAAM,8BAClD,wBAAMC,EAAE,8PAFyB,ICqBzC,UAAe,IAAA9W,OAfkD,SAAC,G,IAAEkE,EAAO,UAAO,OAC9E,gBAAC2M,GAAA3Y,EAAK,CACFmU,oBAAoB,mCACpB+T,KAAM,gBAAC,GAAO,MACdjmB,KAAM0W,GAAA,EAAUmH,MAEhB,wBACIqI,wBAAyB,CACrBC,OAAQ,cAAmBpc,IAC9B,YACS,6BAV4D,ICqBlF,UAAe,IAAAlE,OArB0D,SAAC,G,IAChEugB,GAD4E,cACnD,IAAIlf,QAC/B,SAACsG,EAAQ6Y,GAAc,iDAAI7Y,GAAQ,GAAG6Y,EAAUD,SAAO,EAAhC,GACvB,IAGJ,OAAKA,EAAQ7b,OAKT,uBAAKtE,UAAU,kBACX,sBAAIA,UAAU,sBACTmgB,EAAQla,KAAI,SAACoa,EAAQC,GAAU,OAC5B,gBAAC,GAAe,CAACla,IAAKka,EAAOxc,QAASuc,EAAOE,MADjB,MANjC,IAYf,I,0BCxBe,SAASC,GACpB3kB,EACA4kB,GAEA,OAAI5kB,EAAayI,OAAS,OAKtB,IAAAoc,MAAK7kB,GAAc,SAAC8kB,GAAgB,OAAAA,EAAYC,YAAYtc,MAAxB,OACpC,EAAAuc,GAAA,GAAuBhlB,EAAc4kB,GAM7C,C,gBCVMK,GAAmB,SAAC/hB,GAWtB,OAAO,IAAAgiB,MAAKhiB,EAVqC,CAC7C,KACA,oBACA,kBACA,OACA,QACA,UACA,gBAIR,EAiBA,SAVgC,SAACA,EAAkBiiB,GAC/C,SAAKA,GAAkC,IAArBA,EAAU1c,SAIrB0c,EAAUN,MAAK,SAACO,GACnB,OAX+B,SACnCC,EACAD,GACU,WAAAE,SAAQL,GAAiBI,GAAYJ,GAAiBG,GAAtD,CAQNG,CAA+BriB,EAASkiB,EAAxC,GAER,E,oDCWA,UAAe,IAAArhB,OAhCsD,SAAC,G,IAClE+gB,EAAW,cACXzB,EAAI,OACJmC,EAAW,cAEHC,GAA4B,EAAAC,GAAA,KAA0B,wBAErCxiB,EAAY4hB,EAAW,gBAC1Ca,EAAiC,GAAwBziB,EAASuiB,GAExE,OACI,uBAAKthB,UAAU,qBACX,gBAACyhB,GAAA,EAAa,CAAC1iB,QAASA,EAAShF,KAAM6E,GAAA9G,EAAY6H,WAElD6hB,GAAkC,gBAACE,GAAA,EAA4B,OAE9DL,GAAe,gBAACM,GAAA,EAAyB,CAACzC,KAAMA,EAAMyB,YAAaA,IAcjF,I,gECmDA,UAAe,IAAA/gB,OA/EgE,SAAC,G,IAC5E+gB,EAAW,cACXzB,EAAI,OACJ0C,EAAiB,oBAID3iB,GAEZ,UAAa,wCAEQY,EAAuD8gB,EAAW,gBAAtCkB,EAA2BlB,EAAW,uBACrF5hB,GAAU,EAAAe,GAAA,GAAgBD,EAA4BZ,KACpDqiB,GAA4B,EAAAC,GAAA,KAA0B,wBACxDC,EAAiC,GAAwBziB,EAASuiB,GAElEb,GAAY,EAAAqB,GAAA,GAAc5C,EAAMyB,GAEtC,OACI,uBAAK3gB,UAAU,0BACX,sBAAIA,UAAU,iCACV,gBAAC2K,EAAA,EAAgB,CAACjQ,KAAM,CAAEknB,kBAAiB,GAAIjoB,GAAG,sDAGtD,uBAAKqG,UAAU,4BACX,qBAAGA,UAAU,iBACT,wBAAMA,UAAU,cAAc,UAAGjB,EAAQkB,UAAS,MAClD,wBAAMD,UAAU,eAAejB,EAAQmB,WAE3C,uBAAKF,UAAU,mBACX,qBAAGA,UAAU,gCACT,wBAAMA,UAAU,kBAAkB,UAAGjB,EAAQsB,WAC5CtB,EAAQuB,UACL,wBAAMN,UAAU,kBAAkB,YAAKjB,EAAQuB,YAIvD,qBAAGN,UAAU,iBACRjB,EAAQwB,MAAQ,wBAAMP,UAAU,YAAY,UAAGjB,EAAQwB,OACvDxB,EAAQyB,mBACL,wBAAMR,UAAU,UAAU,YAAKjB,EAAQyB,oBAE1CzB,EAAQ2B,kBACL,wBAAMV,UAAU,gBAAgB,YAAKjB,EAAQ2B,mBAEhD3B,EAAQ0B,YACL,wBAAMT,UAAU,eAAe,WAAIjB,EAAQ0B,gBAM1D+gB,GAAkC,gBAACE,GAAA,EAA4B,MAEhE,uBAAK1hB,UAAU,2BACf,8BACI,gBAAC2K,EAAA,EAAgB,CACbjQ,KAAM,CAAEqnB,OAAO,EAAAC,GAAA,GAAkBvB,IACjC9mB,GAAG,0BAIX,gBAACsoB,GAAA,EAAyB,CAACxB,UAAWA,KAGrCoB,GACG,2BACI,uBAAK7hB,UAAU,+DACX,gBAACkiB,GAAA,EAAoB,CACjBC,8BAA8B,EAC9BC,OAAQP,MAOpC,IC5CA,UAAe,IAAAjiB,OArCkD,SAAC,G,IAC9DyiB,EAA2B,8BAC3BC,EAAmB,sBACnBzmB,EAAY,eACZqjB,EAAI,OAEJ,OAAImD,GAA+BC,EAE3B,gCACKzmB,EAAaoK,KAAI,SAAC0a,EAAaL,GAAU,OACtC,uBAAKtgB,UAAU,kCAAkCoG,IAAKua,EAAYhnB,IAC9D,gBAAC,GAAsB,CACnBulB,KAAMA,EACNyB,YAAaA,EACbiB,kBAAmBtB,EAAQ,IALG,KAclD,gCACKzkB,EAAaoK,KAAI,SAAC0a,GAAgB,OAC/B,uBAAK3gB,UAAU,6BAA6BoG,IAAKua,EAAYhnB,IACzD,gBAAC,GAAiB,CACdulB,KAAMA,EACNmC,YAAaxlB,EAAayI,OAAS,EACnCqc,YAAaA,IALU,IAW/C,I,SC9CA,YACI,aACI,QAAK,UAAC,CACFxf,KAAM,0BACN2C,SAAS,EAAAye,EAAA,KAAqBzhB,UAAU,0CACxC0hB,OAAO,EAAAD,EAAA,KAAqBzhB,UAAU,+CACxC,K,OAEF,OAAe,EAAM2hB,EAA2Bze,W,CACpD,CACJ,OAVwD,oBAUxD,EAVA,CAAwDC,EAAA,GCsBxD,UAAe,IAAArE,OAlB0D,SAAC,GACtE,OADiF,YAM7E,uBAAKI,UAAU,uBACX,uBAAKA,UAAU,8DACX,uBAAKA,UAAU,YAEf,oCAAgB,YAAYA,UAAU,QAAQqW,KAAK,SAC/C,gBAAC1L,EAAA,EAAgB,CAAChR,GAAG,2BAT1B,IAcf,I,oDCdA,UAAe,EAAA4c,GAAA,IANsB,WAAM,OACvC,uBAAK/J,OAAO,KAAKgK,QAAQ,YAAYuJ,MAAM,KAAKtJ,MAAM,8BAClD,wBAAMC,EAAE,sDAF2B,ICsE3C,UAAe,IAAA9W,OApDwD,SAAC,G,IACpE8iB,EAAO,UACPC,EAAQ,WACR1J,EAAU,aACV2J,EAAU,aACVC,EAAM,SACNC,EAAO,UACP/oB,EAAI,OAEJ,OACI,uBACIiG,UAAW,IAAW,aAAc,CAChC,eAAgB4iB,EAChB,eAAgBA,IAAeD,IAEnCza,SAAS,EAAA8I,GAAA,GAAe4R,GAAcC,EAAS,WAAM,OAAAA,EAAO9oB,EAAP,EAAe,EAAAoO,OAEpE,uBAAKnI,UAAU,uCACX,gBAAC,GAAS,CACNiM,oBAAqB,IACjB,qBACA,yBACA,CAAE,+BAAgCgN,MAI1C,sBAAIjZ,UAAU,qDAAqD0iB,IAGvE,uBACI1iB,UAAU,qEAAoE,YACpE,cAER2iB,GAAY1J,GAAc6J,GAG/BF,IAAeD,GACZ,uBAAK3iB,UAAU,wCACX,gBAAC+L,GAAA,GAAM,iBACY4W,EACf5U,KAAMhC,GAAA,GAAWiC,KACjBC,OAAO,mBACPC,QAASnC,GAAA,GAAcoC,WAEvB,gBAACxD,EAAA,EAAgB,CAAChR,GAAG,yBAM7C,I,SC7CA,yB,qDACI,EAAAE,MAAQ,CACJkpB,UAAU,GAGN,EAAAC,cAAe,IAAAC,aACf,EAAAC,YAAa,IAAAD,aAkLb,EAAAE,oBAAqE,SAACC,EAAMC,GAChFD,EAAKE,iBAAiB,iBAAiB,SAAC,GAAQ,WAC7BF,GACXC,GAER,GACJ,EAEQ,EAAAE,eAAiB,WACA,EAAKxe,MAAK,UAG3B,EAAKG,SAAS,CAAE6d,UAAU,GAElC,E,CACJ,QAvM0C,oBAUtC,YAAAle,kBAAA,WACyB3I,KAAK6I,MAAK,UAG3B7I,KAAKsnB,WAEb,EAEA,YAAAC,mBAAA,SAAmBC,GACP,IAAAf,EAAazmB,KAAK6I,MAAK,SAE3B4d,GAAYA,IAAae,EAAUf,UACnCzmB,KAAKsnB,WAEb,EAEA,YAAAre,qBAAA,WACQjJ,KAAKynB,aACLnd,OAAOod,aAAa1nB,KAAKynB,YAEzBznB,KAAKynB,gBAAavuB,EAE1B,EAEA,YAAAiQ,OAAA,W,MACU,EACFnJ,KAAK6I,MADD2d,EAAO,UAAEC,EAAQ,WAAE1J,EAAU,aAAE2J,EAAU,aAAEC,EAAM,SAAEgB,EAAU,aAAEf,EAAO,UAAE/oB,EAAI,OAG5EgpB,EAAa7mB,KAAKrC,MAAK,SAE/B,OACI,sBACImG,UAAW,IAAW,gBAAiB,kCAAgC,KACnE,EAAC,yBAAkBjG,MAAWA,E,IAElC+pB,IAAK5nB,KAAK8mB,cAEV,uBAAKhjB,UAAU,wBACX,gBAAC,GAAkB,CACf0iB,QAASA,EACTC,SAAUA,EACV1J,WAAYA,EACZ2J,WAAYA,EACZC,OAAQA,EACRC,QAASA,EACT/oB,KAAMA,KAIb8pB,GAAcd,IAAaJ,GACxB,uBAAK3iB,UAAU,sBAAqB,YAAW,mBAC1C6jB,GAIR3nB,KAAK6nB,gBAGlB,EAEQ,YAAAA,cAAR,sBACU,EAAiC7nB,KAAK6I,MAApCrP,EAAQ,WAAEitB,EAAQ,WAAEqB,EAAM,SAElC,OACI,gBAACC,GAAA,EAAU,MACN,SAACvc,GAAY,OACV,gBAAC,GAAAwc,cAAa,CACVC,eAAgB,EAAKhB,oBACrBiB,WAAW,wBACXC,OAAQ3c,EACR4c,MAAO5c,EACP6c,GAAI5B,EACJ6B,cAAY,EACZC,SAAW,EAAKlB,eAChBmB,QAAU,CAAC,EACXC,eAAa,GAEb,mCACeX,EACXhkB,UAAU,wBACV8jB,IAAK,EAAKZ,YAETP,EAAWjtB,EAAW,MAjBrB,GAuB1B,EAEQ,YAAA8tB,UAAR,sBACUoB,GAAQ,EAAAC,GAAA,KAAiB,EAAI3oB,KAAK4oB,qBAExC5oB,KAAKgJ,SAAS,CAAE6d,UAAU,IAE1B7mB,KAAKynB,WAAand,OAAOvB,YAAW,WAChC,IAAMsM,EAAQ,EAAKwT,gBACbva,EAAW,EAAKwa,oBAChB,EAA8B,EAAKjgB,MAAjChL,EAAI,OAAE,IAAAkrB,WAAAA,OAAU,IAAG,IAAA9c,KAAI,EAE3BoJ,GACAA,EAAM2T,aAGO9vB,IAAboV,GAA2B2a,MAAM3a,IACjChE,OAAO4e,SAAS,EAAG5a,GAGvBya,EAAWlrB,GAEX,EAAK4pB,gBAAavuB,CACtB,GAAGwvB,EACP,EAEQ,YAAAG,cAAR,WACI,IAAMznB,EAAYpB,KAAK8mB,aAAaqC,QAEpC,GAAK/nB,EAML,OAFcA,EAAUnC,cAA2B,iCAEnC/F,CACpB,EAEQ,YAAA4vB,kBAAR,WACI,IAAM1nB,EAAYpB,KAAKopB,qBACfrM,EAAe/c,KAAK6I,MAAK,WAEjC,GAAKzH,GAAakJ,SAAWA,OAAOkE,IAApC,CAIA,IAAM6a,EAAYtM,EAAa,EAAIzS,OAAOgf,YAAc,EAIxD,OAFIloB,EAAUmoB,wBAAwB/a,KAAOlE,OAAOkf,SAAWlf,OAAOmf,aAE7CJ,CANzB,CAOJ,EAKQ,YAAAD,mBAAR,WAGI,IAFA,IAAIhoB,EAAgCpB,KAAK8mB,aAAaqC,QAE/C/nB,GAAaA,EAAUsoB,eAAe,CACzC,GAAItoB,EAAUsoB,cAAcC,UAAUC,SAAS,iBAC3C,OAAOxoB,EAAUsoB,cAGrBtoB,EAAYA,EAAUsoB,aAC1B,CAEA,OAAO1pB,KAAK8mB,aAAaqC,QAAUnpB,KAAK8mB,aAAaqC,aAAUjwB,CACnE,EAEQ,YAAA0vB,mBAAR,WACI,YAA0B1vB,IAAtB8G,KAAK6pB,eAKT7pB,KAAK6pB,aAKG,IAJJC,WACI9pB,KAAKgnB,WAAWmC,QACVY,iBAAiB/pB,KAAKgnB,WAAWmC,SAASa,mBAC1C,OARHhqB,KAAK6pB,YAYpB,EAiBJ,EAvMA,CAA0C,EAAAjf,WC3B1C,IAAKqf,IAAL,SAAKA,GACD,oBACA,sBACA,oBACA,qBACH,CALD,CAAKA,KAAAA,GAAgB,KAOrB,Y,oDCYA,SAjB6B,SAACjH,EAAapmB,GACvC,QAAKomB,MAIDA,EAAKuB,UAAU2F,cAAc1F,MAAK,SAAC2F,GAAa,OAAAA,EAASC,kBAAT,QAIhDxtB,IAAUomB,EAAKuB,UAAU8F,cAElBrH,EAAKuB,UAAU8F,YAAYjiB,OAAS,EAInD,ECKA,IAUMkiB,IAAwB,KAAAC,iBAC1B,SAAC,GAAgC,OAA1B,OAA+B7tB,aAAL,IACjC,SAAC,GAAgC,OAA1B,OAA+B+Q,aAAL,IACjC,SAAC,GAAgC,OAA1B,OAA+ByD,mBAAL,IACjC,SAAC,GAAgC,OAA1B,OAA+BzU,WAAL,IACjC,SAAC,GAAgC,OAA1B,OAA+B0D,SAAL,IACjC,SAAC,GAAgC,OAA1B,OAA+B0f,4BAAL,IACjC,SAAChjB,EAAUkR,EAAUqD,EAAgBxU,EAAQomB,EAAMpD,GAC/C,IAAM4K,KACDzc,GAAYA,EAASlT,OACrBuW,GAAkBA,EAAevW,OAEhC4vB,KACF5tB,IAAYA,EAASkU,WACflU,EAASkU,SAASyT,MAChB,SAACxT,GAA6B,UAAkB7I,QAAQ6I,EAAQC,aAAe,CAAjD,IAGpCjD,KAAaD,IAAYA,EAASC,SAClC+O,EAAayN,GAAYC,EACzB/D,EAAa3J,IAAe0N,GAAiBzc,EAC7C0c,EA/BiC,SAC3CD,EACAD,EACAxc,EACA2V,EACA3T,GAEA,OAAQya,GAAiBza,IAA+BC,GAAA,EAAgB+Q,WAAawJ,GAAYxc,GAAW2V,CAChH,CAuB2DgH,CAC/CF,EACAD,EACAxc,IACAgV,IAAO,EAAAW,GAAA,GAAmCX,GAC1CpmB,aAAM,EAANA,EAAQwG,iBAAiB4M,4BAG7B,OAAI0a,EACO,CACH7sB,KAAM,GAAiB+lB,SACvB6C,UAAU,EACV1J,gBAAuE7jB,KAA3D0mB,aAAuB,EAAvBA,EAAyBG,+BACrC2G,WAAU,EACVzO,YAAY,GAIb,CACHpa,KAAM,GAAiB+lB,SACvB6C,UAAU,EACV1J,WAAU,EACV2J,WAAU,EACVzO,YAAY,EAEpB,IAGE2S,IAAuB,KAAAL,iBACzB,SAAC,GAAgC,OAA1B,OAA+B7tB,aAAL,IACjC,SAAC,GAAgC,OAA1B,OAA+BwU,mBAAL,IACjC,SAAC,G,IAAE1S,EAAI,OACG4S,EAAiB5S,EAAK0S,oBAE5B,OAAOE,EACD5S,EAAKwE,wBAAwBoO,EAAe5N,aAC5C,IACV,IACA,SAAC,GAAgC,OAA1B,OAA+B/G,WAAL,IACjC,SAACI,EAAUuU,EAAgByZ,EAAsBjuB,GAC7C,IAAMkuB,IAAa1Z,IACb,EAAAnL,GAAA,GAAemL,EAAgByZ,GAE/BJ,KACF5tB,IAAYA,EAASkU,WACflU,EAASkU,SAASyT,MACd,SAACxT,GAAY,UAAkB7I,QAAQ6I,EAAQC,aAAe,CAAjD,IAGrB8L,EAAa+N,GAAcL,EAMjC,MAJI5tB,IAAYA,EAASkU,WACflU,EAASkU,SAASyT,MAAK,SAACxT,GAAY,MAAuB,cAAvBA,EAAQC,UAAR,IAGxB,CAClB,IAAM8Z,EAA6BF,EAAqB/lB,QACpD,SAAC,GAAoC,OAA5B,QAA4B,IAEnCkmB,EAAkBD,EAA2B3iB,OAAS,EACtD6iB,GACF7Z,IAAkB4Z,IACZ,EAAA/kB,GAAA,GAAemL,EAAgB2Z,GAGzC,MAAO,CACHltB,KAAM,GAAiByF,QACvBmjB,UAAU,EACV1J,WAAYkO,EACZvE,WAAYuE,GAAkCD,EAC9C/S,YAAY,EAEpB,CAWA,OATgD,EAAA9U,GAAA,GAC5CvG,aAAM,EAANA,EAAQwG,iBACR,6EAG4CvG,IAAYA,EAASkU,WAC3DlU,EAASkU,SAASyT,MAAK,SAACxT,GAAY,QAACA,aAAO,EAAPA,EAASC,aAAc,IAAIia,WAAW,YAAvC,QAc1CruB,IAAYA,EAASkU,WACflU,EAASkU,SAASyT,MAChB,SAACxT,GACG,OACI,kBACA,wBACA,iBACA,iBACA,uBACA,uBAECtC,SAASsC,EAAQC,WARtB,IAbL,CACHpT,KAAM,GAAiByF,QACvBmjB,UAAU,EACV1J,WAAY+N,EACZpE,WAAYoE,EACZ7S,YAAY,GA6Bb,CACHpa,KAAM,GAAiByF,QACvBmjB,UAAU,EACV1J,WAAU,EACV2J,WAAY3J,IAAe0N,EAC3BxS,YAAY,EAEpB,IAGEkT,IAAwB,KAAAZ,iBAC1B,SAAC,GAAgC,OAA1B,OAA+Ba,oBAAL,IACjC,SAAC,GAAgC,OAA1B,OAA+BC,iBAAL,IACjC,SAAC,GAAgC,OAA1B,OAA+BlrB,SAAL,IACjC,SAAC,G,IAAE3B,EAAI,OACG8sB,EAAkB9sB,EAAK4sB,qBAE7B,OAAOE,EACD9sB,EAAKyE,yBAAyBqoB,EAAgB9nB,aAC9C,IACV,IACA,SAAC,GAAgC,OAA1B,OAA+B/G,WAAL,IACjC,SAAC6uB,EAAiB3rB,EAAcqjB,EAAMuI,EAAuB3uB,GACzD,IAAMsG,GACF,EAAAC,GAAA,GACIvG,aAAM,EAANA,EAAQwG,iBACR,sDAEF0nB,IAAaQ,IACb,EAAArlB,GAAA,GAAeqlB,EAAiBC,EAAuBroB,GAEvDsoB,IAAa7rB,IAAe,EAAA8rB,GAAA,GAA2B9rB,GACvD+rB,GACF1I,IAAQrjB,IAAe,EAAAglB,GAAA,GAAuBhlB,EAAcqjB,EAAKuB,WAC/DxH,EAAa+N,GAAcU,IAAeE,EAC1CzT,EAAa,GAAqB+K,EAAMpmB,GACxC+uB,GACF,EAAAxoB,GAAA,GACIvG,aAAM,EAANA,EAAQwG,iBACR,sDAEJooB,IACA7rB,aAAY,EAAZA,EAAc6kB,MACV,SAAC,G,IAAEmB,EAAsB,yBAAO,MAAiC,YAAjCA,aAAsB,EAAtBA,EAAwB9nB,KAAxB,KAGxC,MAAO,CACHA,KAAM,GAAiB4F,SACvBgjB,UAAU,EACV1J,WAAU,EACV2J,WAAY3J,GAAc9E,IAAe0T,EACzC1T,WAAU,EAElB,IAGE2T,IAAuB,KAAArB,iBACzB,SAAC,GAAgC,OAA1B,OAA+BsB,UAAL,IACjC,SAACC,GACG,IAAM/O,IAAa+O,GAAQA,EAAM/O,WAEjC,MAAO,CACHlf,KAAM,GAAiBkuB,QACvBtF,UAAU,EACV1J,WAAU,EACV2J,WAAY3J,EACZ9E,YAAY,EAEpB,IAGE+T,IAAuB,KAAAzB,iBACzB,SAAC,GAAoC,OAA1B,WAAmC0B,mBAAT,IACrC,SAAClY,GAAW,OAAAA,CAAA,IAiChB,UA9BgC,KAAAwW,gBAC5BD,GACAa,GACAP,GACAgB,GACAI,IACA,SAACE,EAAcC,EAAcC,EAAaC,EAAaC,GACnD,IAAML,EAAoBK,EAEpBC,GAAQ,IAAAC,SAAQ,CAACN,EAAcC,EAAcC,EAAaC,IAE1DI,EACFF,EAAM1lB,MAAK,SAACpM,GAAS,OAACA,EAAKsiB,YAActiB,EAAKwd,UAAzB,KAAwCsU,EAAMA,EAAMnkB,OAAS,GAEtF,OAAOmkB,EAAMxiB,KAAI,SAACtP,EAAM2pB,GACpB,IAAMsI,EAAqBH,EACtBI,MAAM,EAAGvI,GACTtT,OAAM,SAAC8b,GAAa,OAAAA,EAAS7P,aAAe6P,EAAS3U,UAAjC,IAEzB,OAAO,gCACAxd,GAAI,CACPgsB,SAAUgG,EAAkB5uB,OAASpD,EAAKoD,KAC1CiqB,QAAQ,EAERpB,WAAYgG,GAAsBjyB,EAAKisB,aAAeuF,GAE9D,GACJ,ICjNJ,IAAMY,IAAc,IAAAC,OAAK,WACrB,SAAAC,EAAA,IACI,WACI,gEAFR,IASEC,IAAoB,IAAAF,OAAK,WAC3B,SAAAC,EAAA,IACI,WACI,gEAFR,IASEhB,IAAU,IAAAe,OAAK,WACjB,SAAAC,EAAA,IACI,WACI,wCAFR,IASEtpB,IAAW,IAAAqpB,OAAK,WAClB,SAAAC,EAAA,IACI,WACI,+DAFR,IAyDJ,4B,qDAQI,EAAApvB,MAAuB,CACnBsvB,yBAAyB,EACzBvb,aAAa,EACbwb,eAAe,EACf9G,qBAAqB,EACrBqF,4BAA4B,EAC5B5J,cAAc,EACdsL,cAAe,IAoZX,EAAAC,0BAAwC,WACpC,IAAAhH,EAAwB,EAAKzoB,MAAK,oBAE1C,EAAKqL,SAAS,CAAEod,qBAAsBA,GAC1C,EAEQ,EAAAiH,6BAA4E,SAChFpgB,GAEM,MAA8B,EAAKpE,MAAjC0jB,EAAK,QAAEjzB,EAAgB,mBACzBg0B,GAAkB,IAAAC,WAAUhB,EAAO,CAAE9F,UAAU,IAC/C+G,EAAaF,GAAmB,GAAKf,EAAMe,GAEjD,GAAKE,EAAL,CAIA,IAAMC,EAAelB,EAAM/V,KAAKlR,IAAIgoB,EAAkB,EAAG,IAErDG,GACAn0B,EAAiBe,mBAAmBozB,EAAa5vB,MAGrD,EAAK6vB,eAAeF,EAAW3vB,KAAMoP,EARrC,CASJ,EAEQ,EAAAZ,4BAA0D,SAACC,GACzD,MAA8B,EAAKzD,MAAjC0jB,EAAK,QAAkB,mBAEdlyB,mBAAmBkyB,EAAMA,EAAMnkB,OAAS,GAAGvK,MAExD,EAAK8vB,mBACL,EAAKA,kBAAkBC,eAG3B1U,GAAwBH,wBAExB,EAAK/P,SAAS,CAAEkkB,eAAe,IAAQ,WACnC7gB,GAA4BC,EAChC,GACJ,EAEQ,EAAA2B,qBAAyD,SAACvD,GACtD,IAAAmjB,EAAoB,EAAKhlB,MAAK,gBAEtC,OAAOglB,EAAgBlmB,YAAW,MAA3BkmB,EAA+BnjB,EAC1C,EAEQ,EAAAojB,uBAA4D,WAChE,EAAKJ,eAAe,GAAiBjqB,SACzC,EAEQ,EAAAsqB,0BAAgE,SAAC,G,IAAEvvB,EAAI,OACrE,EACF,EAAKb,MAD2BqwB,EAA8B,6BAAEC,EAAc,iBAAEC,EAAe,kBAG3F3B,EAAU,EAAK1jB,MAAK,MAEtBslB,GAAgC,EAAA1C,GAAA,GAClCjtB,EAAK6sB,mBAAqB,IAGxB+C,GACDH,IACAC,IAAoB,GAAiBnC,SAClCmC,IAAoB,GAAiB5qB,SAEvC+qB,GACF,IAAAd,WAAUhB,EAAO,CAAE1uB,KAAM,GAAiB4F,YACtC,IAAA8pB,WAAUhB,EAAO,CAAE1uB,KAAMowB,KAAqBG,EAGlDJ,IACCG,GACDE,IAEA,EAAKX,eAAe,GAAiBjqB,UACrC,EAAKuF,SAAS,CAAEqF,MAAO,IAAI,MAG/B,EAAKrF,SAAS,CAAEyiB,2BAA4B0C,GAChD,EAEQ,EAAAG,sBAAoC,WACxC,EAAKtlB,SAAS,CAAEqF,WAAOnV,GAC3B,EAEQ,EAAAq1B,eAAmD,SAAC1wB,GAC3B,EAAKgL,MAAK,iBAEtBrO,gBAAgBqD,EACrC,EAEQ,EAAA2wB,qBAA+C,SAACngB,GACpD,EAAKogB,YAAYpgB,GAIjB,EAAKrF,SAAS,CAAEqF,MAAK,GACzB,EAEQ,EAAAogB,YAAsC,SAACpgB,GACnB,EAAKxF,MAAK,YAEtBtH,IAAI8M,GAEZ,EAAKsf,mBACL,EAAKA,kBAAkBe,UAAUrgB,EAEzC,EAEQ,EAAAsgB,eAAmD,SAAC9wB,GACxD,EAAK6vB,eAAe7vB,EACxB,EAEQ,EAAA+wB,YAA0B,WAC9B,EAAKvB,6BAA6B,CAAEwB,WAAW,GACnD,EAEQ,EAAAC,6BAA8D,SAACC,GACnE,EAAK/lB,SAAS,CAAE6Y,aAAckN,GAClC,EAEQ,EAAAC,cAAuD,SAAC,G,IAAEtd,EAAW,cACnE,EAAiE,EAAK7I,MAApEO,EAAQ,WAAE6lB,EAAO,UAAEC,EAAuB,0BAAE5M,EAAc,iBAElE,OAAI4M,GACI5kB,OAAOkE,IACClE,OAAOkE,IAAIhC,SAASxL,KAAOiuB,GAIvC,EAAKtB,mBACL,EAAKA,kBAAkBwB,gBAGvB7M,GACA,EAAK8M,oBAAoB,EAAiBvO,OAG1CnP,IACA,EAAK1I,SAAS,CAAE0I,aAAa,MAExB,EAAA2Q,EAAA,MACG/X,OAAOkE,KACAlE,OAAOkE,IAAIhC,SAASpN,OAAOgK,QAK9C,EAAKskB,eAAe,GAAiB9J,UACzC,EAEQ,EAAAyL,uBAAqE,SACzEpC,GAEA,EAAKjkB,SAAS,CAAEikB,wBAAuB,IAEnCA,EACA,EAAKI,+BAEL,EAAKK,eAAe,GAAiBpqB,QAE7C,EAEQ,EAAAgsB,qBAAmC,WACvC,EAAKF,oBAAoB,EAAiB/T,MAC9C,EAEQ,EAAAkU,4BAA0C,WAC9C,EAAKH,oBAAoB,EAAiB3O,cAC9C,EAEQ,EAAA2O,oBAA4D,SAACI,GACzD,IAAAC,EAAqB,EAAK5mB,MAAK,iBAEnC2mB,IAAqB,EAAiB/O,gBAAiB,EAAA4B,EAAA,KACnD/X,OAAOkE,KACPlE,OAAOkE,IAAIhC,SAASE,QAAQ+iB,IAMpC,EAAK/B,eAAe,GAAiB9J,UACrC,EAAK5a,SAAS,CAAEwmB,iBAAgB,IACpC,EAEQ,EAAAE,iBAA+B,WACN,EAAK7mB,MAAK,iBAEtBpN,cACrB,EAEQ,EAAAk0B,wBAAwD,SAACv0B,GAChC,EAAKyN,MAAK,iBAEtBnN,kBAAkBN,EACvC,E,CACJ,QA1mBuB,oBAqBnB,YAAA6N,qBAAA,WACQjJ,KAAK4vB,8BACL5vB,KAAK4vB,8BACL5vB,KAAK4vB,iCAA8B12B,GAGvCoR,OAAOulB,oBAAoB,eAAgB7vB,KAAK0vB,kBAChD1vB,KAAK0vB,kBACT,EAEM,YAAA/mB,kBAAN,W,wLACU,EAUF3I,KAAK6I,MATLvP,EAAgB,mBAChBw2B,EAAU,aACVzyB,EAAW,cACX0yB,EAAuB,0BACvBC,EAAkB,qBAClBlzB,EAAgB,mBAChBwB,EAAY,eACZ2xB,EAAsB,yBACtBC,EAAuB,0B,iBAIJ,O,sBAAA,GAAMvjB,QAAQwjB,IAAI,CAAC7xB,EAAawxB,EAAY,CAC3DrxB,OAAQ,CACJC,QAAS,CACL,6CACA,gDAGR5B,EAAiBiD,oB,cAPZvB,EAAU,SAOoB,QAEjC4xB,GAA8C,QAAlC,EAAgB,QAAhB,EAAA5xB,EAAK/B,mBAAW,eAAE2G,wBAAgB,eAAE0K,0BAA2B,GAC3EuiB,EAAqB5lB,EAAsB2lB,GAE7CA,EAAUhoB,OAAS,EACH,GAAM6nB,EAAuBI,IAD7C,M,OACMC,EAAU,SAEhBtwB,KAAKgJ,SAAS,CACVmkB,cAAemD,EAAQ9xB,KAAK+xB,qBAAuB,K,wBAI3DzzB,EAAiBmD,oBAET,GAAkCzB,EAAK/B,aAAe,CAAC,GAAC,MAA/C,QAAT,MAA2B,CAAC,EAAC,GAApB6D,SAAAA,OAAQ,IAAG,KAAE,GACxBkwB,EAAqBhyB,EAAKiyB,iBAAiB,UAAY,IAEtCroB,SACXzC,EAAa3F,KAAK6I,MAAK,SAE/B7I,KAAKgJ,SAAS,CACVqF,MAAO,IAAItG,EAAA,EAAY,CACnBue,MACIkK,EAAmB,GAAGlK,OACtB3gB,EAASf,UAAU,wBACvBgD,QAAS4oB,EAAmB,GAAG5oB,QAC/BpJ,KAAM,CAAC,EACPyG,KAAM,eAKZyrB,EAAYX,EAAwB,CAAE3vB,aAAcE,IAE1DN,KAAK4vB,4BAA8BM,EAC/BlwB,KAAK+tB,2BAET/tB,KAAK2tB,kBAAoB+C,EACzBA,EAAUC,eAAc,SAACC,GAAW,OAAAZ,EAAmBa,OAAOD,EAA1B,IACpCF,EAAUI,gBAAgB,CAAEC,UAAW1zB,IACvCqzB,EAAUM,aAEV13B,EAAiBa,gBAEXwF,EAAenB,EAAK6sB,kBACpBrI,EAAOxkB,EAAK2B,UAEZ8wB,EACc,QAAhB,EAAAzyB,EAAK/B,mBAAW,eAAE2G,iBAAiB6tB,wBAGjCC,EACqD,QAAvD,EAAgB,QAAhB,EAAA1yB,EAAK/B,mBAAW,eAAE0mB,cAAcI,+BAAuB,SAErD6C,IACApD,KACArjB,GACFsxB,GACA3M,GAAqB3kB,EAAcqjB,EAAKuB,WAE5CvkB,KAAKgJ,SAAS,CACVikB,wBAZyC,KAazCpL,aAAcqP,IAGd9K,EACApmB,KAAKgJ,SAAS,CAAEod,oBAAmB,GAAIpmB,KAAK4uB,aAE5C5uB,KAAK4uB,cAGTtkB,OAAO8c,iBAAiB,eAAgBpnB,KAAK0vB,kB,0CAGxBxyB,OACjB8C,KAAKwuB,qBAAqB,G,+BAKtC,YAAArlB,OAAA,WACY,IAAAkF,EAAUrO,KAAKrC,MAAK,MACxBwzB,EAAa,KAgBjB,OAdI9iB,IAEI8iB,GADA,EAAAC,EAAA,GAAc/iB,GAEV,gBAACgjB,EAAA,EAAU,CACPhjB,MAAOA,EACPijB,QAAStxB,KAAKsuB,sBACdhI,MAAOjY,EAAMiY,QAIR,gBAAC+K,EAAA,EAAU,CAAChjB,MAAOA,EAAOijB,QAAStxB,KAAKsuB,yBAKzD,uBAAKxqB,UAAW,IAAW,+BAAgC,CAAE,eAAe,EAAAue,EAAA,OAAe,YAAY,0BAA0B5kB,GAAG,2BAChI,uBAAKqG,UAAU,2CACV9D,KAAK6nB,iBAETsJ,EAGb,EAEQ,YAAAtJ,cAAR,e,EAAA,OACU,EAA+F7nB,KAAK6I,MAAlG0oB,EAAS,YAAEnoB,EAAQ,WAAE,IAAAooB,WAAAA,OAAU,IAAG,KAAE,EAAEjF,EAAK,QAAEzgB,EAA2B,8BAAEvJ,EAAc,iBAE1F,EAAkEvC,KAAKrC,MAArEswB,EAAc,iBAAEC,EAAe,kBAAExc,EAAW,cAAEwb,EAAa,gBAEnE,GAAIxb,EACA,OAAO,gBAAC,EAAgB,CAACtI,SAAUA,EAAUR,aAAc,MAG/D,IAAMsF,EAAsB+f,EACtBA,IAAmB,GAAiBlC,QACpCmC,IAAoB,GAAiBnC,QAE3C,OACI,gBAAC1iB,EAAA,EAAc,CAACC,wBAAsB,EAACC,UAAW2jB,GAC9C,uBAAKppB,UAAU,eACX,gBAAC,GAAmB,CAACyF,WAAauC,GAA+BylB,GAAchvB,EAAevE,4BAE9F,gBAAC,GAAmB,CAACwzB,WAAYA,IAChC1lB,IAAuD,QAAxB,EAAA9L,KAAKrC,MAAMwvB,qBAAa,eAAE/kB,QAAS,GAC/D,gBAAC,GAAuB,CACpB6F,qBAAsBjO,KAAKiO,qBAC3BC,oBAAqBA,EACrBC,iBAAkBnO,KAAKwuB,qBACvBpgB,oBAAqBpO,KAAK2vB,0BAIlC,sBAAI7rB,UAAU,kBACV,uBAAKA,UAAU,gDAA8C,+KAG5DyoB,EACIznB,QAAO,SAACrK,GAAS,OAAAA,EAAKwd,UAAL,IACjBlO,KAAI,SAACtP,GACF,SAAKg3B,YAAW,gCACTh3B,GAAI,CACPgsB,SAAUwH,EACJA,IAAmBxzB,EAAKoD,KACxBqwB,IAAoBzzB,EAAKoD,KAC/BiqB,OAAQyJ,IALZ,MAWfvxB,KAAK0xB,oBAGlB,EAEQ,YAAAD,WAAR,SAAmBh3B,GACf,OAAQA,EAAKoD,MACT,KAAK,GAAiB+lB,SAClB,OAAO5jB,KAAK2xB,mBAAmBl3B,GAEnC,KAAK,GAAiBgJ,SAClB,OAAOzD,KAAK4xB,mBAAmBn3B,GAKnC,KAAK,GAAiBsxB,QAClB,OAAO/rB,KAAK6xB,kBAAkBp3B,GAElC,QACI,OAAO,KAEnB,EAEQ,YAAAk3B,mBAAR,SAA2Bl3B,GACjB,MAAkDuF,KAAK6I,MAArDyZ,EAAc,iBAAExW,EAA2B,8BAC7C,EAGF9L,KAAKrC,MAFL,IAAA6xB,iBAAAA,OAAgB,IAAG,EAAAlN,EAAiB,EAAiBzB,MAAQ,EAAiBxF,MAAK,EACnFwG,EAAY,eAGhB,OACI,gBAAC,IAAY,iBACLpnB,EAAI,CACR+rB,QAAS,gBAAC/X,EAAA,EAAgB,CAAChR,GAAG,8BAC9ByM,IAAKzP,EAAKoD,KACV8oB,OAAQ3mB,KAAK2uB,eACb5F,WAAY/oB,KAAKuuB,eACjB5G,WAAY,gBAAC,GAAkB,MAC/Bf,QACI,gBAAC,GAAY,CACTpV,UAAWxR,KAAKgvB,cAChBvd,eAAgBzR,KAAKyuB,gBAI7B,gBAAC,GAAQ,CACLxgB,qBAAsBjO,KAAKiO,qBAC3BoU,YAAY,EAAAA,EAAA,KACZR,aAAcA,EACdC,qBAAwBhW,EACxByU,iBAAkBvgB,KAAKqtB,6BACvB/N,iBAAkBtf,KAAKovB,oBACvBjW,kBAAmBnZ,KAAKqtB,6BACxB9N,uBAAwBvf,KAAKyuB,YAC7BtN,QAASnhB,KAAK4uB,YACdhU,SAAU5a,KAAKqtB,6BACfjN,cAAepgB,KAAKyuB,YACpBjP,wBAAyBxf,KAAK8uB,6BAC9B3gB,iBAAkBnO,KAAKwuB,qBACvBpgB,oBAAqBpO,KAAK2vB,wBAC1Bl1B,KAAMA,EACN2gB,SAAUoU,IAI1B,EAEQ,YAAAoC,mBAAR,SAA2Bn3B,GACjB,MAA2EuF,KAAK6I,MAA9EipB,EAAc,iBAAE9O,EAAI,OAAE,IAAArjB,aAAAA,OAAY,IAAG,KAAE,EAAEwmB,EAA2B,8BAEtE,EAAmDnmB,KAAKrC,MAAtDsvB,EAAuB,0BAAE7G,EAAmB,sBAEpD,GAAKpD,EAIL,OACI,gBAAC,IAAY,iBACLvoB,EAAI,CACR+rB,QAAS,gBAAC/X,EAAA,EAAgB,CAAChR,GAAG,8BAC9ByM,IAAKzP,EAAKoD,KACV8oB,OAAQ3mB,KAAK2uB,eACb5F,WAAY/oB,KAAKuuB,eACjB3H,QAAS,gBAAC,GAAe,CAAC5D,KAAMA,EAAMrjB,aAAcA,EAAcymB,oBAAqBA,EAAqBD,4BAA6BA,MAEzI,gBAAC4L,GAAA,EAAa,CAACC,gBAAiB,gBAACC,EAAAr2B,EAAmB,OAChD,gBAAC6H,GAAQ,CACLyuB,eAAgBJ,EAChB7E,wBAAyBA,EACzB7G,oBAAqBA,EACrB+L,iBAAkBnyB,KAAKqvB,uBACvBpU,gBAAiBjb,KAAKuvB,4BACtBpO,QAASnhB,KAAK4uB,YACdhU,SAAU5a,KAAKsvB,qBACf8C,sBAAuBpyB,KAAKotB,0BAC5Bjf,iBAAkBnO,KAAKwuB,qBACvB/zB,KAAMA,KAK1B,EAyBQ,YAAAo3B,kBAAR,SAA0Bp3B,GAChB,MAAsCuF,KAAK6I,MAAzClJ,EAAY,eAAEqjB,EAAI,OAAEnjB,EAAW,cAEvC,OACI,gBAAC,IAAY,iBACLpF,EAAI,CACR+rB,QAAS,gBAAC/X,EAAA,EAAgB,CAAChR,GAAG,4BAC9ByM,IAAKzP,EAAKoD,KACV8oB,OAAQ3mB,KAAK2uB,eACb5F,WAAY/oB,KAAKuuB,iBAEjB,gBAACwD,GAAA,EAAa,CAACC,gBAAiB,gBAACK,EAAA,EAAiB,OAC9C,gBAACtG,GAAO,CACJ9d,qBAAsBjO,KAAKiO,qBAC3BpO,YAAaA,EACbwiB,YAAY,EAAAA,EAAA,KACZiC,wBACItB,IAAQrjB,IACF2kB,GAAqB3kB,EAAcqjB,EAAKuB,WAGlD+N,mBAAoBtyB,KAAK8tB,uBACzByE,WAAYvyB,KAAKqM,4BACjB8U,QAASnhB,KAAK4uB,YACd3b,SAAUjT,KAAKqM,4BACfmmB,cAAexyB,KAAKyuB,YACpBtgB,iBAAkBnO,KAAKwuB,wBAK3C,EAEQ,YAAAkD,kBAAR,WACY,IAAAtL,EAAwBpmB,KAAKrC,MAAK,oBAE1C,OACI,gBAACoqB,GAAA,EAAU,MACN,SAACvc,GACE,OAAIA,EAEI,gBAACumB,GAAA,EAAa,KACV,gBAACz1B,EAAA,EAAS,CAACC,OAAM,kBACjB,gBAACywB,GAAiB,CAAC5G,oBAAqBA,KAMhD,yBAAOtiB,UAAU,eACb,gBAACiuB,GAAA,EAAa,KACV,gBAAClF,GAAW,CAACzG,oBAAqBA,IAClC,gBAAC9pB,EAAA,EAAS,CAACC,OAAM,mBAIjC,GAGZ,EAEQ,YAAAmxB,eAAR,SAAuB7vB,EAAwBoP,GACrC,MAA+BjN,KAAK6I,MAAlC8X,EAAU,aAAEtS,EAAK,QAAEke,EAAK,QACxB0B,EAAmBjuB,KAAKrC,MAAK,eAC/BlD,GAAO,IAAAoM,MAAK0lB,EAAO,CAAE1uB,KAAI,IAE1BpD,GAIDwzB,IAAmBxzB,EAAKoD,OAIxBoP,GAAWA,EAAQ4hB,UACnB7uB,KAAKgJ,SAAS,CAAEklB,gBAAiBzzB,EAAKoD,OAEtCmC,KAAKgJ,SAAS,CAAEilB,eAAgBxzB,EAAKoD,OAGrCwQ,GACAsS,EAAWtS,GAEnB,EAyMJ,EA1mBA,CAAuB,EAAAzD,WA4mBvB,SAAepC,GACX,EAAAga,EAAA,IAAc,EAAA1P,EAAA,IAAa,EAAAnQ,EAAA,IC5vBhB,SAA4B,G,MACvCpJ,EAAe,kBACfiU,EAAa,gBAELhP,EAA2BgP,EAAa,KAAlCilB,EAAqBjlB,EAAa,OAA1BklB,EAAallB,EAAa,SACxC,GAA6BhP,EAAK9B,eAAiB,CAAC,GAAC,WAArD80B,OAAU,IAAG,OAAW,EAC1BmB,EAAmBF,EAAOG,sBAC1B,EAcFp0B,EAAK/B,aAAe,CAAC,EAbrB,IAAA2G,iBAAA,aAMI,CAAC,EAAC,EALF,IAAAqgB,qBAAsBnB,OAAc,IAAG,GAAK,EAC5C,IAAAuQ,+BAAAA,OAA8B,IAAG,GAC7BC,oBAAoB,EACpBC,sBAAsB,GACzB,EAEL,IAAA1yB,MAAA,aAII,CAAC,EAAC,EAHF,IAAA2yB,UAAW5pB,OAAQ,IAAG,KAAE,EACxB,IAAA6pB,kBAAmBxD,OAAgB,IAAG,KAAE,EACxC,IAAAyD,SAAUjE,OAAO,IAAG,KAAE,EAE1B,IAAAkE,gBAAmB,QAAnB,MAA4E,CAAC,EAAC,GAA3DC,oBAAqBlE,OAAuB,IAAG,GAAK,EAGrEmE,GAAkC,KAAA9I,iBACpC,SAAC,GAA6D,OAA/B,2BAA+B,IAC9D,SAACzwB,GAAc,gBAACw5B,GACZ,OAAOx5B,EAAUw5B,GAAY,SAAC,GAAkC,OAAAjI,EAAT,yBAAS,GACpE,CAFe,IAKbkI,EAAyB1xB,QAAQgxB,EAA+BC,oBAChE3M,GACN,EAAAhjB,GAAA,GACoB,QAAhB,EAAA3E,EAAK/B,mBAAW,eAAE2G,iBAClB,kDAGJ,MAAO,CACHgO,eAAgB5S,EAAK0S,oBACrB8R,KAAMxkB,EAAK2B,UACXwgB,WAAYpnB,EAAgBonB,WAC5BhhB,aAAcnB,EAAK6sB,kBACnByG,eAAgBa,GAA8C,iBAA1BA,EAAiB90B,KACrDykB,eAAc,EACdkR,kBAAmBd,EAASc,oBAC5BrN,4BAA2B,EAC3BoL,UAAWmB,EAASnB,YACpBrC,wBAAuB,EACvBpjB,4BAA6BynB,EAC7Bj1B,aAAc/E,EAAgB+E,aAC9B2xB,uBAAwB12B,EAAgB02B,uBACxC7mB,SAAQ,EACR6lB,QAAO,EACPQ,iBAAgB,EAChB+B,WAAU,EACVtB,wBAAyBmD,EAAgC,CACrD95B,gBAAe,EACfiU,cAAa,IAEjB+e,MAAO/tB,EAAK9B,cAAgB,GAAwB8Q,GAAiB,KAE7E,GD+rB+B,CAAiCimB,O,SEzuBhE,YASI,WAAY5qB,GACR,IhE9B8ClD,EgE8B9C,IAAK,UAACkD,IAAM,K,OATR,EAAAtP,iBAAkB,IAAAm6B,uBAAsB,CAC5CC,QAAQ,EAAAtN,EAAA,KAAqBuN,YAC7BC,oBAAoB,IAEhB,EAAA7D,oBAAqB,EAAA8D,EAAA,KACrB,EAAAjG,iBhE1B0CloB,GgE0BM,EAAA0gB,EAAA,MhEzBjD,EAAAhE,EAAA,KACD,IAAI,EAAwB9Z,EAAqB5C,GACjD,IAAI,GgE4BN,EAAK9F,aAAc,EAAAk0B,EAAA,GACf,CAAEC,OAAQnrB,EAAMorB,cAChB,CACIC,WAAY,CAAC,sBACbC,WAAYtrB,EAAMsrB,WAClBC,WAAYvrB,EAAMwrB,iBAAmBxrB,EAAMwrB,iBAAmB,K,CAG1E,CAgCJ,OAnDyC,oBAqBrC,YAAA1rB,kBAAA,WACY,IAAAtL,EAAgB2C,KAAK6I,MAAK,YAElC,kBAAyB,WAAIxL,GACjC,EAEA,YAAA8L,OAAA,WACI,OACI,gBAACmrB,EAAA,EAAa,CAACC,OAAQv0B,KAAKH,aACxB,gBAAC20B,EAAA,EAAc,CAACj7B,gBAAiByG,KAAKzG,iBAClC,gBAACk7B,EAAA,EAAgB,CAACl7B,gBAAiByG,KAAKzG,iBACpC,gBAACm7B,EAAA94B,EAAiB,CAACrC,gBAAiByG,KAAKzG,iBACrC,gBAAC8I,EAAA,EAAiB,CACd9I,gBAAiByG,KAAKzG,gBACtBsG,aAAa,EAAAk0B,EAAA,MAEb,gBAAC,IAAQ,iBACD/zB,KAAK6I,MAAK,CACdknB,wBAAyB,EAAA4E,gCACzB3E,mBAAoBhwB,KAAKgwB,mBACzBnC,gBAAiB7tB,KAAK6tB,gBACtBhuB,YAAaG,KAAKH,mBAQlD,EACJ,EAnDA,CAAyC,EAAA+K,U,iECdrCgqB,EACA3nB,E,WCPJ,SDMI2nB,ECVyCC,EAAA,EDWzC5nB,ECX0D,CAC1DvF,kBAAmB,gBDYZ,SACHotB,GAIA,OAAO,SACHC,GAEA,IAAMC,GAAqD,IAAAtxB,OAAK,SAACmF,GAAU,OACvE,gBAACksB,GAAiB,iBAAKlsB,GADgD,IAIrEosB,EAA0E,SAC5EpsB,GAEA,IAAMjG,GAAU,IAAA5F,YAAW43B,GAErBM,GAAa,IAAAx7B,UACf,WACI,OA/BxB,SACIw7B,GAIA,OAA6B,IAAtBA,EAAW9sB,MACtB,CAyBwB+sB,CAAoBL,GACdA,IACAA,CAFN,GAGJ,IAGEM,EAAcxyB,EACdsyB,EAAWtyB,EAASiG,GACpBjG,EAEN,IAAKwyB,EACD,OAAO,KAGX,IAAMC,GAAc,gCAAKD,GAAgBvsB,GAEzC,OAAO,gBAACmsB,GAAuB,iBAAKK,GACxC,EAQA,OANIpoB,GAAWA,EAAQvF,mBAAqBqtB,IACxCE,EAAmBK,YAAc,UAAGroB,EAAQvF,kBAAiB,YACzDqtB,EAAkBO,aAAeP,EAAkB9vB,KAAI,MAIxDgwB,CACX,CACJ,E,yDEhEJ,YAOI,WAAY,G,IACR,IAAAz2B,KAAAA,OAAI,IAAG,GAAC,EAAC,EACT,IAAAoJ,QAAAA,OAAO,IAAG,KAAE,EACZ,IAAA0e,MAAAA,OAAK,IAAG,KAAE,EACV,IAAArhB,KAAAA,OAAI,IAAG,KAAE,EAOT,IAAK,YAAE,K,MAEgC,mBAA5B/H,MAAMq4B,kBACbr4B,MAAMq4B,kBAAkB,EAAMxtB,GAE9B,EAAKytB,OAAQ,IAAIt4B,OAAQs4B,MAI7B,EAAKh3B,KAAOA,EACZ,EAAKoJ,QAAUA,EACf,EAAK3C,KAAOA,EACZ,EAAKqhB,MAAQA,EACb,EAAKzoB,KAAO,S,CAChB,CAkBJ,OAlDyC,oBAqC3B,YAAA43B,iBAAV,SAA2B,G,IACvBxwB,EAAI,OACJywB,EAAY,eACZC,EAAY,eAMZ31B,KAAKiF,KAAOjF,KAAKiF,MAAQA,EACzBjF,KAAK4H,QAAU5H,KAAK4H,SAAW8tB,EAC/B11B,KAAKsmB,MAAQtmB,KAAKsmB,OAASqP,CAC/B,EACJ,EAlDA,CAAyCz4B,M,gKCsBzC,SAAe,IAAAwG,OAXsC,SAAC,G,IAAEkyB,EAAI,OAAEzwB,EAAK,QAC/D,OACI,uBAAKrB,UAAU,aACX,wBAAMA,UAAU,mBACXqB,QAAAA,EAAS,gBAACsJ,EAAA,EAAgB,CAAChR,GAAG,uBAC3B,IACR,wBAAMqG,UAAU,mBAAmB8xB,GAG/C,I,sCCUA,yB,qDACY,EAAAC,KAAO,CACXC,WAAY,qBAwFR,EAAAC,qBAAwD,SAACtmB,GACvD,MAA4B,EAAK5G,MAA/BwF,EAAK,QAAE,IAAAijB,QAAAA,OAAO,IAAG,IAAArlB,KAAI,EAEzBoC,GACAijB,EAAQ7hB,EAAMumB,YAAa,CAAE3nB,MAAK,GAE1C,E,CACJ,QAjGwC,oBAKpC,YAAAlF,OAAA,WACY,IAAAkF,EAAUrO,KAAK6I,MAAK,MAE5B,OACI,gBAAC6N,EAAA,EAAK,CACFE,yBAAyB,eACzBif,KAAM71B,KAAK61B,KACX5f,OAAQjW,KAAKi2B,eACbpf,OAAQ7W,KAAKk2B,eACb3gB,SAAUlH,EACVqH,eAAgB1V,KAAK+1B,sBAEpB/1B,KAAKm2B,aAGlB,EAEQ,YAAAD,aAAR,WACU,MAAkEl2B,KAAK6I,MAArEwF,EAAK,QAAE,IAAAiY,MAAAA,OAAK,IAAG,EAAAjY,IAAS,EAAA+iB,EAAA,GAAc/iB,IAAUA,EAAMiY,MAAK,EAEnE,OACI,gBAACxP,EAAA,EAAW,KACR,gBAACsf,EAAA,EAAS,CACNrmB,oBAAoB,gCACpB8B,KAAM,IAASwkB,QAEnB,oCAAgB,YAAYlc,KAAK,SAC5BmM,GAAS,gBAAC7X,EAAA,EAAgB,CAAChR,GAAG,0BAI/C,EAEQ,YAAA04B,WAAR,WACU,MAA8Cn2B,KAAK6I,MAAjDwF,EAAK,QAAE,IAAAzG,QAAAA,OAAO,IAAG,EAAAyG,GAASA,EAAMzG,QAAO,EAE/C,OACI,gCACKyG,GCvEF,SAAqBA,GAEhC,MAAO,SAAUA,GACE,WAAfA,EAAMxQ,MACN,SAAUwQ,GACY,iBAAfA,EAAM7P,MACE,OAAf6P,EAAM7P,MACN,6BAA8B6P,EAAM7P,MACW,kBAAxC6P,EAAM7P,KAAK83B,wBAC1B,CD8D0BC,CAAYloB,IAClB,gBAAC7E,EAAA,EAAc,CAAC/L,GAAI4Q,EAAM7P,KAAKg4B,iBAElC5uB,GACG,iCAAa,YAAYnK,GAAG,oBAAoB0c,KAAK,SAChDvS,GAIT,uBAAK9D,UAAU,sCAAsC9D,KAAKy2B,mBAGtE,EAEQ,YAAAR,aAAR,WACI,OACI,gBAACpmB,EAAA,GAAM,CAAC7D,QAAShM,KAAK+1B,qBAAsBlkB,KAAMhC,EAAA,GAAWwmB,OACzD,gBAAC5nB,EAAA,EAAgB,CAAChR,GAAG,qBAGjC,EAEQ,YAAAg5B,gBAAR,W,MACU,EAAwCz2B,KAAK6I,MAA3CwF,EAAK,QAAE,IAAAqoB,oBAEf,GAAKroB,SAF6B,IAAG,GAAI,GAEzC,CAIA,IAAI,EAAAyF,EAAA,GAAezF,KAAuB,QAAb,EAAAA,EAAMsoB,eAAO,eAAG,iBACzC,OACI,gBAAC,EAAS,CACNf,KAAMvnB,EAAMsoB,QAAQ,gBACpBxxB,MAAO,gBAACsJ,EAAA,EAAgB,CAAChR,GAAG,wBAKxC,IAAM+D,GAAY,EAAAo1B,EAAA,GAAiBvoB,GAEnC,GAAK7M,EAIL,OAAO,gBAAC,EAAS,CAACo0B,KAAMp0B,GAjBxB,CAkBJ,EASJ,EAjGA,CAAwC,EAAAiI,c,2DE5BzB,SAASmtB,EAAiB96B,GACrC,IACI,OAAO,IAAWA,GAAO+6B,aAC7B,CAAE,MAAOxoB,GAAQ,CACrB,C,kBCkCO,SAASyoB,EAAeC,EAAajvB,GAOxC,OANI3I,OAAO23B,eACP33B,OAAO23B,eAAeC,EAAQjvB,GAE9BivB,EAAOC,UAAYlvB,EAGhBivB,CACX,C,oFCnCA,WAGI,WAAY9pB,GACA,OAAqCA,GAAW,CAAC,GAAC,QAAzCgqB,OAAa,IAAG,EAAAC,QAAO,EAExCl3B,KAAKk3B,QAAUD,CACnB,CAsBJ,OApBI,YAAA11B,IAAA,SACI8M,EACA8oB,EACAC,EACAC,GAEA,YAHA,IAAAD,IAAAA,EAAwB,IAAel6B,OAG/Bk6B,GACJ,KAAK,IAAel6B,MAChB,OAAO8C,KAAKk3B,QAAQ7oB,MAAMA,EAAO8oB,EAAME,GAE3C,KAAK,IAAe3b,KAChB,OAAO1b,KAAKk3B,QAAQI,KAAKjpB,EAAO8oB,EAAME,GAE1C,KAAK,IAAeE,QAChB,OAAOv3B,KAAKk3B,QAAQM,KAAKnpB,EAAO8oB,EAAME,GAE1C,QACI,OAAOr3B,KAAKk3B,QAAQ31B,IAAI8M,EAAO8oB,EAAME,GAEjD,EACJ,EA7BA,G,6CCXA,wBAEA,QADI,YAAA91B,IAAA,WAAO,EACX,EAFA,GCsBA,IASYk2B,EATNC,EAAkB,UASxB,SAAYD,GACR,gBACA,gBACA,cACA,mBACH,CALD,CAAYA,IAAAA,EAAiB,K,QAO7B,WAII,WAAY76B,EAAwBqQ,GAApC,WAuGQ,KAAA0qB,iBAAqE,SAACloB,EAAOmoB,G,QACjF,OAAInoB,EAAMooB,UAED,EAAKC,uBACoB,QAAtB,EAAAroB,EAAMooB,UAAU91B,cAAM,QAAI,GACH,QAAvB,EAAA61B,aAAI,EAAJA,EAAMG,yBAAiB,QAAI,MAM5BtoB,EAHI,KAMRA,CACX,EAEQ,KAAAuoB,mBAAwD,SAACC,GAC7D,GAAI,EAAK9D,YAAc8D,EAAMC,SAAU,CAInC,IAAMA,EAAWD,EAAMC,SAASxrB,QAAQ,IAAIyrB,OAAO,WAAI,EAAKhE,WAAU,OAAO,IAIzE+D,IAAaD,EAAMC,WACnBD,EAAMC,SAAW,UAAGR,EAAe,YAAIQ,GAE/C,CAEA,OAAOD,CACX,EAtIU,MAIFhrB,GAAW,CAAC,EAHZ,IAAAmrB,cAAAA,OAAa,IAAG,MAAI,EAAiB,EACrC,IAAAjE,WAAAA,OAAU,IAAG,KAAE,EACf,IAAAC,WAAAA,OAAU,IAAG,KAAG,EAGpBp0B,KAAKo4B,cAAgBA,EACrBp4B,KAAKm0B,WAAaA,GAElB,SAAK,eACDC,WAAU,EACViE,WAAYr4B,KAAK23B,iBACjBW,UAAU,0CACF17B,EAAO07B,UAAY,IAAG,IAC1B,oBACA,oB,GAEJC,aAAc,CACV,IAAI,KAAaC,eAAe,CAC5BC,SAAS,EACTC,sBAAsB,IAE1B,IAAI,IAAc,CACdC,SAAU34B,KAAKg4B,uBAGpBp7B,GAEX,CA2GJ,OAzGI,YAAA2E,IAAA,SACI8M,EACA8oB,EACAC,EACAr8B,GAJJ,gBAGI,IAAAq8B,IAAAA,EAAwB,IAAel6B,OAGvC8C,KAAKo4B,cAAc72B,IAAI8M,EAAO8oB,EAAMC,IAEpC,SAAU,SAACwB,GACC,OAAwCzB,GAAQ,CAAC,GAAC,UAAlD31B,OAAS,IAAG,KAAAo1B,EAAA,GAAiBvoB,GAAM,EAEvC7M,GACAo3B,EAAMC,QAAQ,CAAEr3B,UAAS,IAG7Bo3B,EAAME,SAAS,EAAKC,iBAAiB3B,IAEjCr8B,GACA69B,EAAMI,UAAUj+B,GAGpB69B,EAAMK,eAAe,CAAC,mBAEtB,QAAiB5qB,EACrB,GACJ,EAEQ,YAAA0qB,iBAAR,SAAyB3B,GACrB,OAAQA,GACJ,KAAK,IAAe1b,KAChB,OAAO+b,EAAkByB,KAE7B,KAAK,IAAe3B,QAChB,OAAOE,EAAkB0B,QAE7B,KAAK,IAAeC,MAChB,OAAO3B,EAAkB4B,MAE7B,KAAK,IAAen8B,MACpB,QACI,OAAOu6B,EAAkB6B,MAErC,EAUQ,YAAAxB,uBAAR,SAA+ByB,EAAyBxB,GAKpD,SAAKwB,EAAWnxB,QAAY2vB,aAA6B76B,QAIlDq8B,EAAWzoB,OAAM,SAAC+mB,G,QACrB,SAAiC,QAA5B,EAAoB,QAApB,EAAAA,EAAU2B,kBAAU,eAAEC,cAAM,eAAErxB,SAI5ByvB,EAAU2B,WAAWC,OAAO3oB,OAAM,SAACmnB,GAAK,MAC3C,OAAc,QAAd,EAAAA,EAAMC,gBAAQ,eAAEhN,WAAWwM,EAAgB,GAEnD,GACJ,EAmCJ,EA5IA,GC9Be,SAAS3D,EACpB2F,EACAzsB,GAEA,OAAIysB,GAAiBA,EAAc1F,OACxB,IAAI,EAAkB0F,EAAc1F,QAAQ,gCAC5C/mB,GAAO,CACVmrB,cAAe,IAAI,EAAmBnrB,MAQvC,IAAI,EAAmBA,EAClC,C,kBCxBe,SAASmkB,EAAc/iB,GAClC,IAAMsrB,EAActrB,EAEpB,YACiC,IAAtBsrB,EAAYrT,YACS,IAArBqT,EAAYn7B,WACS,IAArBm7B,EAAY97B,IAE3B,C,kCCIe,SAAS+T,EAAgBvD,GACpC,MACqB,iBAAVA,GACG,OAAVA,IATJurB,EAUmBvrB,EATnBnE,EAS0B,OAPnB/K,OAAO2I,UAAUmP,eAAe4iB,KAAKD,EAAK1vB,KAQvB,iBAAfmE,EAAMxQ,KAZrB,IACI+7B,EACA1vB,CAYJ,C,kCCnBe,SAAS4J,EAAezF,GAGnC,MAA6B,YAFRA,EAEDxQ,IACxB,C,mDCJO,IAAMi8B,EAAc36B,OAAO46B,OAAO,IACb56B,OAAO46B,OAAO,CAAC,E,kBCH5B,SAASxtB,IACpB,IAAMytB,EAAe1vB,OAAOkC,SAASC,SAASpF,MAAM,KAAK4yB,MAEzD,QAA0B,aAAjBD,GAAgD,sBAAjBA,EAC5C,C,kCCFe,SAAS72B,EACpBC,EACA82B,G,MAEA,OAAOr4B,QAAkD,QAA1C,EAAAuB,aAAgB,EAAhBA,EAAkB6f,SAASiX,UAAe,SAC7D,C,kCCLe,SAAStmB,EAAuBxQ,GAC3C,OAAOvB,QAAQuB,EAAiByvB,+BAA+BE,qBACnE,C,kECJMoH,EAAkB,CACpBtU,MAAO,EACPuU,SAAU,KAQC,SAAerN,EAASvd,EAAsBvC,G,kIACnD,mCAA2BktB,GAAoBltB,GAA7C4Y,EAAK,QAAEuU,EAAQ,W,iBAGZ,O,sBAAA,GAAM5qB,K,OAAb,MAAO,CAAP,EAAO,U,OAEP,G,WAAc,IAAVqW,EACA,MAAM,EAGV,SAAM,IAAIlZ,SAAQ,SAAC0tB,GAAY,OAAAtxB,WAAWsxB,EAASD,EAApB,K,OAE/B,OAFA,SAEO,CAAP,EAAOrN,EAAMvd,EAAI,CAAE4qB,SAAQ,EAAEvU,MAAOA,EAAQ,K,gGCTpD,SCHmD,EAAApd,EAAA,GAAgBqE,EAAA,EAAe,CAC9EpF,kBAAmB,eACnB4yB,UAAW,SAACx+B,EAAOoO,GAAQ,MAAQ,aAARA,KAAwBpO,CAAxB,GDC/B,EALqF,SAAC,G,IAClFy+B,EAAM,SACNC,EAAQ,WACN,uCAAGA,EAASC,mBAAmBF,GAA/B,G,kBEFC,SAASG,EAAkC99B,GAE1C,MACAA,EAAM,qBAEV,OAAO2W,EAAwB,CAC3BonB,UAJiC,YAKjCroB,YALqD,QAMrDE,MAN4D,QAO5DD,QAPqE,WAS7E,CAEe,SAASgB,EAAwB,G,IAC5ConB,EAAS,YACTroB,EAAW,cACXE,EAAK,QACLD,EAAO,UAEDqoB,EAAa,IAAIzC,OAAO,IAAK,KAEnC,MAAO,CACH1lB,UAAWkoB,EACXroB,YAAW,EACXE,MAAO,IAAI2lB,OAAO3lB,EAAM9F,QAAQkuB,EAAY,KAC5CroB,QAAS,IAAI4lB,OAAO5lB,EAAQ7F,QAAQkuB,EAAY,KAExD,C,qFClCe,SAASC,EACpBC,G,IACA,wDAEA,IAAMC,EAAe,EAAA37B,OAAM,kCAAC,CAAC,GAAMwxB,GAAM,IACnC/nB,GAAQ,IAAAkB,MACV,IAAAixB,QAAOD,GAAc,SAACj/B,GAAU,MAAiB,iBAAVA,CAAP,KAChC,SAACA,EAAOoO,GAAQ,iBAAG,IAAA+wB,WAAU/wB,GAAI,aAAKpO,EAAK,IAA3B,IAClBwM,KAAK,KAEP,MAAO,UAAGwyB,EAAQ,aAAKjyB,EAAK,IAChC,C,QCTA,wBAmXA,QAlXI,YAAAqyB,MAAA,SAAMtK,GACF,IAAMuK,EAAkB,GA+WxB,OA7WIvK,EAAOrV,OACP4f,EAAMh5B,KAAK04B,EAAU,OAAQjK,EAAOrV,OACpC4f,EAAMh5B,KAAK04B,EAAU,6BAA8BjK,EAAOrV,QAG1DqV,EAAOvM,MACP8W,EAAMh5B,KAAK04B,EAAU,oCAAqCjK,EAAOvM,OAGjEuM,EAAOwK,eACPD,EAAMh5B,KAAK04B,EAAU,sCAAuCjK,EAAOwK,gBAGnExK,EAAOpK,SACP2U,EAAMh5B,KAAK04B,EAAU,oCAAqCjK,EAAOpK,UAGjEoK,EAAOyK,kBACPF,EAAMh5B,KAAK04B,EAAU,sCAAuCjK,EAAOyK,mBAGnEzK,EAAOhwB,OACPu6B,EAAMh5B,KAAK04B,EAAU,IAAKjK,EAAOhwB,OACjCu6B,EAAMh5B,KAAK04B,EAAU,UAAWjK,EAAOhwB,KAAMgwB,EAAOhwB,KAAKooB,QACzDmS,EAAMh5B,KAAK04B,EAAU,UAAWjK,EAAOhwB,KAAMgwB,EAAOhwB,KAAK06B,SAGzD1K,EAAOzrB,QACPg2B,EAAMh5B,KAAK04B,EAAU,gCAAiCjK,EAAOzrB,QAC7Dg2B,EAAMh5B,KACF04B,EACI,mDACAjK,EAAOzrB,MACPyrB,EAAOzrB,MAAMkJ,QAGrB8sB,EAAMh5B,KACF04B,EACI,yCACAjK,EAAOzrB,MACPyrB,EAAOzrB,MAAMkJ,SAKrBuiB,EAAO2K,SACPJ,EAAMh5B,KAAK04B,EAAU,mCAAoCjK,EAAO2K,SAChEJ,EAAMh5B,KACF04B,EACI,0CACAjK,EAAO2K,OACP3K,EAAO2K,OAAOC,SAGtBL,EAAMh5B,KACF04B,EACI,yCACAjK,EAAO2K,OACP3K,EAAO2K,OAAOvS,QAGtBmS,EAAMh5B,KACF04B,EACI,yCACAjK,EAAO2K,OACP3K,EAAO2K,OAAOD,QAGtBH,EAAMh5B,KACF04B,EACI,6CACAjK,EAAO2K,OACP3K,EAAO2K,OAAO3mB,WAGtBumB,EAAMh5B,KACF04B,EACI,oDACAjK,EAAO2K,OACP3K,EAAO2K,OAAO3mB,WAGtBumB,EAAMh5B,KACF04B,EACI,mDACAjK,EAAO2K,OACP3K,EAAO2K,OAAO3mB,WAGtBumB,EAAMh5B,KACF04B,EACI,mDACAjK,EAAO2K,OACP3K,EAAO2K,OAAO3mB,WAGtBumB,EAAMh5B,KACF04B,EACI,uDACAjK,EAAO2K,OACP3K,EAAO2K,OAAO3mB,WAGtBumB,EAAMh5B,KACF04B,EACI,wDACAjK,EAAO2K,OACP3K,EAAO2K,OAAO3mB,YAKtBgc,EAAO6K,kBACPN,EAAMh5B,KAAK04B,EAAU,qCAAsCjK,EAAO6K,kBAClEN,EAAMh5B,KACF04B,EACI,4CACAjK,EAAO6K,gBACP7K,EAAO6K,gBAAgBD,SAG/BL,EAAMh5B,KACF04B,EACI,2CACAjK,EAAO6K,gBACP7K,EAAO6K,gBAAgBzS,QAG/BmS,EAAMh5B,KACF04B,EACI,2CACAjK,EAAO6K,gBACP7K,EAAO6K,gBAAgBH,QAG/BH,EAAMh5B,KACF04B,EACI,+CACAjK,EAAO6K,gBACP7K,EAAO6K,gBAAgB7mB,WAG/BumB,EAAMh5B,KACF04B,EACI,sDACAjK,EAAO6K,gBACP7K,EAAO6K,gBAAgB7mB,WAG/BumB,EAAMh5B,KACF04B,EACI,qDACAjK,EAAO6K,gBACP7K,EAAO6K,gBAAgB7mB,WAG/BumB,EAAMh5B,KACF04B,EACI,qDACAjK,EAAO6K,gBACP7K,EAAO6K,gBAAgB7mB,WAG/BumB,EAAMh5B,KACF04B,EACI,yDACAjK,EAAO6K,gBACP7K,EAAO6K,gBAAgB7mB,WAG/BumB,EAAMh5B,KACF04B,EACI,0DACAjK,EAAO6K,gBACP7K,EAAO6K,gBAAgB7mB,YAK/Bgc,EAAOvb,QACP8lB,EAAMh5B,KAAK04B,EAAU,gCAAiCjK,EAAOvb,QAC7D8lB,EAAMh5B,KACF04B,EAAU,sCAAuCjK,EAAOvb,MAAOub,EAAOvb,MAAM2T,QAEhFmS,EAAMh5B,KACF04B,EAAU,sCAAuCjK,EAAOvb,MAAOub,EAAOvb,MAAMimB,QAEhFH,EAAMh5B,KACF04B,EACI,6CACAjK,EAAOvb,MACPub,EAAOvb,MAAMoJ,cAGrB0c,EAAMh5B,KACF04B,EACI,mDACAjK,EAAOvb,MACPub,EAAOvb,MAAMhH,QAGrB8sB,EAAMh5B,KACF04B,EACI,yDACAjK,EAAOvb,MACPub,EAAOvb,MAAMhH,QAGrB8sB,EAAMh5B,KACF04B,EACI,yDACAjK,EAAOvb,MACPub,EAAOvb,MAAMhH,SAKrBuiB,EAAO8K,SACPP,EAAMh5B,KAAK04B,EAAU,iCAAkCjK,EAAO8K,SAC9DP,EAAMh5B,KACF04B,EACI,uCACAjK,EAAO8K,OACP9K,EAAO8K,OAAO1S,QAGtBmS,EAAMh5B,KACF04B,EACI,uCACAjK,EAAO8K,OACP9K,EAAO8K,OAAOJ,QAGtBH,EAAMh5B,KACF04B,EACI,oDACAjK,EAAO8K,OACP9K,EAAO8K,OAAOrtB,QAGtB8sB,EAAMh5B,KACF04B,EACI,0DACAjK,EAAO8K,OACP9K,EAAO8K,OAAOrtB,QAGtB8sB,EAAMh5B,KACF04B,EACI,0DACAjK,EAAO8K,OACP9K,EAAO8K,OAAOrtB,SAKtBuiB,EAAOzpB,WACPg0B,EAAMh5B,KAAK04B,EAAU,mCAAoCjK,EAAOzpB,WAChEg0B,EAAMh5B,KACF04B,EACI,yCACAjK,EAAOzpB,SACPypB,EAAOzpB,SAAS6hB,QAGxBmS,EAAMh5B,KACF04B,EACI,yCACAjK,EAAOzpB,SACPypB,EAAOzpB,SAASm0B,QAGxBH,EAAMh5B,KACF04B,EACI,sDACAjK,EAAOzpB,SACPypB,EAAOzpB,SAASkH,QAGxB8sB,EAAMh5B,KACF04B,EACI,4DACAjK,EAAOzpB,SACPypB,EAAOzpB,SAASkH,QAGxB8sB,EAAMh5B,KACF04B,EACI,4DACAjK,EAAOzpB,SACPypB,EAAOzpB,SAASkH,SAKxBuiB,EAAO+K,QACPR,EAAMh5B,KAAK04B,EAAU,gCAAiCjK,EAAO+K,QAC7DR,EAAMh5B,KACF04B,EAAU,sCAAuCjK,EAAO+K,MAAO/K,EAAO+K,MAAM3S,QAEhFmS,EAAMh5B,KACF04B,EAAU,sCAAuCjK,EAAO+K,MAAO/K,EAAO+K,MAAML,QAEhFH,EAAMh5B,KACF04B,EACI,mDACAjK,EAAO+K,MACP/K,EAAO+K,MAAMttB,QAGrB8sB,EAAMh5B,KACF04B,EACI,yDACAjK,EAAO+K,MACP/K,EAAO+K,MAAMttB,QAGrB8sB,EAAMh5B,KACF04B,EACI,yDACAjK,EAAO+K,MACP/K,EAAO+K,MAAMttB,SAKrBuiB,EAAOn2B,OACP0gC,EAAMh5B,KAAK04B,EAAU,kCAAmCjK,EAAOn2B,OAC/D0gC,EAAMh5B,KAAK04B,EAAU,0BAA2BjK,EAAOn2B,KAAKqpB,QAG5D8M,EAAOgL,YACPT,EAAMh5B,KAAK04B,EAAU,oCAAqCjK,EAAOgL,YACjET,EAAMh5B,KAAK04B,EAAU,yCAA0CjK,EAAOgL,YACtET,EAAMh5B,KACF04B,EACI,+CACAjK,EAAOgL,UACPhL,EAAOgL,UAAUN,QAGzBH,EAAMh5B,KACF04B,EACI,mDACAjK,EAAOgL,UACPhL,EAAOgL,UAAUtjB,WAKzBsY,EAAOiL,gBACPV,EAAMh5B,KAAK04B,EAAU,oCAAqCjK,EAAOiL,iBAGjEjL,EAAOkL,eACPX,EAAMh5B,KAAK04B,EAAU,oCAAqCjK,EAAOkL,gBAGjElL,EAAOmL,eACPZ,EAAMh5B,KAAK04B,EAAU,kCAAmCjK,EAAOmL,eAC/DZ,EAAMh5B,KACF04B,EAAU,8CAA+CjK,EAAOmL,gBAIjEZ,CACX,EACJ,EAnXA,G,QCEA,WAGI,WAAYa,GACRh8B,KAAKi8B,QAAUD,CACnB,CAKJ,OAHI,YAAAnL,OAAA,SAAOD,GACH,OCdO,SAA0BuK,GACrC,IAAMr8B,EAAQE,SAAS6B,cAAc,SAIrC,GAFA7B,SAASkC,KAAKC,YAAYrC,GAEtBA,EAAMo9B,iBAAiBC,cAAe,CAC9B,MAAUr9B,EAAK,MAEvBq8B,EAAM56B,SAAQ,SAAC67B,EAAMhY,GACjB,EAAMiY,WAAWD,EAAMhY,EAC3B,GACJ,CAEA,OAAOtlB,CACX,CDAew9B,CAAiBt8B,KAAKi8B,QAAQf,MAAMtK,GAC/C,EACJ,EAVA,GEHe,SAASkD,IACpB,IAAMkI,EAA8B,IAAI,EAExC,OAAO,IAAI,EAA2BA,EAC1C,C,kBCPe,SAAS3Z,EAAW5V,GAG/B,YAH+B,IAAAA,IAAAA,EAAmBzN,SAASwN,SAASC,UAGhD,uBAFH,WAAIA,EAASpF,MAAM,KAAK,GAG7C,C,wFCqCA,SAAe,IAAA3C,UAAQ,SAA6C,G,IAChEC,EAAU,aACV,IAAAC,UAAAA,OAAS,IAAG,aAAM,EAAS,EAE3B,OAAO,QAAO,CACVgC,cAAc,QACVjC,EACKG,QAAO,SAAC,GAAe,QAAP,QAAO,IACvBC,QAAO,SAACC,EAAQ,G,IACTu3B,EACAC,EAFWv3B,EAAI,OAAEE,EAAK,QAAED,EAAQ,WAAEwB,EAAS,YAAE7I,EAAI,OAAEkI,EAAG,MAAET,EAAG,MAwC/D,GApCa,SAATzH,EACAmH,EAAOC,IAAQ,UAGVw3B,UAAS,GACTC,WAAU,SAAC5gC,EAAO6gC,GACf,MAAkB,KAAlBA,EAAuB,KAAO7gC,CAA9B,IAEQ,YAAT+B,GACPmH,EAAOC,IAAQ,UAGVy3B,WAAU,SAAC5gC,GAAU,OAACmtB,MAAMntB,QAAS5C,EAAY4C,CAA5B,IAE1BygC,EAA0B,iBAARj3B,EAAmBA,OAAMpM,EAC3CsjC,EAA0B,iBAARz2B,EAAmBA,OAAM7M,GACpCwN,IAAc,IAAqBS,SAC1CnC,EAAOC,IAAQ,UAEfD,EAAOC,IAAQ,eAGF/L,IAAbqjC,IACAv3B,EAAOC,GAASD,EAAOC,GAAuBK,IAC1Ci3B,EACA33B,EAAU,MAAO,CAAEO,MAAK,EAAEF,KAAI,EAAEK,IAAKi3B,EAAW,WAIvCrjC,IAAbsjC,IACAx3B,EAAOC,GAASD,EAAOC,GAAuBc,IAC1Cy2B,EACA53B,EAAU,MAAO,CAAEO,MAAK,EAAEF,KAAI,EAAEc,IAAKy2B,EAAW,MAIpDt3B,EAAU,CACV,IAAM03B,EAAuBh4B,EAAU,WAAY,CAAEK,KAAI,EAAEE,MAAK,IAEhEH,EAAOC,GACHyB,IAAc,IAAqBS,SAC5BnC,EAAOC,GAA8Bc,IAAI,EAAG62B,GAC5C53B,EAAOC,GAA8BC,SAClC03B,EAElB,CAEA,OAAO53B,CACX,GAAG,CAAC,IACVy3B,UAAS,IAEnB,G,iDCtGe,SAAS1gB,EAAkC8gB,GAGtD,IAAMj2B,EAA+D,GAoBrE,OAlBA,IAAAk2B,OAAMD,GAAoB,SAAC/gC,EAAOoO,GAC9B,IAAIpD,EAEJ,IAAI,IAAAi2B,QAAOjhC,GAAQ,CACf,IAAMkhC,GAAW,IAAAC,WAAUnhC,EAAMohC,WAAa,GAAGj8B,WAAY,EAAG,KAC1Dk8B,GAAS,IAAAF,UAASnhC,EAAMshC,UAAUn8B,WAAY,EAAG,KAEvD6F,EAAa,UAAGhL,EAAMuhC,cAAa,YAAIL,EAAQ,YAAIG,EACvD,MACIr2B,EAAahL,EAGjB8K,EAAazE,KAAK,CACdm7B,QAASpzB,EACTpD,WAAU,GAElB,IAEOF,CACX,C,+HCtBe,SAAS22B,EAEpB3yB,EACAO,GAEA,OAAOhM,OAAOC,QAAO,SAACyJ,GAAkB,uBAAC+B,GAAS,iBAAK/B,GAAf,GAA0B,CAAEsC,WAAU,GAClF,CC+BA,QAAeoyB,GAjCgD,SAAC,G,IAC5D,IAAAhkC,gBAAmBsV,EAAoB,uBAAEC,EAAkB,qBAC3D0uB,EAA4B,+BAC5BngC,EAAW,cACXhC,EAAQ,WACR8S,EAAgB,mBAChBC,EAAmB,sBAwBnB,OAtBA,IAAA9Q,YAAU,W,MAUN,OATAwR,GAAkB,GACdzT,SAAQ,GACR,EAACA,GAAW,CACR+F,UAAW/D,EACX8Q,iBAAgB,EAChBnC,QAAS,WAAM,OAAAoC,EAAoB/S,EAApB,G,IAEpBoiC,MAAMtvB,GAEF,WACHU,EAAqB,CAAExT,SAAQ,IAAIoiC,MAAMtvB,EAC7C,CACJ,GAAG,CACC9Q,EACAwR,EACAC,EACAzT,EACA8S,EACAC,IAGG,uBAAKtK,UAAW05B,EAA8B//B,GAAIJ,GAC7D,GAII,ICjCJ,IAAM8S,EAAuB,W,MACzB,GAAKnR,SAASC,cAAc,8BAA5B,CAIA,IAAMmC,EAAYpC,SAASC,cAAc,kCAEzC,GAAImC,EAAW,CACX,IAAMgP,EAAmC,QAApB,EAAAhP,EAAUiP,kBAAU,eAAEpR,cAAc,2BAEzD,GAAkBmR,aCnBIstB,YDsBlB,YAFAttB,EAAatR,MAAMwR,OAAS,OAIpC,CAEAvH,WAAWoH,EAAsB,GAdjC,CAeJ,EAcA,QAAeotB,GAZmD,SAAC10B,GAK/D,OAJA,IAAAvL,YAAU,WACN6S,GACJ,GAAG,IAGC,uBAAKrM,UAAU,sBACX,gBAAC,GAAc,iBAAK+E,IAGhC,GAII,CAAC,CAAEpL,GAAI,e,QExCX,YACI,WAAYmK,GACR,ICNiDmvB,EAAWjvB,EDM5D,IAAK,UAAC,CACF7C,KAAM,sCACN2C,QAAO,KACT,K,OCT+CmvB,EDWlC,ECX6CjvB,EDWvCD,EAAiCC,UCTtD3I,OAAO23B,eACP33B,OAAO23B,eAAeC,EAAQjvB,GAUtC,SAAkBivB,GACd,MAAO,cAAeA,CAC1B,CAXe4G,CAAS5G,KAEhBA,EAAOC,UAAYlvB,G,CDMvB,CACJ,OAT8D,oBAS9D,EATA,CEJA,YAOI,WAAY,G,IACR,IAAAtJ,KAAAA,OAAI,IAAG,GAAC,EAAC,EACT,IAAAoJ,QAAAA,OAAO,IAAG,KAAE,EACZ,IAAA0e,MAAAA,OAAK,IAAG,KAAE,EACV,IAAArhB,KAAAA,OAAI,IAAG,KAAE,EAOT,IAAK,YAAE,K,MAEgC,mBAA5B/H,MAAMq4B,kBACbr4B,MAAMq4B,kBAAkB,EAAMxtB,GAE9B,EAAKytB,OAAQ,IAAIt4B,OAAQs4B,MAI7B,EAAKh3B,KAAOA,EACZ,EAAKoJ,QAAUA,EACf,EAAK3C,KAAOA,EACZ,EAAKqhB,MAAQA,EACb,EAAKzoB,KAAO,S,CAChB,CACJ,OAjCyC,oBAiCzC,EAjCA,CAAyCX,QC+BzC,QAAeqgC,GAlBiD,SAAC10B,GACrD,ICduB4D,EDcvB9G,EAA+BkD,EAAK,SAA1BsF,EAAqBtF,EAAK,iBAE5C,YChB+B,IAAA4D,IAAAA,EAAmBzN,SAASwN,SAASC,UAGhD,uBAFH,WAAIA,EAASpF,MAAM,KAAK,KDgBrC8G,EACI,IAAI,EACAxI,EAASf,UAAU,sCAAuC,CACtDyD,QAAS,gBAKd,MAGJ,gBAAC,GAAc,eAACm1B,6BAA6B,yBAA4B30B,GACpF,GAII,CACI,CAAEpL,GAAI,oBACN,CAAEA,GAAI,oBACN,CAAEA,GAAI,yBACN,CAAEA,GAAI,gBACN,CAAEA,GAAI,sBACN,CAAEA,GAAI,2BACN,CAAEA,GAAI,wBACN,CAAEA,GAAI,0BACN,CAAEA,GAAI,oBACN,CAAEA,GAAI,mBACN,CAAEA,GAAI,sBACN,CAAEA,GAAI,2BACN,CAAEA,GAAI,0B,kBExCC,SAASmgC,EACpB5sB,GAEA,MAA8B,oBAAvBA,EAAQC,UACnB,C,4KCRM4sB,EAAO7+B,SAAS8+B,cAAiB9+B,SAAS8+B,cAAoCC,SAAM7kC,ECA3E,SAAS8kC,EAAoB7J,GACxC,IAAKA,EAAY,CACb,IAAM8J,EDCHJ,ECCH,IAAKI,EACD,MAAM,IAAI/gC,MACN,sJAMR,OAFA,IAA0B,UAAG+gC,EAAW52B,MAAM,KAAKslB,MAAM,GAAI,GAAGrkB,KAAK,KAAI,KAElE,GACX,CAIA,OAFA,IAAoD,MAA1B6rB,EAAW+J,QAAQ,GAAa/J,EAAa,UAAGA,EAAU,KAE7E,GACX,CCVe,SAASgK,EAAe,GACnC,IAAA9gC,EAAW,cACX82B,EAAU,aACPtrB,GAAK,cAH2B,8BAK7Bu1B,EAAuBJ,EAAoB7J,GAIhCkK,EAAgB,WAYjC,SACI,gBAACA,GAAW,eAAChhC,YAAaA,EAAa82B,WAAYiK,GAA0Bv1B,IAC7E7J,SAAS0e,eAAergB,GAEhC,CCzBe,SAASihC,EAAwB,GAC5C,IAAAjhC,EAAW,cACX82B,EAAU,aACPtrB,GAAK,cAHoC,8BAKtCu1B,EAAuBJ,EAAoB7J,GAIhCoK,EAAyB,WAY1C,SACI,gBAACA,GAAoB,eACjBlhC,YAAaA,EACb82B,WAAYiK,GACRv1B,IAER7J,SAAS0e,eAAergB,GAEhC,C,+NC5BA,WACI,WAAoBmhC,QAAA,IAAAA,IAAAA,GAA+B,WAA/B,KAAAA,cAAAA,CAAuD,CAO/E,OALI,YAAAC,OAAA,SAAOljB,GACH,OAAOvb,KAAKw+B,cACPE,IAA6B,oCAAqC,CAAEnjB,KAAI,IACxE5D,MAAK,SAACgnB,GAAa,OAAAA,EAASpjB,KAAK/c,KAAKuP,QAAnB,GAC5B,EACJ,EARA,G,yNC8CA,SAAe,IAAArK,OA9C+C,SAAC,G,IAAE+O,EAAS,YAChEmsB,GAAsB,IAAA5xB,cACxB,SAAC,G,IAAE3G,EAAK,QAA2B,uBAAC4O,EAAA,GAAS,iBAAK5O,EAAK,CAAE5I,GAAI4I,EAAMpB,KAAMpH,KAAK,aAA3C,GACnC,IAGEghC,GAAkC,IAAA7xB,cACpC,SAAC,G,IAAE3G,EAAK,QAA2B,uBAAC4O,EAAA,GAAS,iBAAK5O,EAAK,CAAE5I,GAAI4I,EAAMpB,KAAMpH,KAAK,aAA3C,GACnC,IAGEihC,GAAuB,IAAAplC,UACzB,WAAM,OACF,gCACI,gBAAC+U,EAAA,EAAgB,CAAChR,GAAG,4BAA6B,IAClD,6BACK,UAAGgV,EAAS,KACb,gBAAChE,EAAA,EAAgB,CAAChR,GAAG,+CAL3B,GASN,CAACgV,IAGCssB,GAAmC,IAAArlC,UACrC,WAAM,uBAAC+U,EAAA,EAAgB,CAAChR,GAAG,wCAArB,GACN,IAGJ,OACI,gCACI,gBAAC2X,EAAA,EAAS,CACNC,MAAOupB,EACPzpB,aAAc2pB,EACd75B,KAAK,aAGT,gBAACmQ,EAAA,EAAS,CACNC,MAAOwpB,EACP1pB,aAAc4pB,EACd95B,KAAK,oBAIrB,ICcA,SAAe,EAAA6N,EAAA,IACX,IAAAC,YAAkE,CAC9DG,iBAAkB,WAAM,OACpBR,SAAU,GACVssB,gBAAiB,GAFG,EAIxBhsB,aAAc,SAACjR,EAAQ,IACnBk9B,EADsC,kBAC7Bl9B,EACb,EACAqR,iBAAkB,SAAC,G,IACfzN,EAAQ,WACR,IAAA0M,qBAAwBC,EAAW,cAAEC,EAAO,UAAEC,EAAK,QAAEC,EAAS,YAE9D,eAAO,CACHC,UAAU,UACLxN,SAASoN,GAAe3M,EAASf,UAAU,qCAC3CW,QACGgN,EACAD,GACI3M,EAASf,UAAU,4CAE1BW,QACGiN,EACAF,GACI3M,EAASf,UAAU,4CAE1BmB,IACG0M,EACAH,GACI3M,EAASf,UAAU,iDAE1BU,IAAI,IAAKK,EAASf,UAAU,gDACjCo6B,iBAAiB,UACZ95B,SAASS,EAASf,UAAU,kDAC5BwT,MACG,EAAC,QAAI,aACLzS,EAASf,UAAU,0CAvB/B,GAZR,EAsCG,IAAAlB,OAlFH,SAAC,G,IAAEw7B,EAAW,cAAEC,EAAoB,uBAA0B1sB,EAAS,iCAAS,OAChF,gBAAC6B,EAAA,EAAQ,CACLyF,OACI,gBAACC,EAAA,EAAM,KACH,gBAACvL,EAAA,EAAgB,CACbhR,GACI0hC,EACM,+BACA,kCAMpBA,GACE,yBACI,gBAAC1wB,EAAA,EAAgB,CAAChR,GAAG,mCAI7B,gBAAC4W,EAAA,EAAI,CAACvQ,UAAU,qBACZ,gBAAC,EAAmB,CAAC2O,UAAWA,IAEhC,uBAAK3O,UAAU,gBACX,gBAAC+L,EAAA,GAAM,CACHpS,GAAG,sBACH8L,UAAW21B,EACXrhC,KAAK,SACLmU,QAASnC,EAAA,GAAcgF,SAEvB,gBAACpG,EAAA,EAAgB,CACbhR,GACI0hC,EACM,iCACA,oCAlCkD,M,eCZpF,QARqD,WAAM,OACvD,gBAAC5qB,EAAA3Y,EAAK,CAACiC,KAAM0W,EAAA,EAAU6qB,SACnB,8BACI,gBAAC3wB,EAAA,EAAgB,CAAChR,GAAG,mCAH0B,ECQ3D,QARgD,WAAM,OAClD,gBAAC8W,EAAA3Y,EAAK,CAACiC,KAAM0W,EAAA,EAAU6qB,SACnB,8BACI,gBAAC3wB,EAAA,EAAgB,CAAChR,GAAG,qCAHqB,E,iCCFtD,YACI,WAAYe,EAAa6U,GACrB,QAAK,UAAC,CACFpO,KAAM,sCACN2C,QAASyL,EACTiT,OAAO,EAAAD,EAAA,KAAqBzhB,UACxB,sDAEJpG,KAAI,KACN,K,OAEF,OAAe,EAAM6gC,EAAiCv3B,W,CAC1D,CACJ,OAb8D,oBAa9D,EAbA,CAA8DC,EAAA,G,QCA9D,YACI,WAAYvJ,GACR,QAAK,UAAC,CACFyG,KAAM,0BACN2C,SAAS,EAAAye,EAAA,KAAqBzhB,UAAU,iCACxCpG,KAAI,KACN,K,OAEF,OAAe,EAAM8gC,EAA2Bx3B,W,CACpD,CACJ,OAVwD,oBAUxD,EAVA,CAAwDC,EAAA,G,2DCKxD,SAASw3B,EAAsBvuB,GAC3B,QAAQ,EAAA4sB,EAAA,GAAyB5sB,MAAa,EAAAwuB,EAAA,GAAqBxuB,EACvE,CASA,QAPA,SAAgC8a,GAC5B,IAAM2T,GAAkB3T,EAAM/a,UAAY,IAAIlK,KAAK04B,GAGnD,OAFqBE,GAAkBA,EAAeC,OAAOC,cAEtC,EAC3B,ECde,SAASC,GAAgB7uB,GACpC,OAAOA,EAASjM,OAAO84B,EAAA,GAA0B7zB,KAAI,SAAC,G,IAAEwwB,EAAM,SAAEmF,EAAM,SAAO,OACzE9J,KAAM8J,EAAO9J,KACbiK,UAAWH,EAAOG,UAClBC,KAAMvF,EACNwF,QAASxF,EAASmF,EAAOG,UACzBG,aAAc,GAL2D,GAOjF,CCRe,SAASC,GAAqBlvB,GACzC,OAAQA,GAAY,IACfjM,OAAO06B,EAAA,GACPz6B,QAAO,SAACm7B,EAAOlvB,GAAY,OAAAkvB,EAAQlvB,EAAQupB,MAAhB,GAAwB,EAC5D,CCDe,SAAS4F,GAAgC,G,IACpDC,EAAU,aACVC,EAAc,iBACdC,EAAa,gBACbC,EAA0B,6BAC1BxvB,EAAQ,WACRyvB,EAAiB,oBACjBC,EAAqB,wBACrBC,EAAO,UACPC,EAAK,QACLC,EAAI,OAEJ,MAAO,CACHC,eAAgBT,EAChBU,eAAgBP,EAChBQ,mBAAoBN,EACpBJ,eAAc,EACdW,kBAAmBf,GAAqBlvB,GACxCkwB,eAAgBT,EAChBE,QAAO,EACPQ,iBAAkBnwB,GAAY6uB,GAAgB7uB,GAC9C4vB,MAAK,EACLL,cAAa,EACbM,KAAI,EAEZ,CC1BA,SAJoD,SAAC,G,IAAEpnC,EAAQ,WAAO,OAClE,2BAASsK,UAAU,6BAA6BtK,EADkB,E,gBCUzD2nC,GAAqE,SAAC,G,IAC/EC,EAAW,cACXnwB,EAAU,aACV5V,EAAQ,WAER,OAAK8D,OAAOkiC,KAAKD,GAAah5B,OAK1B,kCAAc,wCACTjJ,OAAO+L,QAAQk2B,GAAar3B,KAAI,SAAC1D,EAAO+d,GACrC,OACI,kCAAe,oDAA6CA,GAASla,IAAKka,GACtE,gBAAC3V,EAAA,EAAgB,CACbhR,GAAI,qCAA8BwT,EAAU,YAAI5V,EAAQ,YAAIgL,EAAM,M,IAEtE,yBACK,WAAIA,EAAM,KAI3B,KAhBG,IAmBf,EC1Bai7B,GAAqE,SAAC,G,IAC/EC,EAAoB,uBAClB,uCACDA,EAAqBx3B,KAAI,SAACiH,G,UACvB,OAAoB,QAAhB,EAAAA,aAAO,EAAPA,EAASwwB,eAAO,eAAEhhC,KAEd,iCACc,uCACVQ,KAAMgQ,EAAQwwB,QAAQhhC,IACtB0J,IAAK,UAAG8G,EAAQC,WAAU,YAAID,EAAQ3V,SAAQ,YAC9CyF,IAAI,sBACJ+a,OAAO,UAEP,gBAACpN,EAAA,EAAgB,CACbhR,GAAI,qCAA8BuT,EAAQC,WAAU,YAAID,EAAQ3V,cAIrD,QAAhB,EAAA2V,aAAO,EAAPA,EAASwwB,eAAO,eAAE/jC,IAErB,iCACc,qCACVyM,IAAK,UAAG8G,EAAQC,WAAU,YAAID,EAAQ3V,SAAQ,aAE9C,gBAACoT,EAAA,EAAgB,CACbjQ,KAAM,CAAEgjC,QAASxwB,EAAQwwB,QAAQ/jC,IACjCA,GAAI,qCAA8BuT,EAAQC,WAAU,YAAID,EAAQ3V,cAIrD,QAAhB,EAAA2V,aAAO,EAAPA,EAASwwB,eAAO,eAAEJ,cAAepwB,EAAQ3V,SACzC,gBAAC8lC,GAAoB,CACxBj3B,IAAI,kBACJk3B,YAAapwB,EAAQwwB,QAAQJ,YAC7B/lC,SAAU2V,EAAQ3V,SAClB4V,WAAYD,EAAQC,kBALrB,CAQX,IApCE,ECKAwwB,GAAuB,SACzBzwB,GACgC,QAAEA,EAAQ3V,UAAY,YAAa2V,KAAaA,EAAQwwB,OAAxD,EAwD9BE,GAAiE,SAAC,G,IACpE9kC,EAAM,SACN+kC,EAAW,cACXrV,EAAW,cACXsV,EAAY,eACZC,EAAkB,qBAElB,OAAQvV,GACJ,IAAK,+BACL,IAAK,mBACD,OAAO,gBAAC9iB,GAAA,EAAc,CAAC/L,GAAG,iDAE9B,IAAK,UACD,OACI,gBAAC+L,GAAA,EAAc,CACXhL,KAAM,CAAEmjC,YAAW,EAAEC,aAAY,GACjCnkC,GAAG,iDAIf,IAAK,aACD,OAAIb,EAAOwG,iBAAiB6f,SAAS,4EAE7B,gBAACzZ,GAAA,EAAc,CACXhL,KAAM,CAAEmjC,YAAW,EAAEC,aAAY,GACjCnkC,GAAG,iDAMX,gBAAC+L,GAAA,EAAc,CACXhL,KAAM,CAAEmjC,YAAW,EAAEC,aAAY,GACjCnkC,GAAG,oDAIf,QACI,OACI,gBAAC+L,GAAA,EAAc,CACXhL,KAAM,CAAEmjC,YAAW,EAAEC,aAAY,EAAEC,mBAAkB,GACrDpkC,GACIokC,EACM,oDACA,yDAK9B,EAEA,UAAe,IAAAn+B,OAzG0C,SAAC,G,MACtD9G,EAAM,SACNkvB,EAAK,QACL8V,EAAY,eACZC,EAAkB,qBAEZN,GAAqC,QAAd,EAAAzV,EAAM/a,gBAAQ,eAAEjM,OAAO28B,MAAyB,GAE7E,OACI,gBAAC,GAAwB,KACpB3V,EAAMxf,SACH,iCAAa,wCACT,gBAAC9C,GAAA,EAAc,CACXhL,KAAM,CAAEmjC,YAAa7V,EAAMxf,SAC3B7O,GAAG,0CAKf,iCAAa,wCACT,gBAACikC,GAAkB,CACf9kC,OAAQA,EACR+kC,YAAa7V,EAAMxf,QACnBggB,YAAaR,EAAM/X,OACnB6tB,aAAcA,EACdC,mBAAoBA,KAG5B,gBAACP,GAAoB,CACjBC,qBAAsBA,IAEzBzV,EAAMgW,iBACH,iCAAa,yCACT,gBAACt4B,GAAA,EAAc,CACX/L,GACIquB,EAAMiW,eACA,gEACA,sEAOlC,I,4BCxDA,UAAe,E,SAAA,IANsB,WAAM,OACvC,uBAAKzxB,OAAO,KAAKgK,QAAQ,YAAYuJ,MAAM,KAAKtJ,MAAM,8BAClD,wBAAMC,EAAE,sJAF2B,ICkC3C,UAAe,IAAA9W,OAxBsC,SAAC,G,IAAEI,EAAS,YACvDk+B,GAAc,IAAAh1B,cAChB,KAAAi1B,WAAS,WACL33B,OAAO43B,OACX,GANqB,KAOrB,IAGJ,MAA4B,mBAAjB53B,OAAO43B,MACP,KAIP,qBACIp+B,UAAWA,GAAa,mBACxB9C,KAAK,IACLvD,GAAG,kBACHuO,SAAS,EAAA8I,GAAA,GAAektB,IAExB,gBAAC,GAAS,M,IAAI,gBAACvzB,EAAA,EAAgB,CAAChR,GAAG,sBAG/C,ICxBA,SANsD,SAAC,G,IAAEjE,EAAQ,WAAEuY,EAAM,SAAO,OAC5E,sBAAIjO,UAAU,mCAAkC,YAAYiO,GACvDvY,EAFuE,ECchF,UAAe,IAAAkK,OAVwC,SAAC,G,IAAEuB,EAAI,OAAO,OACjE,gBAAC,GAAa,CAAC8M,OAAO,8BACjB9M,GACG,gBAACwJ,EAAA,EAAgB,CAACjQ,KAAM,CAAEyG,KAAI,GAAIxH,GAAG,mDAGvCwH,GAAQ,gBAACwJ,EAAA,EAAgB,CAAChR,GAAG,yCAN8B,ICoCrE,IAAM0kC,IAAe,IAAArV,OAAK,WACtB,SAAAC,EAAA,IACI,WACI,wCAFR,IASEqV,IAAqB,IAAAtV,OAAK,WAC5B,SAAAC,EAAA,IACI,WACI,uCAFR,IA+BJ,4B,qDAII,EAAApvB,MAAgC,CAAC,EAuMzB,EAAA0kC,sBAAoC,WACxC,EAAKr5B,SAAS,CAAEqF,WAAOnV,GAC3B,EAEQ,EAAAopC,aAAmD,SAAC,G,IAAE5vB,EAAQ,WAAEssB,EAAe,kBAC7E,EAA4B,EAAKn2B,MAA/ByX,EAAa,gBAAE1jB,EAAM,SAEvBumB,EAAgBvmB,GAAUA,EAAOumB,cACjC9Q,EACD8Q,GACGA,EAAc9Q,sBACd8Q,EAAc9Q,qBAAqBhE,OACvC,GAEJ,EAAKrF,SAAS,CACVk2B,aAAa,IAGjB5e,EAAc,CACV5N,SAAQ,EACRssB,gBAAe,IAEdrnB,MAAK,WACF,EAAK3O,SAAS,CACVu5B,aAAa,EACbrD,aAAa,GAErB,IACCzB,OAAM,SAACpvB,GACJ,EAAKrF,SAAS,CACVqF,MACIA,EAAM0F,OAAS,IACT,IAAI,EAAiC1F,EAAOgE,GAC5C,IAAI,EAA2BhE,GACzCk0B,aAAa,EACbrD,aAAa,GAErB,GACR,EAEQ,EAAA1Q,qBAA+C,SAACngB,GAC5C,IAAAxO,EAAgB,EAAKgJ,MAAK,YAElC,EAAKG,SAAS,CAAEqF,MAAK,IACrBxO,EAAY0B,IAAI8M,GAEZ,EAAKsf,mBACL,EAAKA,kBAAkBe,UAAUrgB,EAEzC,E,CACJ,QA7PgC,oBAQ5B,YAAA1F,kBAAA,sBACU,EAOF3I,KAAK6I,MANLxL,EAAW,cACX0yB,EAAuB,0BACvBC,EAAkB,qBAClBwS,EAAS,YACTl2B,EAAO,UACPhT,EAAgB,mBAGpBkpC,EAAUl2B,GACLqL,MAAK,SAAC,G,IACK,GADC,OACsClb,aAAe,CAAC,GAAC,MAA/C,QAAT,MAA2B,CAAC,EAAC,GAApB6D,SACXowB,EAAYX,EAAwB,CAAE3vB,kBADnB,IAAG,KAAE,IAG9B,EAAKutB,kBAAoB+C,EAEzBA,EAAUC,eAAc,SAACC,GAAW,OAAAZ,EAAmBa,OAAOD,EAA1B,IACpCF,EAAUI,gBAAgB,CAAEC,UAAW1zB,IAEvC/D,EAAiBoB,gBACrB,IACC+iC,MAAMz9B,KAAKwuB,qBACpB,EAEA,YAAArlB,OAAA,WACU,MAAoCnJ,KAAK6I,MAAvCijB,EAAK,QAAElvB,EAAM,SAAE6lC,EAAc,iBAErC,IAAK3W,IAAUlvB,GAAU6lC,IACrB,OAAO,gBAACvsB,EAAA,EAAc,CAAC3M,WAAW,IAGtC,IAAMm5B,EAAsB,EAAuB5W,GAE/C,EAGAlvB,EAAM,aAHU+lC,EAAU,aAAEC,EAAgB,mBAC5Czf,EAEAvmB,EAAM,cADG0D,EACT1D,EAAM,eAMV,OACI,uBACIkH,UAAW,IAAW,0CAA2C,CAC7D,eAAe,EAAAue,EAAA,QAGnB,uBAAKve,UAAU,eACX,uBAAKA,UAAU,qBACX,gBAAC,GAAc,CAACmB,KAAM6mB,EAAM1a,eAAerN,YAE3C,gBAAC,GAAW,CACRnH,OAAQA,EACRkvB,MAAOA,EACP8V,aAAce,EACdd,mBAAoBe,IAGxB,2B,kBAEI,0BACI,kJAGA,sNAMPF,GACG,gBAAC,GAAwB,KACrB,uBACI3e,wBAAyB,CACrBC,OAAQ,aAAmB0e,IAC9B,YACS,0BAKrB1iC,KAAK6iC,kBAAkB,CACpBC,uBAAwBhX,EAAMqT,qBAC9BA,sBAAuBrT,EAAMiX,WAC7B5f,cAAa,IAGjB,uBAAKrf,UAAU,2BACX,wBAAMlG,OAAQ0C,EAAU4lB,OAAO,MAAMrK,OAAO,QACxC,gBAAChM,EAAA,GAAM,CAAChS,KAAK,SAASmU,QAASnC,EAAA,GAAcoC,WACzC,gBAACxD,EAAA,EAAgB,CAAChR,GAAG,8CAOxCuC,KAAKgjC,qBACLhjC,KAAKijC,mBAGlB,EAEQ,YAAAJ,kBAAR,SAA0B,G,IACtB1D,EAAoB,uBACpB2D,EAAsB,yBACtB3f,EAAa,gBAMP,EAA+BnjB,KAAKrC,MAAlCuhC,EAAW,cAAEqD,EAAW,cAExBzW,EAAU9rB,KAAK6I,MAAK,MAE5B,OACI,gCACKi6B,IAA2BP,GACxB,gBAAC,EAAe,CACZpD,qBAAsBA,EACtBD,YAAaA,EACbD,SAAUj/B,KAAKsiC,aACfjwB,sBAAsB,EAAAkB,EAAA,GAAkC4P,KAI/Dof,KACIzW,aAAK,EAALA,EAAOiX,YAAa,gBAAC,EAAyB,MAAM,gBAAC,EAAoB,OAG1F,EAEQ,YAAAC,mBAAR,WACU,MAAoBhjC,KAAK6I,MAAvBijB,EAAK,QAAElvB,EAAM,SAErB,IAAKkvB,IAAUlvB,EACX,OAAO,KAGH,IAAA49B,EAA8B59B,EAAM,SAA1BsmC,EAAoBtmC,EAAM,gBAE5C,OACI,gBAACmrB,EAAA,EAAU,MACN,SAACvc,GACE,OAAIA,EAEI,gBAACumB,EAAA,EAAa,KACV,gBAACqQ,IAAkB,iBACXjC,GAAgCrU,GAAM,CAC1CqX,WACI,gBAAC,GAAS,CAACr/B,UAAU,sCAEzBygB,UAAWuH,EAAMvH,UACjB2e,gBAAiBA,EACjBE,cAAe5I,EACf0F,MAAOpU,EAAMuX,gBAOzB,yBAAOv/B,UAAU,eACb,gBAACiuB,EAAA,EAAa,KACV,gBAACoQ,IAAY,eACTgB,WAAY,gBAAC,GAAS,OAClBhD,GAAgCrU,GAAM,CAC1CvH,UAAWuH,EAAMvH,UACjB2e,gBAAiBA,EACjBE,cAAe5I,EACf0F,MAAOpU,EAAMuX,gBAKjC,GAGZ,EAEQ,YAAAJ,iBAAR,WACY,IAAA50B,EAAUrO,KAAKrC,MAAK,MAE5B,OACI,gBAAC0zB,EAAA,EAAU,CACPhjB,MAAOA,EACPijB,QAAStxB,KAAKqiC,sBACd3L,qBAAqB,GAGjC,EAoDJ,EA7PA,CAAgC,EAAA9rB,WAqRhC,UAAe,EAAA4X,EAAA,IAAc,EAAA7f,EAAA,IAtBtB,SACHC,GAGI,MAKAA,EAAO,cAJH,IAAApE,KAAQqtB,EAAQ,WAAEpvB,EAAS,YACfgmC,EAAc,0BAE9BlpC,EACAqJ,EAAO,gBAELhG,EAASH,IACTqvB,EAAQD,IAEd,MAAO,CACHjvB,OAAM,EACN6lC,eAAc,EACdD,UAAWjpC,EAAgBipC,UAC3B1W,MAAK,EAEb,GAE6B,CAA0CwX,KCjRvE,SAjEA,YASI,WAAYz6B,GACR,QAAK,UAACA,IAAM,K,OATR,EAAA06B,eAAiB,IAAI,EACrB,EAAAhqC,iBAAkB,IAAAm6B,uBAAsB,CAC5CC,QAAQ,EAAAtN,EAAA,KAAqBuN,YAC7BC,oBAAoB,IAEhB,EAAA7D,oBAAqB,EAAA8D,EAAA,KA4CrB,EAAAxT,cAAwE,SAAC,G,IAC7E5N,EAAQ,WACRssB,EAAe,kBAEP1yB,EAAY,EAAKzD,MAAK,QAE9B,OAAO,EAAK06B,eAAe9E,OAAO,CAC9BnyB,QAAO,EACPk3B,YAAY,EACZ9wB,SAAQ,EACRssB,gBAAe,GAEvB,EAlDI,EAAKn/B,aAAc,EAAAk0B,EAAA,GACf,CAAEC,OAAQnrB,EAAMorB,cAChB,CACIC,WAAY,CAAC,sBACbC,WAAYtrB,EAAMsrB,WAClBC,WAAYvrB,EAAMwrB,iBAAmBxrB,EAAMwrB,iBAAmB,K,CAG1E,CA2CJ,OA/DmC,oBAsB/B,YAAA1rB,kBAAA,WACY,IAAAtL,EAAgB2C,KAAK6I,MAAK,YAElC,kBAAyB,WAAIxL,GACjC,EAEA,YAAA8L,OAAA,WACI,OACI,gBAACmrB,EAAA,EAAa,CAACC,OAAQv0B,KAAKH,aACxB,gBAAC20B,EAAA,EAAc,CAACj7B,gBAAiByG,KAAKzG,iBAClC,gBAACk7B,EAAA,EAAgB,CAACl7B,gBAAiByG,KAAKzG,iBACpC,gBAACm7B,EAAA94B,EAAiB,CAACrC,gBAAiByG,KAAKzG,iBACrC,gBAAC8I,EAAA,EAAiB,CAAC9I,gBAAiByG,KAAKzG,gBAAiBsG,aAAa,EAAAk0B,EAAA,MACnE,gBAAC,IAAiB,iBACV/zB,KAAK6I,MAAK,CACdyX,cAAetgB,KAAKsgB,cACpByP,wBAAyB,EAAA4E,gCACzB3E,mBAAoBhwB,KAAKgwB,mBACzBnwB,YAAaG,KAAKH,mBAQlD,EAeJ,EA/DA,CAAmC,EAAA+K,U,kDCzBpB,SAASsY,EAA8B7nB,GAClD,GAAKA,EAIL,OAAIA,IAAa,IAAgBooC,gBAAkBpoC,IAAa,IAAgBqoC,0BACrE,IAAgBC,kCAGvBtoC,IAAa,IAAgBuoC,UACtB,IAAgBC,6BAGpBxoC,CACX,C,mCCdA,Q,SAA8B,C,kBCAf,SAASmkC,EAAqBxuB,GACzC,MAA8B,gBAAvBA,EAAQC,UACnB,C,0ECaa6yB,EAAoB,SAAC3vB,GAC9B,OAAO,4BACH,8BAASA,EAAK4vB,S,OAAsB5vB,EAAKlP,KAVd,SAACkP,GAChC,OAAKA,EAAKlH,SAAYkH,EAAKlH,QAAQ7E,OAI3B,wBAAMtE,UAAU,qBAAqB,aAAMqQ,EAAKlH,QAAQlD,KAAI,SAAAi6B,GAAU,OAAAA,EAAOloC,KAAP,IAAcwM,KAAK,SAHtF,IAIf,CAKS27B,CAA2B9vB,GAEpC,EAiBA,SAAe,IAAAzQ,OAfsE,SAAC,G,IAClF6gB,EAAS,YAGT,OACI,sBAAIzgB,UAAU,8BACbygB,EAAUxa,KAAI,SAACoK,GAAS,OACrB,sBAAIjK,IAAKiK,EAAK1W,IACTqmC,EAAkB3vB,GAFF,IAOjC,G,mFCAA,SAAe,IAAAzQ,OAxBsE,SAAC,G,IAClFsf,EAAI,OACJyB,EAAW,cAELF,GAAY,OAAcvB,EAAMyB,GAEtC,OACI,uBAAK3gB,UAAU,2BACX,8BACI,gBAAC,IAAgB,CACbtF,KAAM,CAAEqnB,OAAO,OAAkBtB,IACjC9mB,GAAG,0BAIX,0BACK8mB,EAAUxa,KAAI,SAACoK,GAAS,OACrB,sBAAIjK,IAAKiK,EAAK1W,IAAK,UAAG0W,EAAK4vB,SAAQ,cAAM5vB,EAAKlP,MADzB,KAMzC,G,kDChCe,SAAS2gB,EAAc5C,EAAYyB,GAC9C,OAAO,IAAA+H,UACH,IAAAziB,KAAI0a,EAAYC,aAAa,SAACwf,GAC1B,WAAAr9B,MACImc,EAAKuB,UAAU2F,eACf,SAAC/V,GAAS,OAAAA,EAAK1W,KAAOymC,IAAU,IAAAC,OAAMhwB,EAAKiwB,SAAjC,GAFd,IAMZ,C,kDCTe,SAASte,EAAkBvB,GACtC,OAAO,IAAAxf,QAAOwf,GAAW,SAAC2b,EAAO/rB,GAAS,OAAA+rB,EAAQ/rB,EAAK4vB,QAAb,GAAuB,EACrE,C,iDCFe,SAAStY,EAA2B9rB,GAC/C,QAAKA,EAAayI,SAIX,IAAA0I,OACHnR,GACA,SAAC8kB,G,MACG,OAACA,EAAYkB,wBAA0BlB,EAAYkB,uBAAuBloB,IAC7B,YAAX,QAAlC,EAAAgnB,EAAYkB,8BAAsB,eAAE9nB,K,GAEhD,C,iDCXe,SAAS8mB,EACpBhlB,EACA4kB,GAQA,OANsB,IAAAxf,QAClBpF,GACA,SAACugC,EAAOzb,GAAgB,OAAAyb,EAAQzb,EAAYC,YAAYtc,MAAhC,GACxB,GAGmBmc,EAAU2F,cAAcplB,QAAO,SAACqP,GAAS,OAACA,EAAKkwB,gBAAN,IAAwBj8B,MAC5F,C,8FC4BA,SAAe,IAAA1E,OA7BX,SAAC,G,IAAE4O,EAAW,cAGd,OACI,uBAAKxO,UAAU,mDACX,gBAAC2W,EAAA,EAAM,CAACC,cAAepI,EAAYlK,OAJpB,KAKV,SAAC,G,IAAEmN,EAAM,SAAEoF,EAAM,SAAO,OACrB,gCACI,wBACI7W,UAAW,+CACPyR,EACM,iDACA,oDAGTjD,IAEHiD,GACE,qBAAGzR,UAAU,0BAA0BkI,SAAS,EAAA8I,EAAA,GAAe6F,IAC3D,gBAAClM,EAAA,EAAgB,CAAChR,GAAG,sBAbZ,IAqBzC,ICMA,QAjCiF,SAAC,G,IAC9E,IAAAwoB,6BAAAA,OAA4B,IAAG,GAAI,EACnCC,EAAM,SAEN,OACI,uBAAKpiB,UAAU,sCACVoiB,EAAOoe,UACJ,wBAAMxgC,UAAU,yBACZ,uBACIygC,IAAKre,EAAO5T,YACZxO,UAAU,qBACVi6B,IAAK7X,EAAOoe,YAIxB,wBAAMxgC,UAAU,uBACXoiB,EAAO5T,YACP4T,EAAOse,aACJ,wBAAM1gC,UAAU,8BAA8BoiB,EAAOse,aAExDte,EAAOue,uBAAyBxe,GAC7B,gBAAC,EAAmC,CAChC3T,YAAa4T,EAAOue,yBAIhC,wBAAM3gC,UAAU,wBACZ,gBAAC4gC,EAAA,EAAe,CAACnK,OAAQrU,EAAOye,QAIhD,C,mGClCA,SAAe,EAAAtqB,EAAA,IANwB,WAAM,OACzC,uBAAK/J,OAAO,KAAKgK,QAAQ,YAAYuJ,MAAM,KAAKtJ,MAAM,8BAClD,wBAAMC,EAAE,0HAF6B,ICM7C,SAAe,EAAAH,EAAA,IANqB,WAAM,OACtC,uBAAK/J,OAAO,KAAKgK,QAAQ,YAAYuJ,MAAM,KAAKtJ,MAAM,8BAClD,wBAAMC,EAAE,qGAF0B,ICQ1C,IAAYoqB,GAAZ,SAAYA,GACR,gBACA,cACA,oBACA,mBACH,CALD,CAAYA,IAAAA,EAAS,KAgDrB,QA1B6C,SAAC,G,IAC1C70B,EAAmB,sBACnBvW,EAAQ,WACRsqB,EAAI,OACJ/R,EAAM,SACNlU,EAAI,OACF,OACF,uBACIiG,UAAW,IACP,WACAiM,EACA,CAAE,iBAAkBlS,IAAS+mC,EAAUlpB,OAAS7d,GAChD,CAAE,kBAAmBA,IAAS+mC,EAAU1nC,OACxC,CAAE,oBAAqBW,IAAS+mC,EAAUxF,SAC1C,CAAE,oBAAqBvhC,IAAS+mC,EAAUrN,UAC7C,YACUxlB,GAEX,uBAAKjO,UAAU,iCAAiCggB,GAjCxD,SAA2BjmB,GACvB,OAAQA,GACJ,KAAK+mC,EAAU1nC,MACf,KAAK0nC,EAAUrN,QACX,OAAO,gBAACnB,EAAA,EAAS,MAErB,KAAKwO,EAAUxF,QACX,OAAO,gBAAC,EAAW,MAEvB,KAAKwF,EAAUlpB,KACf,QACI,OAAO,gBAAC,EAAQ,MAE5B,CAoBgEmpB,CAAkBhnC,IAE1E,mCAAe,YAAYiG,UAAU,mCAAmCqW,KAAK,SACxE3gB,GAfP,C,0DC7BMsrC,EAMAC,E,yCAMZ,SAASC,EACLn8B,GAEQ,IAAA/E,EAAqD+E,EAAK,UAA/Co8B,EAA0Cp8B,EAAK,YAAlCU,EAA6BV,EAAK,UAAvBgJ,EAAkBhJ,EAAK,KAAjBmJ,EAAYnJ,EAAK,QAElE,OAAO,IACH,SACA/E,EACA,CAAE,kBAAmBkO,IAAY8yB,EAAcjwB,SAC/C,CAAE,mBAAoB7C,IAAY8yB,EAAc7yB,WAChD,CAAE,iBAAkBD,IAAY8yB,EAAcI,QAC9C,CAAE,gBAAiBrzB,IAASkzB,EAAW1O,OACvC,CAAE,eAAgBxkB,IAASkzB,EAAWjzB,MACtC,CAAE,gBAAiBD,IAASkzB,EAAWI,OACvC,CAAE,eAAgBF,GAClB,CACI,kCACIjzB,IAAY8yB,EAAcjwB,SAAW7C,IAAY8yB,EAAcI,QAEvE,CAAE,oCAAqClzB,IAAY8yB,EAAc7yB,WACjE,CAAE,aAAc1I,GAExB,EAlCA,SAAYu7B,GACR,oBACA,wBACA,iBACH,CAJD,CAAYA,IAAAA,EAAa,KAMzB,SAAYC,GACR,gBACA,cACA,eACH,CAJD,CAAYA,IAAAA,EAAU,KAqDtB,QAvB+C,SAAC,GAC5C,IAAAvrC,EAAQ,WACRsK,EAAS,YACT8Q,EAAQ,WACRqwB,EAAW,cACX17B,EAAS,YACTsI,EAAI,OACJE,EAAM,SACNlU,EAAI,OACJmU,EAAO,UACJpF,GAAI,cAVqC,gGAW1C,OACF,2CACQA,EAAI,CACR9I,UAAWkhC,EAAa,CAAElhC,UAAS,EAAEmhC,YAAW,EAAE17B,UAAS,EAAEsI,KAAI,EAAEG,QAAO,IAAG,YAClED,EACX6C,SAAUA,GAAYrL,EACtB1L,KAAMA,GAAQ,WAEbrE,E,mHChBH4rC,GAAiD,IAAA1hC,OACnD,SAAC,G,IAAEqM,EAAmB,sBAAEzE,EAAS,YAAEjF,EAAK,QAAEgQ,EAAI,OAAEtB,EAAQ,WAAE5L,EAAM,SAAE4I,EAAM,SAC9DsD,GAAQ,IAAA3b,UACV,WAAM,OACF,gBAAC2rC,EAAe,CACZ/5B,UAAWA,EACXjF,MAAOA,EACPgQ,KAAMA,EACNtB,SAAUA,EACV5L,OAAQA,GANV,GASN,CAAC9C,EAAOgQ,EAAMtB,EAAUzJ,EAAWnC,IAGvC,OACI,gBAAC,IAAkB,CACf4G,oBAAqBA,EACrBu1B,UAAU,IAAAC,OAAMlvB,EAAKoc,OAAQpsB,EAAMpB,MACnC8M,OAAQA,GAEPsD,EAGb,IACA,SACI,EACA,GADE,IAAMmwB,EAAQ,OAASC,EAAS,QAAKje,GAAS,cAAhD,kBACQke,EAAQ,OAASC,EAAS,QAAKC,GAAS,cAAhD,kBAEA,WAAape,EAAWoe,IACxB,IAAaJ,EAAUE,IACvB,IAAaD,EAAWE,E,IAQhC,2B,8CA6BA,QA7B8B,oBAC1B,YAAApe,mBAAA,SAAmB,G,IAASke,EAAS,QAC3B,EAGFzlC,KAAK6I,MAFI/M,EAAK,cACd,IAAAiZ,SAAAA,OAAQ,IAAG,IAAA9I,KAAI,IAEK,IAAA8wB,QAAOjhC,GAASA,EAAM+pC,UAAY/pC,OAC9B,IAAAihC,QAAO0I,EAAU3pC,OACvC2pC,EAAU3pC,MAAM+pC,UAChBJ,EAAU3pC,QAGZiZ,EAASjZ,EAEjB,EAEA,YAAAqN,OAAA,WACU,MAAyCnJ,KAAK6I,MAA5C,IAAAyC,UAAAA,OAAS,IAAG,UAAO,EAAEjF,EAAK,QAAE8C,EAAM,SAE1C,OAAIA,EACQA,EAAenJ,KAAK6I,OAGP,iBAAdyC,GACA,IAAAzK,eAAcyK,EAAkBjF,IAGpC,IAAAxF,eAAcyK,EAAkBtL,KAAK6I,MAChD,EACJ,EA7BA,CAA8B,EAAA+B,WA+B9B,SAAe,IAAAlH,OAnGgD,SAAC,GAC5D,IAAAqM,EAAmB,sBACnBjM,EAAS,YACTwH,EAAS,YACTnC,EAAM,SACN4I,EAAM,SACNgD,EAAQ,WACLnI,GAAI,cAPqD,8EAStDk5B,GAAmB,IAAA94B,cACrB,SAACnE,GAAsB,OACnB,gBAACu8B,GAAU,iBACHv8B,EAAK,CACTkH,oBAAqBA,EACrBjM,UAAWA,EACXwH,UAAWA,EACXyJ,SAAUA,EACV5L,OAAQA,EACR4I,OAAQA,IARO,GAWvB,CAAChC,EAAqBjM,EAAWwH,EAAWnC,EAAQ4I,EAAQgD,IAGhE,OAAO,gBAAC,EAAAgxB,OAAK,iBAAKn5B,EAAI,CAAEzD,OAAQ28B,IACpC,G,yGCaA,SAAe,IAAApiC,OAzCsD,SAAC,G,IAClEqM,EAAmB,sBACnB,IAAA6E,SAAAA,OAAQ,IAAG,GAAK,EAChBO,EAAY,eACZJ,EAAQ,WACR9P,EAAI,OACJxH,EAAE,KACFsU,EAAM,SAEA8H,GAAc,IAAA7M,cAChB,SAAC,G,IAAE3G,EAAK,QAAmB,OACvB,gCACI,gBAAC,KAAa,iBACNA,EAAK,CACTiS,UAAWjS,EAAMvK,MACjB8Y,SAAUA,EACVnX,GAAIA,GAAM4I,EAAMpB,KAChBE,MAAOgQ,EACPpD,OAAQA,KAGZ,gBAAC,IAAc,CACXi0B,QAAS,UAAGvoC,QAAAA,EAAMwH,EAAI,wBACtBA,KAAMA,EACN8M,OAAQ,WAAG,IAAAkpB,WAAUh2B,GAAK,0BAdX,GAkB3B,CAAC2P,EAAUnX,EAAI0X,EAAclQ,IAGjC,OACI,gBAAC,IAAc,CACX8K,oBAAqBA,EACrB9K,KAAMA,EACN8P,SAAUA,EACV5L,OAAQ0Q,GAGpB,G,sGCrBA,SAvBsB,IAAAosB,aAClB,SACI,EACAre,GADE,IAAA7X,EAAmB,sBAAE5K,EAAK,QAAE1H,EAAE,KAAEsU,EAAM,SAAKnF,GAAI,cAAjD,+CAEC,OACD,gCACI,gBAAC,KAAK,iBACEA,EAAI,CACR9I,UAAW,IACP,gBACA,kCACAiM,GAEJtS,GAAIA,EACJmqB,IAAKA,EACL7V,OAAQA,EACRlU,KAAK,cAET,gBAAC,IAAK,CAAC2a,QAAS/a,GAAK0H,G,0MCMjC,SAxBmB,IAAA8gC,aACf,SACI,EACAre,GADE,IAAA7X,EAAmB,sBAAE5K,EAAK,QAAErJ,EAAK,QAAEwc,EAAO,UAAE7a,EAAE,KAAKmP,GAAI,cAAzD,wDAEC,OACD,gCACI,gBAACyL,EAAA,GAAK,iBACEzL,EAAI,CACR0L,QAASA,EACTxU,UAAW,IACP,aACA,+BACAiM,GAEJtS,GAAIA,EACJmqB,IAAKA,EACL/pB,KAAK,QACL/B,MAAOA,KAEX,gBAACyc,EAAA,EAAK,CAACC,QAAS/a,GAAK0H,G,8BC6JjC,SAAe,IAAAzB,OAAK,EAAAwiC,EAAA,IAlKuD,SAAC,GACrD,sBAAnB,IACAj/B,EAAI,OACJP,EAAS,YACTjJ,EAAE,KACFwH,EAAI,OACJ,IAAA8P,SAAAA,OAAQ,IAAG,IAAA9I,KAAI,EACfgB,EAAO,UACPwR,EAAW,cACX7K,EAAsB,yBACtB9X,EAAK,QACF8Q,GAAI,cAXiE,4HAahEu5B,EAAgBl/B,EAAI,YACtBm/B,GAAmB,IAAAp5B,cACrB,SAACq5B,EAAW52B,GACR,OAAAsF,GAAS,gCACFtF,GAAK,CACRoM,OAAQ,CACJ5W,KAAI,EACJnJ,MAAOuqC,KAJf,GAOJ,CAACtxB,EAAU9P,IAGf,OAAQyB,GACJ,KAAK4/B,EAAA,EAAqBC,SACtB,OACI,gCACI,uBACIziC,UAAW,IACP,CAAE,oBAAqB8P,GACvB,CAAE,0BAA2BA,KAEjC,gBAAC4yB,EAAA,EAAe,OAEpB,2CACS55B,EAAY,CACjB9I,UAAW,IACP,CAAE,kBAAmB8P,GACrB,6CACH,YACU,UAAGnW,EAAE,WAChBA,GAAIA,EACJwH,KAAMA,EACN8P,SAAUA,EACVjZ,MAAiB,OAAVA,EAAiB,GAAKA,IAE5B2iB,GAAe,0BAAQ3iB,MAAM,IAAI2iB,GACjCxR,GACGA,EAAQlD,KAAI,SAAC,G,IAAE5E,EAAK,QAASshC,EAAW,QAAO,OAC3C,0BAAQv8B,IAAKu8B,EAAa3qC,MAAO2qC,GAC5BthC,EAFsC,MASnE,KAAKmhC,EAAA,EAAqB3K,MACtB,OAAK1uB,GAAYA,EAAQ7E,OAKrB,gCACK6E,EAAQlD,KAAI,SAAC,G,IAAE5E,EAAK,QAASshC,EAAW,QAAO,OAC5C,gBAAC,GAAU,iBACH75B,EAAI,CACR0L,QAASmuB,IAAgB3qC,EACzB2B,GAAI,UAAGA,EAAE,YAAIgpC,GACbv8B,IAAKu8B,EACLthC,MAAOA,EACPF,KAAMA,EACN8P,SAAUA,EACVhD,OAAQ,UAAGtU,EAAE,YAAIgpC,EAAW,UAC5B3qC,MAAO2qC,IAViC,KAL7C,KAqBf,KAAKH,EAAA,EAAqBn/B,SACtB,OAAK8F,GAAYA,EAAQ7E,OAKrB,gCACK6E,EAAQlD,KAAI,SAAC,G,IAAE5E,EAAK,QAASshC,EAAW,QAAO,OAC5C,gBAACC,EAAA,GAAa,iBACN95B,EAAI,CACR0L,UAASzO,MAAM88B,QAAQ7qC,IAASA,EAAM4S,SAAS+3B,GAC/ChpC,GAAI,UAAGA,EAAE,YAAIgpC,GACbv8B,IAAKu8B,EACLthC,MAAOA,EACPF,KAAMA,EACN8P,SAAUA,EACVhD,OAAQ,UAAGtU,EAAE,YAAIgpC,EAAW,aAC5B3qC,MAAO2qC,IAViC,KAL7C,KAqBf,KAAKH,EAAA,EAAqBr/B,KACtB,OACI,gBAAC,KAAe,iBACP2F,EAAY,CACjBsI,aAAa,MAIb0xB,kBAAkB,mCAClB9iC,UAAW,IAAW,0CAA2C,CAC7D,iBAAkB8P,IAEtBizB,WAAYV,EACZW,QAASl6B,EAAKtH,IAAM,IAAI4B,KAAK,UAAG0F,EAAKtH,IAAG,oBAAgBpM,EACxD6tC,QAASn6B,EAAK7G,IAAM,IAAImB,KAAK,UAAG0F,EAAK7G,IAAG,oBAAgB7M,EACxD+L,KAAMA,EACN8P,SAAUqxB,EACVY,gBAAiBb,EAAYtP,cAC7BoQ,gBAAgB,mCAChBC,UAAU,IAAAnK,QAAOjhC,GAASA,OAAQ5C,KAI9C,KAAKotC,EAAA,EAAqBa,UACtB,OACI,gBAACC,EAAA,GAAQ,iBACAx6B,EAAY,CACjBnP,GAAIA,EACJmW,uBAAwBA,EACxB3O,KAAMA,EACN8P,SAAUA,EACVhD,OAAQ,UAAGtU,EAAE,SACbI,KAAM6I,EACN5K,MAAOA,KAInB,QACI,OACI,gBAACmZ,EAAA,GAAS,iBACFrI,EAAI,CACRnP,GAAIA,EACJmW,uBAAwBA,EACxB3O,KAAMA,EACN8P,SAAUA,EACV0J,YAAaA,EACb1M,OAAQ,UAAGtU,EAAE,YACTiJ,IAAc4/B,EAAA,EAAqB5zB,SAAW,WAAa,QAE/D7U,KAAM6I,EACN5K,MAAOA,KAI3B,K,0BC7HA,SAAe,IAAA4H,OAlD4D,SAAC,G,IACxEqO,EAAM,SACNs1B,EAAa,gBACbC,EAAc,iBAERC,GAAuB,IAAAv6B,cACzB,SAACyC,GACGA,EAAMqF,iBACNuyB,GACJ,GACA,CAACA,IAGCG,GAAwB,IAAAx6B,cAC1B,SAACyC,GACGA,EAAMqF,iBACNwyB,GACJ,GACA,CAACA,IAGL,OACI,sBAAIxjC,UAAU,2BACV,sBAAIA,UAAU,0BACV,gBAAC2K,EAAA,EAAgB,CAAChR,GAAG,oBAGzB,sBAAIqG,UAAU,0BACV,iCACe,UAAGiO,EAAM,uBACpB/Q,KAAK,IACLgL,QAASu7B,GAET,gBAAC94B,EAAA,EAAgB,CAAChR,GAAG,yBAI7B,sBAAIqG,UAAU,0BACV,iCACe,UAAGiO,EAAM,wBACpB/Q,KAAK,IACLgL,QAASw7B,GAET,gBAAC/4B,EAAA,EAAgB,CAAChR,GAAG,0BAKzC,ICtCA,IAAMgqC,EAAyE,SAAC,G,IAC5E,IAAApxB,KAAQtU,EAAM,SAAE0wB,EAAM,SACtBh1B,EAAE,KACF0H,EAAK,QACLF,EAAI,OACJ,IAAA8P,SAAAA,OAAQ,IAAG,IAAA9I,KAAI,EACfgB,EAAO,UACP9K,EAAI,OACJulC,EAAM,SAEAC,GAAkB,IAAA36B,cAAY,WAChC,IAAM46B,GAA0B,IAAArC,OAAMxjC,EAAQkD,IAAS,IAEvD,IAAA4iC,YACI56B,EAAQlD,KAAI,SAAC,GAAc,OAAP,OAAO,IAC3B69B,GACFrnC,SAAQ,SAACunC,GAAQ,OAAA3lC,EAAK2lC,EAAL,IAEnB/yB,GAAS,IAAAwwB,OAAMxjC,EAAQkD,GAC3B,GAAG,CAACA,EAAM8P,EAAU9H,EAAS9K,EAAMJ,IAE7BgmC,GAAmB,IAAA/6B,cAAY,aACD,IAAAu4B,OAAMxjC,EAAQkD,IAAS,IAEzC1E,SAAQ,WAAM,OAAAmnC,EAAO,EAAP,IAE5B3yB,GAAS,IAAAwwB,OAAMxjC,EAAQkD,GAC3B,GAAG,CAACA,EAAM8P,EAAU2yB,EAAQ3lC,IAEtBimC,GAAoB,IAAAh7B,cACtB,SAACyC,GACG,IAAMm4B,GAA0B,IAAArC,OAAMxjC,EAAQkD,IAAS,GACjD,EAAqBwK,EAAMoM,OAAzB/f,EAAK,QAAS,UAGlBqG,EAAKrG,GAEL4rC,EAAOE,EAAcz/B,QAAQrM,IAGjCiZ,GAAS,IAAAwwB,OAAMxjC,EAAQkD,GAC3B,GACA,CAACA,EAAM8P,EAAU5S,EAAMulC,EAAQ3lC,IAGnC,OACI,gBAACkmC,EAAA,EAAkB,CAAC3C,UAAU,IAAAC,OAAM9S,EAAQxtB,KAAS,IAAAsgC,OAAM9S,EAAQxtB,GAAMmD,QACpEjD,EAEA8H,EAAQ7E,OAAS,GACd,gBAAC,EAAoB,CACjBi/B,cAAeM,EACfL,eAAgBS,EAChBh2B,OAAQtU,IAIhB,gBAAC,EAAY,CACTiJ,UAAW4/B,EAAA,EAAqBn/B,SAChC1J,GAAIA,EACJwH,KAAMA,EACN8P,SAAUizB,EACV/6B,QAASA,EACTnR,OAAO,IAAAypC,OAAMxjC,EAAQkD,IAAS,KAGlC,gBAACijC,EAAA,EAAc,CACXlC,QAAS,UAAGvoC,QAAAA,EAAMwH,EAAI,wBACtBA,KAAMA,EACN8M,OAAQ,WAAG,IAAAkpB,WAAUh2B,GAAK,0BAI1C,EA0BA,SAAe,IAAAvB,OAxBgE,SAAC,G,IAC5EjG,EAAE,KACF0H,EAAK,QACLF,EAAI,OACJ8P,EAAQ,WACR9H,EAAO,UAED4M,GAAc,IAAA7M,cAChB,SAACm7B,GAAuC,OACpC,gBAACV,GAAsB,eACnBhqC,GAAIA,EACJ0H,MAAOA,EACPF,KAAMA,EACN8P,SAAUA,EACV9H,QAASA,IACL,IAAAm7B,MAAKD,EAAa,CAAC,OAAQ,MAAO,OAAQ,YAPd,GAUxC,CAAC1qC,EAAI0H,EAAOF,EAAM8P,EAAU9H,IAGhC,OAAO,gBAAC,EAAAo7B,WAAU,CAACpjC,KAAMA,EAAMkE,OAAQ0Q,GAC3C,I,eCqCA,SAAe,IAAAnW,OA7HoD,SAAC,G,IAChE,IAAA2C,MACIK,EAAS,YACT7I,EAAI,OACJyqC,EAAM,SACNrjC,EAAI,OACGsjC,EAAU,QACjBrjC,EAAQ,WACR+H,EAAO,UACP3H,EAAG,MACHS,EAAG,MACHX,EAAS,YAEbuP,EAAe,kBACfI,EAAQ,WACR0J,EAAW,cACX+pB,EAAO,UACP/zB,EAAY,eACZtP,EAAK,QACLuP,EAAU,aACVd,EAAsB,yBAEhB60B,EAAeD,GAAWvjC,EAC1BwB,EAAYkO,EAAkB,UAAGA,EAAe,YAAI1P,GAASA,EAC7DyjC,EAAoC7mC,QACtC+R,KACK,IAAAlF,UAAS,CAAC,OAAQ,WAAY,WAAY,OAAQ,aAAchI,KAC5DA,IAEPiiC,GAAiB,IAAAjvC,UACnB,WAAM,OACF,gBAAC6e,EAAA,EAAK,CACFC,QAASiwB,EACThrC,GAAI,UAAGgrC,EAAY,UACnB70B,uBAAwB80B,GAEvBvjC,GAASojC,GACRrjC,GACE,gCACK,IACD,yBAAOpB,UAAU,sCACb,gBAAC2K,EAAA,EAAgB,CAAChR,GAAG,2BAXnC,GAiBN,CAACgrC,EAAcF,EAAYrjC,EAAUwjC,EAAmCvjC,IAGtEyjC,GAAuB,IAAAlvC,UAAQ,WACjC,MAAkB,SAAdgN,EACa,YAAT7I,EACOyoC,EAAA,EAAqBuC,QAG5B,IAAAn6B,UAASzJ,EAAM,WAAY,IAAAyJ,UAASzJ,EAAM,OACnCqhC,EAAA,EAAqBwC,UAGzBR,EAAShC,EAAA,EAAqB5zB,SAAW4zB,EAAA,EAAqBjiB,KAGlE3d,CACX,GAAG,CAACA,EAAW7I,EAAMyqC,EAAQrjC,IAEvB+P,GAAc,IAAAhI,cAChB,SAAC,G,IAAE3G,EAAK,QAA2B,OAC/B,gBAAC,GAAY,iBACLA,EAAK,mBACQ,UAAGoiC,EAAY,kBAAUA,EAAY,wBACtDvzB,aAAcT,EACd/N,UAAWkiC,EACXnrC,GAAIgrC,EACJ70B,uBAAwB80B,EACxBpjC,IAAKA,EACLF,UAAWA,QAAalM,EACxB6M,IAAKA,EACLkH,QAASA,GAAWA,EAAQiH,MAC5BuK,YAAaA,GAAgBxR,GAAWA,EAAQ87B,YAChDC,KAAM/7B,GAAYA,EAAgB+7B,OAbP,GAgBnC,CACIP,EACAnjC,EACAF,EACAW,EACAkH,EACAwR,EACAmqB,EACAn0B,IAIR,OACI,uBACI3Q,UAAW,IACP,qBACA,CAAE,sBAAuB4kC,GACzBh0B,IAGHhO,IAAc4/B,EAAA,EAAqBn/B,SAChC,gBAAC,EAAsB,CACnB1J,GAAIgrC,EACJtjC,MAAOwjC,EACP1jC,KAAMwB,EACNsO,SAAUA,EACV9H,QAAUA,GAAWA,EAAQiH,OAAU,KAG3C,gBAACkB,EAAA,EAAS,CACN3X,GAAIgrC,EACJpzB,MAAOL,EACPpB,uBAAwB80B,EACxBvjC,MAAOwjC,EACP1jC,KAAMwB,EACNsO,SAAUA,IAK9B,G,kBC1JA,IAAKuxB,E,iBAAL,SAAKA,GACD,kBACA,sBACA,kBACA,sBACA,sBACA,wBACA,cACA,gBACA,aACH,CAVD,CAAKA,IAAAA,EAAoB,KAYzB,S,gFCeA,SAlBiB,IAAAL,aACb,SACI,EACAre,GADE,IAAA7X,EAAmB,sBAAEvW,EAAQ,WAAEsK,EAAS,YAAEiW,EAAM,SAAEhI,EAAM,SAAKnF,GAAI,cAAnE,kEAEC,OACD,6CACQA,EAAI,CACR9I,UAAWA,GAAa,IAAW,gBAAiBiM,GAAoB,YAC7DgC,EACX6V,IAAKA,IAEJ7N,EAED,uBAAKjW,UAAU,aAAatK,G,0GCsDxC,SAAe,IAAAkK,OAjE4B,SAAC,GAAE,IAAAI,EAAS,YAAEiO,EAAM,SAAKnF,GAAI,cAA5B,wBAClCgb,GAAM,IAAAqhB,QAAO,CAAEniB,cAAc,IAAAC,eAE7BmiB,EAAe,W,QACT/f,EAAYvB,EAAIuB,QAAQrC,aAAY,QAE5C,GAAKqC,EAAL,CAIA,IAMMggB,EAAmBhgB,EAAQlqB,cANL,CACxB,2BACA,8BACA,6BAG4EqJ,KAAK,OAErF,GAAI6gC,EAAkB,CAClBA,EAAiBngB,MAAM,CAAEogB,eAAe,IAExC,IACiC,QAA7B,EAAAD,EAAiBE,oBAAY,SAAEC,eAAe,CAC1CC,SAAU,SACVC,MAAO,SACPC,OAAQ,UAEhB,CAAE,SAC+B,QAA7B,EAAAN,EAAiBE,oBAAY,SAAEC,gBACnC,CACJ,CAtBA,CAuBJ,EAEMI,GAAsB,IAAA18B,cACxB,IAAA28B,aAAW,SAACC,GACR,OAAO,WACHA,GAAa,GAGb7gC,YAAW,WAAM,OAAAmgC,GAAA,GACrB,CACJ,IACA,CAACA,IAGCrhB,GAAgB,IAAA7a,cAClB,IAAA28B,aAAW,SAAC,G,IAAEC,EAAY,eACtB,OACI,uBAAKhiB,IAAKA,EAAIuB,QAAQrC,cAClB,gBAAC,EAAAzS,MAAU,iBACHzH,EAAI,CACR9I,UAAWA,EAAS,YACTiO,EACX83B,YAAU,EACVC,gBAAiBJ,EAAoBE,MAIrD,KAAE,oBACD9lC,EAAW4lC,EAAqB33B,IAAW,IAAAhQ,QAAO6K,IAAK,IAG5D,OAAO,gBAAC,KAAY,KAAEib,EAC1B,G,8FCHA,SAAe,IAAAnkB,OAnDsC,SAAC,G,IAClDqM,EAAmB,sBACnBoF,EAAY,eACZhQ,EAAK,QACL4P,EAAQ,WACRkB,EAAM,SACNZ,EAAK,QACLpQ,EAAI,OACJxH,EAAE,KACFmW,EAAsB,yBAEhBiG,GAAc,IAAA7M,cAChB,SAACnE,GAAU,OACP,gCACK+K,GAA0ByB,EAAMxM,GAEhC1D,IAA2B,mBAAVA,EAAuBA,EAAMF,GAAQE,GACtDgQ,IAAiBhQ,GACd,gBAAC,IAAK,CACFqT,QAASvT,EACTxH,GAAI,UAAGA,QAAAA,EAAMwH,EAAI,UACjB2O,uBAAwBA,GAEvBuB,IAIPvB,GAA0ByB,EAAMxM,GAElC,gBAAC,IAAc,CACXm9B,QAAS,UAAGvoC,QAAAA,EAAMwH,EAAI,wBACtBA,KAAMA,EACN8M,OAAQ,WAAG,IAAAkpB,WAAUh2B,GAAK,0BAG7BgR,EAvBE,GA0BX,CAAC9Q,EAAOgQ,EAAc1X,EAAI4X,EAAOpQ,EAAMgR,EAAQrC,IAGnD,OACI,gBAAC,IAAc,CACX7D,oBAAqBA,EACrB9K,KAAMA,EACN8P,SAAUA,EACV5L,OAAQ0Q,GAGpB,G,+EChCA,SAAe,IAAAnW,OAxBwD,SAAC,G,IACpEqM,EAAmB,sBACnBvW,EAAQ,WACRsK,EAAS,YACTwhC,EAAQ,WACRvzB,EAAM,SACJ,OACF,gBAAC,KAAYg4B,SAAQ,MAChB,SAAC,G,IAAEC,EAAW,cAAO,OAClB,uBACIlmC,UACIA,GACA,IAAW,aAAciM,EAAqB,CAC1C,oBAAqBu1B,GAAY0E,IACnC,YAEKj4B,GAEVvY,EAVa,GAFxB,G,uECqBN,SAAe,IAAAkK,OA7BgD,SAAC,G,IAAEuB,EAAI,OAAE8M,EAAM,SAAEi0B,EAAO,UAC7EiE,GAAgB,IAAAj9B,cAClB,SAACpF,GAAoB,OACjB,sBAAI9D,UAAU,oBAAmB,YAAYiO,GACzC,sBAAIjO,UAAU,oBACV,qCACc,SACVA,UAAU,qBACV0U,QAASvT,EACTxH,GAAIuoC,EACJ7rB,KAAK,SAEJvS,IAVI,GAerB,CAACo+B,EAAS/gC,EAAM8M,IAGpB,OACI,gBAAC,KAAYg4B,SAAQ,MAChB,SAAC,GACE,OADW,eACI,gBAAC,EAAAG,aAAY,CAACjlC,KAAMA,EAAMkE,OAAQ8gC,GAAjD,GAIhB,G,2FCJA,SAzBc,IAAAhE,aACV,SACI,EACAre,GADE,IAAA9jB,EAAS,YAAEiO,EAAM,SAAE0M,EAAW,cAAExZ,EAAI,OAAE2O,EAAsB,yBAAKhH,GAAI,cAAvE,sEAKA,OACI,0CAEWA,EAAI,CACP9I,UAAW,IAAWA,EAAW,CAC7B,iBACI8P,KAA2B,IAAAlF,UARP,CAAC,eAAgB,kBAQgCzJ,KAE7EA,KAAI,cAEG8M,EACX0M,YAAa7K,EAAyB,IAAM6K,EAC5CmJ,IAAKA,IAGjB,G,gFCAJ,QAtB6C,SAAC,GAC1C,IAAApuB,EAAQ,WACRsK,EAAS,YACTmW,EAAM,SACNlI,EAAM,SACN6B,EAAsB,yBACnBhH,GAAI,cANmC,qEAOxC,OACF,0CACSA,EAAI,CACT9I,UAAY,IACR,CAAE,iBAAkB8P,GACpB9P,GAAa,aACb,CAAE,YAAamW,GACf,gCACH,YACWlI,IAEVvY,E,iFCCV,QApB+C,SAAC,GAC5C,IAAAA,EAAQ,WACRsK,EAAS,YACTmW,EAAM,SACNlI,EAAM,SACHnF,GAAI,cALqC,4CAM1C,OACF,2CACQA,EAAI,CACR9I,UAAW,IACPA,GAAa,cACb,CAAE,YAAamW,GACf,CAAE,sCAAuCA,IAC5C,YACUlI,IAEVvY,E,iFCST,SAxBiB,IAAAysC,aACb,SACI,EACAre,GADE,IAAA7X,EAAmB,sBAAEgC,EAAM,SAAEjO,EAAS,YAAE8P,EAAsB,yBAAKhH,GAAI,cAAzE,uEAGA,OACI,6CACQA,EAAI,CACR9I,UACIA,GACA,IACI,CAAE,oBAAqB8P,GACvB,aACA,+BACA7D,GACH,YAEMgC,EACX6V,IAAKA,IAGjB,G,2FCSJ,SA3BkB,IAAAqe,aACd,SACI,EAOAre,GANI,IAAA7X,EAAmB,sBACnB6D,EAAsB,yBACtBu2B,EAAa,gBACb,IAAAtsC,KAAAA,OAAI,IAAG,SAAM,EACV+O,GAAI,cALX,yEAQC,OACD,gBAAC,KAAK,iBACEA,EAAI,CACR9I,UAAW,IACP,aACA,+BACA,CAAE,oBAAqBqmC,GACvB,CAAE,sCAAuCA,GACzCp6B,GAEJ6D,uBAAwBA,EACxBgU,IAAKA,EACL/pB,KAAMA,I,oDCflB,SAAe,E,SAAA,IAfqB,WAAM,OACtC,yCACoB,oBAAmB,YACzB,YACVyS,OAAO,KACP6J,KAAK,MACLG,QAAQ,YACRuJ,MAAM,KACNtJ,MAAM,8BAEN,yBAAO9c,GAAG,qBAAmB,QAC7B,wBAAM+c,EAAE,mCAAmC1Q,KAAK,UAAUrM,GAAG,SAX3B,G,kDCM1C,SAAe,E,SAAA,IAN4B,WAAM,OAC7C,uBAAK6S,OAAO,KAAKgK,QAAQ,YAAYuJ,MAAM,KAAKtJ,MAAM,8BAClD,wBAAMC,EAAE,iDAFiC,G,kDCMjD,SAAe,E,SAAA,IANsB,WAAM,OACvC,uBAAKlK,OAAO,KAAKgK,QAAQ,YAAYuJ,MAAM,KAAKtJ,MAAM,8BAClD,wBAAMC,EAAE,0GAF2B,G,kDCM3C,SAAe,E,SAAA,IANsB,WAAM,OACvC,uBAAKlK,OAAO,KAAKgK,QAAQ,YAAYuJ,MAAM,KAAKtJ,MAAM,8BAClD,wBAAMC,EAAE,qGAF2B,G,+CCD/B4vB,E,yCAaG,SAAS/vB,EACpB0a,GAEA,OAAO,IAAArxB,OAAK,SAAC,GAAE,IAAAqM,EAAmB,sBAAE8B,EAAI,OAAEE,EAAM,SAAKnF,GAAI,cAA5C,yCAAmD,OAC5D,uBACI9I,UAAW,IACP,OACAiM,EACA8B,IAASu4B,EAAS/T,MAAQ,cAAgB,KAC1CxkB,IAASu4B,EAASjF,MAAQ,cAAgB,KAC1CtzB,IAASu4B,EAASC,OAAS,eAAiB,MAC/C,YACUt4B,GAEX,gBAACgjB,GAAiB,iBAAMnoB,I,GAGpC,EA9BA,SAAYw9B,GACR,oBACA,gBACA,kBACA,eACH,CALD,CAAYA,IAAAA,EAAQ,I,kFCUdE,EAAc,SAACj8B,GAAiB,MAAe,mBAAfA,EAAMpJ,IAAN,EAetC,QAb6D,SAAC,G,IAAE+sB,EAAe,kBAAEx4B,EAAQ,WAAO,OAC5F,gBAAC86B,EAAA,EAAa,CACViW,SACI,uBAAKzmC,UAAU,uBACX,gBAAC2K,EAAA,EAAgB,CAAChR,GAAG,mCAG7BqH,OAAQwlC,GAER,gBAAC,EAAAE,SAAQ,CAACD,SAAUvY,GAAmB,gBAAC9b,EAAA,EAAc,CAAC3M,WAAS,KAAM/P,GATkB,C,6DC0BhG,QA/B+D,SAAC,G,IAC5DA,EAAQ,WACR8P,EAAsB,yBACtBmhC,EAAyB,4BACzBlhC,EAAS,YAET,OAAID,GAA0BmhC,EAEtB,gCACI,gBAAC,IAAc,CAAClhC,UAAWA,IAC1BkhC,GAA6BlhC,EAAY,KACtC,uBACIzK,MAAO,CACH0f,QAASlV,GAA0BC,EAAY,YAASrQ,IAG3DM,IAQjB,uBAAKsK,UAAU,4BACVtK,EACA+P,GAAa,uBAAKzF,UAAU,6CAGzC,C,kDCrBA,SAAe,IAAAJ,OAZgD,SAAC,GAC5D,OADuE,YAMnE,uBAAKI,UAAU,0CAA0ChF,MAAO,CAAEwR,OAAQ,MACtE,uBAAKxM,UAAU,8CALZ,IAQf,G,qICwFA,QAhF6C,SAAC,GAC1C,IAAAtK,EAAQ,WACR,IAAAkxC,iBAAAA,OAAgB,IAAG,UAAO,EAC1Bz0B,EAAM,SACNY,EAAM,SACN8zB,EAAyB,4BACzBh0B,EAAuB,0BACvBC,EAAwB,2BACxB,IAAAlB,eAAAA,OAAc,IAAG,IAAAzJ,KAAI,EACrB,IAAA8K,sBAAAA,OAAqB,IAAG,GAAK,EAC1BnK,GAAI,cAVmC,6KAYpCg+B,GAAc,IAAA59B,cAChB,SAACyC,GACGiG,EAAejG,EACnB,GACA,CAACiG,IAGL,OACI,gBAAC,KAAU,iBACH9I,EAAI,CACRi+B,aAAa,EACbC,kBAAkB,kBAClBhnC,UAAW,CACPinC,KAAM,IACF,yCACAn0B,GAEJo0B,UAAW,mBACXC,YAAa,sBAEjBC,eAAgB,IAChBx1B,eAAgBA,EAChBy1B,iBAAkB,CACdJ,KAAM,eACNC,UAAW,0BACXC,YAAa,6BAEjBG,kBAAkB,EAClBC,2BAA2B,IAE3B,uBAAKvnC,UAAW,IAAW,eAAgB6mC,IACtC9zB,EAEAE,GAEG,qBACIjT,UAAU,cAAa,YACb,qBACV9C,KAAK,IACLgL,SAAS,OAAe4+B,IAEvBF,GAAoB,wBAAM5mC,UAAU,aAAa4mC,GAElD,gBAAC,IAAS,QAKtB,uBACI5mC,UAAW,IAAW,aAAc6S,GAAwB,YAClD,cAETnd,GAOJqI,QAAQoU,IACL,uBAAKnS,UAAU,eAAc,YAAW,gBACnCmS,GAKrB,C,qEClFA,QAZyD,SAAC,G,IAAEzc,EAAQ,WAAEuW,EAAmB,sBAAO,OAC5F,sBACIjM,UAAW,IACP,wDACAiM,GACH,YACS,iBAETvW,EARuF,C,iFCH1F8xC,EAAU,CACZpJ,MAAO,QACPqJ,OAAQ,iCAA0B,IAAgB,QAStD,SAAe,IAAA7nC,OAN4E,SAAC,G,IACxFlK,EAAQ,WAER,OAAO,gBAAC,IAAK,CAAC8xC,QAASA,GAAU9xC,EACrC,ICEA,SAAe,IAAAkK,OAZwE,SAAC,G,IACpFlK,EAAQ,WAER,OACI,gBAAC,EAAU,MACN,SAAC+L,GACE,OAAO/L,EAAS+L,EAAQgmC,OAC5B,GAGZ,G,2CCbO,IAAMC,EAAmB,IACnBC,EAAyB,G,kDCEvB,SAAS9iB,IAGpB,OAFQre,OAAOohC,WAAW,sBAAe,IAAgB,QAE5CnmC,OACjB,C,0DCGA,YACI,WAAYsD,GACR,QAAK,UAACA,IAAM,K,OAeR,EAAA8R,OAAiC,SAAClL,GAC9B,IAAA8F,EAAW,EAAK5X,MAAK,OAE7B8R,EAAMqF,iBAEN,EAAK9L,SAAS,CAAEuM,QAASA,GAC7B,EAnBI,EAAK5X,MAAQ,CAAE4X,SAAU1M,EAAM6R,e,CACnC,CAmBJ,OAxBoC,oBAOhC,YAAAvR,OAAA,WAII,OAAO3P,EAHcwG,KAAK6I,MAAK,UAGf,CACZ0M,OAHevV,KAAKrC,MAAK,OAIzBgd,OAAQ3a,KAAK2a,QAErB,EASJ,EAxBA,C,SAAoC/P,U,6DCTrB,SAAS+S,EACpBguB,EACAnuB,GAEA,IAAMouB,EAActhC,OAAOyf,iBAAiB4hB,GAE5C,OAAOnuB,EAAWzY,QACd,SAACsG,EAAQwgC,G,MAAiB,OAAC,gCACpBxgC,KAAM,MACRwgC,GAAeD,EAAYE,kBAAiB,IAAA7Q,WAAU4Q,IAAc,GAF/C,GAI1B,CAAC,EAET,C,kBCfe,SAASE,EAAY1nB,GAChC,IAAM2nB,EAAMhtC,SAAS6B,cAAc,OAEnCmrC,EAAIC,UAAY5nB,EAEhB,IAAM6nB,EAASF,EAAI/sC,cAAc,KAEjC,IAAKitC,EACD,MAAO,GAGX,IAAMC,EAAiBH,EAAIC,UAAU5kC,MAAM6kC,EAAOE,WAElD,MAAO,CAACD,EAAe,GAAID,EAAO7nB,KAAM8nB,EAAe,GAC3D,C,kCCZe,SAASr3B,EAGtBtF,GACE,OAAO,SAACC,GACJA,EAAMqF,iBAEFtF,GACAA,EAAGC,EAEX,CACJ,C,iECmCA,QAjCA,yB,qDAMI,EAAA9R,MAA4B,CAAC,E,CAyBjC,QA/B4B,oBACjB,EAAA0uC,yBAAP,SAAgCh+B,GAC5B,MAAO,CAAEA,MAAK,EAClB,EAKA,YAAAi+B,kBAAA,SAAkBj+B,GACR,MAAkCrO,KAAK6I,MAArC,IAAA/D,OAAAA,OAAM,IAAG,aAAM,UAAI,EAAEyvB,EAAM,SAEnC,IAAKzvB,EAAOuJ,GACR,MAAMA,EAGNkmB,GACAA,EAAOhzB,IAAI8M,EAEnB,EAEA,YAAAlF,OAAA,WACU,MAA8CnJ,KAAK6I,MAAjDrP,EAAQ,WAAE+wC,EAAQ,WAAE,IAAAzlC,OAAAA,OAAM,IAAG,aAAM,UAAI,EAEvCuJ,EAAUrO,KAAKrC,MAAK,MAE5B,OAAI0Q,GAASvJ,EAAOuJ,GACTk8B,GAAY,KAGhB/wC,CACX,EACJ,EA/BA,C,SAA4BoR,U,iBCoB5B,IAAY2hC,E,iBAAZ,SAAYA,GACR,cACA,oBACA,gBACA,eACH,CALD,CAAYA,IAAAA,EAAc,I,kBC7B1B,IAAKC,E,iBAAL,SAAKA,GACD,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,iBACA,mBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,iBACA,iBACA,iBACA,kBACA,iBACH,CAzBD,CAAKA,IAAAA,EAAmB,KA4CxB,QAb2C,SAACxpB,GAExB,IAAA4S,EAEZ5S,EAAI,cADJypB,EACAzpB,EAAI,WAER,SAV0B,SAAC4S,GAC3B,OAAOA,KAAQ4W,CACnB,CAQQE,CAAsB9W,IAAS6W,GAAcD,EAAoB5W,GAKzE,C,wECtCe,SAASntB,EAIpBmsB,EACA3nB,GAEA,OAAO,SAA8B8nB,GAC3B,MAAqD9nB,GAAW,CAAC,EAA/D,IAAAvF,kBAAAA,OAAiB,IAAG,KAAE,EAAE,IAAA4yB,UAAAA,OAAS,IAAG,aAAM,UAAI,EAEhDtF,GAAqD,IAAAtxB,OAAK,SAACmF,GAAU,OACvE,gBAACksB,GAAiB,iBAAKlsB,GADgD,IAIrEosB,EAAqB,SAACpsB,GACxB,IAAMjG,GAAU,IAAA5F,YAAW43B,GACrB+X,GAAgB,IAAA3R,QAAOp4B,GAAS,SAAC9G,EAAOoO,GAC1C,OAAAowB,EAAUx+B,EAAOoO,EAAjB,IAGJ,IAAI,IAAA9D,SAAQumC,GACR,OAAO,KAGX,IAAMtX,GAAc,gCAAKsX,GAAkB9jC,GAE3C,OAAO,gBAACmsB,GAAuB,iBAAKK,GACxC,EAQA,OANI3tB,IACAutB,EAAmBK,YAAc,UAAG5tB,EAAiB,YACjDqtB,EAAkBO,aAAeP,EAAkB9vB,KAAI,MAIxDgwB,CACX,CACJ,C,0DCpCMnoB,GAAgB,IAAA7T,oBAA6CC,GAEnE,UAEO,SAAS0zC,IACZ,IAAMhqC,GAAU,IAAA5F,YAAW8P,GAE3B,IAAKlK,EACD,MAAM,IAAI1F,MAAM,yDAGpB,OAAO0F,CACX,C,yGCwCA,QAhDA,yB,qDACI,EAAAjF,MAAuC,CAAC,EAEhC,EAAAkvC,iBAAkB,SAGlB,EAAAC,iBAAkB,IAAAnD,aAAW,SAAC/sC,GAClC,MAAO,CACH49B,SAAU59B,GAAS,IAAAmwC,uBAAsBnwC,QAAU1D,EACnD+N,KAAMrK,EACA,CACIupC,YAAavpC,EAAOowC,sBAExB9zC,EACNyM,SAAU,EAAKknC,gBAEvB,I,CA8BJ,QA9C6B,oBAkBzB,YAAAlkC,kBAAA,sBACYpP,EAAoByG,KAAK6I,MAAK,gBAEtC7I,KAAKitC,YAAc1zC,EAAgBO,WAC/B,SAAC,G,IAAE0E,EAAI,OACH,EAAKwK,SAAS,CAAEpM,OAAQ4B,EAAK/B,aACjC,IACA,SAAC,GAAa,OAAP,OAAYA,WAAL,GAEtB,EAEA,YAAAwM,qBAAA,WACQjJ,KAAKitC,cACLjtC,KAAKitC,cACLjtC,KAAKitC,iBAAc/zC,EAE3B,EAEA,YAAAiQ,OAAA,WACY,IAAA3P,EAAawG,KAAK6I,MAAK,SACvBjM,EAAWoD,KAAKrC,MAAK,OAE7B,OACI,gBAAC,IAAc9B,SAAQ,CAACC,MAAOkE,KAAK8sC,gBAAgBlwC,IAC/CpD,EAGb,EACJ,EA9CA,CAA6B,EAAAoR,U,iFCO7B,QAZsE,SAAC,G,IAAEpM,EAAI,OAAEf,EAAE,KACrEkI,GAAa,SAAW,SAEhC,OACI,wBACIoe,wBAAyB,CACrBC,OAAQ,aAAmBre,EAASf,UAAUnH,EAAIe,GAAO,CAAE0uC,SAAU,CAAC,cAItF,C,mFCUA,QAlB+D,SAAC,G,IAAE1uC,EAAI,OAAEf,EAAE,KAAEuO,EAAO,UAAE+F,EAAM,SAEjFo7B,GADe,SAAW,SACEvoC,UAAUnH,EAAIe,GAC1C4uC,GAAe,OAAYD,GAEjC,OAAOC,EAAahlC,OAChB,gCACKglC,EAAa,GACd,iCAAcr7B,EAAQ/Q,KAAK,IAAIgL,SAAS,OAAeA,IAClDohC,EAAa,IAEjBA,EAAa,IAGlB,gCAAGD,EAEX,C,6DCbA,QANmE,SAAC,G,IAAE3uC,EAAI,OAAEf,EAAE,KAClEkI,GAAa,SAAW,SAEhC,OAAO,gCAAGA,EAASf,UAAUnH,EAAIe,GACrC,C,qECXa6uC,EAAkB,K,qn0CCE/B,IAAIR,EAEW,SAASxmB,IAQpB,OAPAwmB,EACIA,QAAAA,GACA,IAAAS,uBAAsB,CAClBC,eAAgBF,EAChBG,qBAAsB,GAIlC,CAIO,SAASC,EAA0B7wC,GAStC,OARAiwC,GAAkB,IAAAS,wBAAsB,gCACjC1wC,GAAM,CACT8wC,cAAe9wC,EAAO+2B,OACtBga,oBAAqB/wC,EAAO+wC,oBAC5BJ,eAAgBF,EAChBG,qBAAsB,IAI9B,C,6DCNA,QAfwB,SACpB3qC,EACAQ,GAEA,IAAMuqC,GAAU,IAAA/mC,MAAKxD,EAAW,CAAEuyB,KAAM/yB,EAAQW,cAC1CqqC,GAAUD,IAAW,IAAAxnC,SAAQwnC,EAAQE,cAAgB,GAAKF,EAAQE,aAClEnwC,GAAQ,IAAAkJ,MAAKgnC,EAAQ,CAAEjY,KAAM/yB,EAAQiD,sBAE3C,OAAO,gCACAjD,GAAO,CACV2B,iBAAkBopC,EAAUA,EAAQ3oC,KAAOpC,EAAQ+qC,QACnDtpC,kBAAmB3G,EAAQA,EAAMsH,KAAOpC,EAAQgD,iBAExD,C,6DCNA,SAL2C,OAAgB,IAAe,CACtE6B,kBAAmB,WACnB4yB,UAAW,SAACx+B,EAAOoO,GAAQ,MAAQ,SAARA,KAAoBpO,CAApB,G,6DCG/B,SALmD,OAAgB,IAAe,CAC9E4L,kBAAmB,eACnB4yB,UAAW,SAACx+B,EAAOoO,GAAQ,MAAQ,aAARA,KAAwBpO,CAAxB,G,kBCZ/B,IAAKmU,E,iBAAL,SAAKA,GACD,gBACA,oBACA,sCACA,sCACA,oBACA,kBACA,sBACA,wBACA,sBACA,4BACA,0BACA,kCACA,kBACA,cACA,wBACA,8BACA,kCACA,gDACA,8BACA,8DACA,0CACA,wEACA,oDACA,gDACA,sDACA,gDACA,qBACA,8BACA,4BACA,8CACA,sBACA,sBACA,kDACA,8BACA,gBACA,cACA,gBACA,kBACA,kBACA,0BACA,kBACA,oBACA,YACA,sCACA,cACA,gCACA,6BACA,kCACA,8CACA,wDACA,qEACA,4CACA,cACA,oBACA,oBACA,oBACA,cACA,kBACA,sBACA,oCACA,0CACA,sBACA,wBACA,kCACA,oDACA,YACA,+CACH,CApED,CAAKA,IAAAA,EAAe,KAsEpB,S,0DC9DM4kB,GAAkB,IAAA57B,oBAAgDC,GAEjE,SAAS60C,IACZ,IAAMnrC,GAAU,IAAA5F,YAAW63B,GAE3B,IAAKjyB,EACD,MAAM,IAAI1F,MAAM,6DAGpB,OAAO0F,CACX,CAEA,S,2FCNA,YAiBI,WAAYiG,GACR,QAAK,UAACA,IAAM,K,OAVR,EAAAikC,iBAAkB,IAAAnD,aACtB,SAACpwC,EAAkCiU,GAC/B,MAAO,CACHjU,gBAAe,EACfiU,cAAa,EAErB,IAMA,EAAK7P,MAAQ,CACT6P,cAAe3E,EAAMtP,gBAAgBgF,Y,CAE7C,CA2BJ,OAlD8C,oBAyB1C,YAAAoK,kBAAA,sBACYpP,EAAoByG,KAAK6I,MAAK,gBAEtC7I,KAAKitC,YAAc1zC,EAAgBO,WAAU,SAAC0T,GAC1C,SAAKxE,SAAS,CAAEwE,cAAa,GAA7B,GAER,EAEA,YAAAvE,qBAAA,WACQjJ,KAAKitC,cACLjtC,KAAKitC,cACLjtC,KAAKitC,iBAAc/zC,EAE3B,EAEA,YAAAiQ,OAAA,WACU,MAAgCnJ,KAAK6I,MAAnCtP,EAAe,kBAAEC,EAAQ,WACzBgU,EAAkBxN,KAAKrC,MAAK,cAEpC,OACI,gBAAC,IAAgB9B,SAAQ,CAACC,MAAOkE,KAAK8sC,gBAAgBvzC,EAAiBiU,IAClEhU,EAGb,EACJ,EAlDA,CAA8C,EAAAoR,U,kDCD9C,SAAe,E,QAAA,IAT+B,WAAM,OAChD,uBAAK0P,QAAQ,aAAaC,MAAM,8BAC5B,wBACIC,EAAE,szLACF1Q,KAAK,YAJmC,ICQpD,QANqC,WAAM,OACvC,uBAAKhG,UAAU,6BAA4B,YAAW,wBAClD,gBAAC,EAAkB,MAFgB,C,kDCG3C,QAPkC,SAACzI,GAC/B,OACIA,IAAa,IAAgBuoC,WAC7BvoC,IAAa,IAAgBwoC,4BAErC,C,kDCEA,QAPuC,SAACxoC,GACpC,OACIA,IAAa,IAAgBqoC,2BAC7BroC,IAAa,IAAgBsoC,iCAErC,C,6DCAA,QAJ+B,SAACtoC,GAC5B,OAAO,OAA0BA,KAAa,OAA+BA,EACjF,C,iECoCA,QApCiC,W,MCQ7B0S,EDNM,GADoB,SAAa,cACyBvP,KAAxD/B,EAAS,YAAEojB,EAA0B,6BACvCmuB,GACS,QAAX,EAAAvxC,WAAW,eAAE2G,iBAAiB4M,6BAA8B,GAE1Di+B,GAA0B,OAAuBD,GAEjDpuB,EAA0BC,IAC1BquB,GCDNngC,EDCwD6R,KCMpD,wBAAyB7R,GAAY,cAAeA,GAAY,gBAAiBA,GDL/E6R,EACA,CAAC,EAEDuuB,EAEFvuB,aAAuB,EAAvBA,EAAyBwuB,oBAEvBhpB,EAA0B8oB,EAAuBppB,WAAa,GAWpE,MAAO,CACHmpB,wBAAuB,EACvB7oB,wBAAuB,EACvBipB,8BAXAjpB,EAAwBhd,OAAS,GAAK6lC,EAYtCK,qCATAlpB,EAAwBhd,OAAS,GACjC+lC,GACgC,aAAhCA,GACgC,iBAAhCA,EAQR,C,6DENA,QA7BqE,SAAC,G,IAClE30C,EAAQ,WACR+P,EAAS,YACTa,EAAkB,qBAEZR,EACF,uBAAK9F,UAAU,iBACX,uBAAKA,UAAU,yBACX,uBAAKA,UAAU,kFAEnB,uBAAKA,UAAU,yBACX,uBAAKA,UAAU,wBACX,uBAAKA,UAAU,sBACX,uBAAKA,UAAU,oBAEnB,uBAAKA,UAAU,sBACX,uBAAKA,UAAU,qBAGvB,uBAAKA,UAAU,sBACX,uBAAKA,UAAU,sBAM/B,OAAO,gBAAC,IAAe,CAAOtK,SAAQ,EAAE+P,UAAS,EAAEa,mBAAkB,EAAER,SAAQ,GACnF,C,gFCGA,QAxB4F,SAAC,GAQzF,I,IAPAmG,EAAmB,sBACnBvW,EAAQ,WACR,IAAA+P,UAAAA,OAAS,IAAG,GAAI,EAChB,IAAAy/B,KAAAA,OAAI,IAAG,IAAC,EAEFuF,EAAU,GAEPtkC,EAAI,EAAGA,EAAI++B,EAAM/+B,GAAK,EAC3BskC,EAAQpsC,KACJ,uBAAK2B,UAAU,qBAAqBoG,IAAK,iCAA0BD,IAC/D,uBAAKnG,UAAU,8BACf,uBAAKA,UAAU,mCAK3B,IAAM8F,EACF,uBAAK9F,UAAW,IAAWiM,EAAqB,uBAAwBw+B,GAG5E,OAAO,gBAAC,IAAe,CAAO/0C,SAAQ,EAAE+P,UAAS,EAAEK,SAAQ,GAC/D,C,kDCxBaO,EAA2D,SAAC,G,IACrE3Q,EAAQ,WACR,IAAA+P,UAAAA,OAAS,IAAG,GAAI,EAChB,IAAAa,mBAAAA,OAAkB,IAAG,GAAK,EAC1BR,EAAQ,WAEF4kC,EAAqBpkC,IAAuBb,EAElD,OACI,gCACKA,GAAaK,EACb/H,QAAQrI,IAAag1C,GAClB,uBACI1qC,UAAU,mBACVhF,MACIyK,EAAY,CAAE+E,SAAU,WAAYC,KAAM,KAAMC,IAAK,cAAYtV,GAGpEM,GAKrB,C,sECvBai1C,GAAc,IAAAx1C,eAA+B,CACtD+wC,aAAa,EACbJ,aAAc,EAAA39B,OAULyiC,GAAqD,IAAAhrC,OAC9D,SAAC,G,IAAElK,EAAQ,WAAE,IAAAm1C,mBAAAA,OAAkB,IAAG,GAAK,EAC7B,GAA8B,IAAAz/B,UAASy/B,GAAtC3E,EAAW,KAAEJ,EAAY,KAC1BgF,GAAe,IAAAl1C,UAAQ,WAAM,OAAGswC,YAAW,EAAEJ,aAAY,EAA5B,GAAiC,CAACI,IAErE,OACI,gBAACyE,EAAY5yC,SAAQ,CAACC,MAAO8yC,IACxB,IAAAC,YAAWr1C,GAAYA,EAAS,CAAEwwC,YAAW,EAAEJ,aAAY,IAAMpwC,EAG9E,IAGJ,S,sCC9BY4wC,E,yCAaG,SAAS/vB,EACpB0a,GAEA,OAAO,IAAArxB,OAAK,SAAC,GAAE,IAAAqM,EAAmB,sBAAE8B,EAAI,OAAEE,EAAM,SAAKnF,GAAI,cAA5C,yCAAmD,OAC5D,uBACI9I,UAAW,IACP,OACAiM,EACA8B,IAASu4B,EAAS/T,MAAQ,cAAgB,KAC1CxkB,IAASu4B,EAASjF,MAAQ,cAAgB,KAC1CtzB,IAASu4B,EAASC,OAAS,eAAiB,MAC/C,YACUt4B,GAEX,gBAACgjB,GAAiB,iBAAMnoB,I,GAGpC,EA9BA,SAAYw9B,GACR,oBACA,gBACA,kBACA,eACH,CALD,CAAYA,IAAAA,EAAQ,I","sources":["webpack://checkout/./packages/analytics/src/AnalyticsContext.ts","webpack://checkout/./packages/analytics/src/createAnalyticsService.ts","webpack://checkout/./packages/analytics/src/AnalyticsProvider.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionRegionContainer.ts","webpack://checkout/./packages/checkout-extension/src/Extension.tsx","webpack://checkout/./packages/checkout-extension/src/useExtensions.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionContext.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionReducer.ts","webpack://checkout/./packages/checkout-extension/src/handlers/createReloadCheckoutHandler.ts","webpack://checkout/./packages/checkout-extension/src/handlers/createSetIframeStyleHandler.ts","webpack://checkout/./packages/checkout-extension/src/handlers/createShowLoadingIndicatorHandler.ts","webpack://checkout/./packages/checkout-extension/src/handlers/createGetConsignmentHandler.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionService.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionProvider.tsx","webpack://checkout/./packages/core/src/app/address/AddressType.ts","webpack://checkout/./packages/core/src/app/address/StaticAddress.tsx","webpack://checkout/./packages/core/src/app/formFields/getFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/address/getAddressFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/address/isValidAddress.ts","webpack://checkout/./packages/core/src/app/address/isValidStaticAddress.tsx","webpack://checkout/./packages/core/src/app/address/mapAddressToFormValues.ts","webpack://checkout/./packages/core/src/app/analytics/withAnalytics.ts","webpack://checkout/./packages/core/src/app/checkout/NoopCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutSupport.ts","webpack://checkout/./packages/checkout-extension/src/withExtension.ts","webpack://checkout/./packages/core/src/app/cart/EmptyCartMessage.tsx","webpack://checkout/./packages/core/src/app/customer/CustomerViewType.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/WalletButtonContainerSkeleton.tsx","webpack://checkout/./packages/core/src/app/common/utility/is-apple-pay-window.ts","webpack://checkout/./packages/core/src/app/customer/getSupportedMethods.ts","webpack://checkout/./packages/payment-integration-api/src/isResolvableComponent.ts","webpack://checkout/./packages/core/src/app/customer/resolveCheckoutButton.ts","webpack://checkout/./packages/core/src/app/common/resolver/resolveComponent.ts","webpack://checkout/./packages/core/src/app/customer/CheckoutButton.tsx","webpack://checkout/./packages/core/src/app/checkout/navigateToOrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/ApplePayButton.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/PayPalCommerceButton.tsx","webpack://checkout/./packages/core/src/app/customer/WalletButtonV1Resolver.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonContainer.tsx","webpack://checkout/./packages/analytics/src/useAnalytics.tsx","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/BoltCheckoutSuggestion.tsx","webpack://checkout/./packages/dom-utils/src/stopPropagation.ts","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/CheckoutSuggestion.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/AmazonPayV2Button.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonList.tsx","webpack://checkout/./packages/core/src/app/customer/canSignOut.ts","webpack://checkout/./packages/core/src/app/customer/CustomerInfo.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/CustomerSkeleton.tsx","webpack://checkout/./packages/core/src/app/customer/validationPatterns.ts","webpack://checkout/./packages/core/src/app/customer/getEmailValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/getCreateCustomerValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/CreateAccountForm.tsx","webpack://checkout/./packages/core/src/app/customer/EmailField.tsx","webpack://checkout/./packages/core/src/app/customer/EmailLoginForm.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-fastlane-window.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/PayPalFastlaneWatermark.tsx","webpack://checkout/./packages/core/src/app/privacyPolicy/PrivacyPolicyField.tsx","webpack://checkout/./packages/core/src/app/privacyPolicy/getPrivacyPolicyValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/SubscribeField.tsx","webpack://checkout/./packages/core/src/app/customer/SubscribeSessionStorage.ts","webpack://checkout/./packages/core/src/app/customer/GuestForm.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconEye.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconEyeSlash.tsx","webpack://checkout/./packages/core/src/app/customer/PasswordField.tsx","webpack://checkout/./packages/core/src/app/customer/LoginForm.tsx","webpack://checkout/./packages/core/src/app/customer/mapErrorMessage.ts","webpack://checkout/./packages/core/src/app/customer/mapCreateAccountFromFormValues.ts","webpack://checkout/./packages/core/src/app/customer/StripeGuestForm.tsx","webpack://checkout/./packages/core/src/app/customer/Customer.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconTag.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBanner.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBannerList.tsx","webpack://checkout/./packages/core/src/app/shipping/isUsingMultiShipping.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-address.ts","webpack://checkout/./packages/core/src/app/shipping/StaticConsignment.tsx","webpack://checkout/./packages/core/src/app/shipping/StaticMultiConsignment.tsx","webpack://checkout/./packages/core/src/app/shipping/ShippingSummary.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionExpiredError.ts","webpack://checkout/./packages/core/src/app/ui/loading/LoadingNotification.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconCheck.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepHeader.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStep.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepType.ts","webpack://checkout/./packages/core/src/app/shipping/itemsRequireShipping.ts","webpack://checkout/./packages/core/src/app/checkout/getCheckoutStepStatuses.ts","webpack://checkout/./packages/core/src/app/checkout/Checkout.tsx","webpack://checkout/./packages/core/src/app/checkout/mapToCheckoutProps.ts","webpack://checkout/./packages/core/src/app/checkout/CheckoutApp.tsx","webpack://checkout/./packages/legacy-hoc/src/createMappableInjectHoc.tsx","webpack://checkout/./packages/core/src/app/checkout/withCheckout.tsx","webpack://checkout/./packages/core/src/app/common/error/CustomError.ts","webpack://checkout/./packages/core/src/app/common/error/ErrorCode.tsx","webpack://checkout/./packages/core/src/app/common/error/ErrorModal.tsx","webpack://checkout/./packages/core/src/app/common/error/isHtmlError.tsx","webpack://checkout/./packages/core/src/app/common/error/computeErrorCode.ts","webpack://checkout/./packages/core/src/app/common/error/createCustomErrorType.ts","webpack://checkout/./packages/core/src/app/common/error/ConsoleErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/NoopErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/SentryErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/createErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/isCustomError.ts","webpack://checkout/./packages/core/src/app/common/error/isErrorWithType.ts","webpack://checkout/./packages/core/src/app/common/error/isRequestError.ts","webpack://checkout/./packages/core/src/app/common/utility/emptyData.ts","webpack://checkout/./packages/core/src/app/common/utility/isBuyNowCart.ts","webpack://checkout/./packages/core/src/app/common/utility/isExperimentEnabled.ts","webpack://checkout/./packages/core/src/app/common/utility/isFloatingLabelEnabled.ts","webpack://checkout/./packages/core/src/app/common/utility/retry.ts","webpack://checkout/./packages/core/src/app/currency/ShopperCurrency.tsx","webpack://checkout/./packages/locale/src/withCurrency.tsx","webpack://checkout/./packages/core/src/app/customer/getPasswordRequirements.ts","webpack://checkout/./packages/core/src/app/common/dom/toCssRule.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStyleParser.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/common/dom/appendStylesheet.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/isEmbedded.ts","webpack://checkout/./packages/core/src/app/formFields/getCustomFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/formFields/mapCustomFormFieldsFromFormValues.ts","webpack://checkout/./packages/payment-integration-api/src/toResolvableComponent.tsx","webpack://checkout/./packages/checkout-button-integration/src/CheckoutButton.tsx","webpack://checkout/./packages/amazon-pay-v2-integration/src/AmazonPayV2Button.tsx","webpack://checkout/./packages/instrument-utils/src/guards/isHTMLElement/isHTMLElement.ts","webpack://checkout/./packages/payment-integration-api/src/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/payment-integration-api/src/setPrototypeOf.ts","webpack://checkout/./packages/payment-integration-api/src/errors/CustomError.ts","webpack://checkout/./packages/google-pay-integration/src/GooglePayButton.tsx","webpack://checkout/./packages/payment-integration-api/src/isEmbedded.ts","webpack://checkout/./packages/core/src/app/giftCertificate/isGiftCertificatePayment.ts","webpack://checkout/./packages/core/src/app/common/bundler/getCurrentScriptPath.ts","webpack://checkout/./packages/core/src/app/common/bundler/configurePublicPath.ts","webpack://checkout/./packages/core/src/app/checkout/renderCheckout.tsx","webpack://checkout/./packages/core/src/app/order/renderOrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/guestSignup/AccountService.ts","webpack://checkout/./packages/core/src/app/guestSignup/SignUpPasswordField.tsx","webpack://checkout/./packages/core/src/app/guestSignup/GuestSignUpForm.tsx","webpack://checkout/./packages/core/src/app/guestSignup/PasswordSavedSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/SignedUpSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationRequirementsError.ts","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationFailedError.ts","webpack://checkout/./packages/core/src/app/order/getPaymentInstructions.ts","webpack://checkout/./packages/core/src/app/giftCertificate/mapFromPayments.ts","webpack://checkout/./packages/core/src/app/order/getStoreCreditAmount.ts","webpack://checkout/./packages/core/src/app/order/mapToOrderSummarySubtotalsProps.ts","webpack://checkout/./packages/core/src/app/order/OrderConfirmationSection.tsx","webpack://checkout/./packages/core/src/app/order/MandateTextComponent.tsx","webpack://checkout/./packages/core/src/app/order/PaymentsWithMandates.tsx","webpack://checkout/./packages/core/src/app/order/OrderStatus.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconPrint.tsx","webpack://checkout/./packages/core/src/app/order/PrintLink.tsx","webpack://checkout/./packages/core/src/app/ui/header/PrimaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/ThankYouHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmationApp.tsx","webpack://checkout/./packages/core/src/app/payment/getProviderWithCustomCheckout.ts","webpack://checkout/./packages/core/src/app/payment/paymentMethod/PaymentMethodId.ts","webpack://checkout/./packages/core/src/app/payment/storeCredit/isStoreCreditPayment.ts","webpack://checkout/./packages/core/src/app/shipping/ConsignmentLineItemDetail.tsx","webpack://checkout/./packages/core/src/app/shipping/StaticConsignmentItemList.tsx","webpack://checkout/./packages/core/src/app/shipping/findLineItems.ts","webpack://checkout/./packages/core/src/app/shipping/getLineItemsCount.ts","webpack://checkout/./packages/core/src/app/shipping/hasSelectedShippingOptions.ts","webpack://checkout/./packages/core/src/app/shipping/hasUnassignedLineItems.ts","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionAdditionalDescription.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/StaticShippingOption.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconSuccess.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconInfo.tsx","webpack://checkout/./packages/core/src/app/ui/alert/Alert.tsx","webpack://checkout/./packages/core/src/app/ui/button/Button.tsx","webpack://checkout/./packages/core/src/app/ui/form/BasicFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/RadioInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/MultiCheckboxControl.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxGroupFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicFormFieldType.ts","webpack://checkout/./packages/core/src/app/ui/form/Fieldset.tsx","webpack://checkout/./packages/core/src/app/ui/form/Form.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormFieldContainer.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormFieldError.tsx","webpack://checkout/./packages/core/src/app/ui/form/Input.tsx","webpack://checkout/./packages/core/src/app/ui/form/Label.tsx","webpack://checkout/./packages/core/src/app/ui/form/Legend.tsx","webpack://checkout/./packages/core/src/app/ui/form/TextArea.tsx","webpack://checkout/./packages/core/src/app/ui/form/TextInput.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconBolt.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconChevronDown.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconClose.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconError.tsx","webpack://checkout/./packages/core/src/app/ui/icon/withIconContainer.tsx","webpack://checkout/./packages/core/src/app/ui/loading/LazyContainer.tsx","webpack://checkout/./packages/core/src/app/ui/loading/LoadingOverlay.tsx","webpack://checkout/./packages/core/src/app/ui/loading/LoadingSpinner.tsx","webpack://checkout/./packages/core/src/app/ui/modal/Modal.tsx","webpack://checkout/./packages/core/src/app/ui/modal/ModalHeader.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/ViewPicker.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/MobileView.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/breakpoints.ts","webpack://checkout/./packages/core/src/app/ui/responsive/isMobileView.ts","webpack://checkout/./packages/core/src/app/ui/toggle/Toggle.tsx","webpack://checkout/./packages/dom-utils/src/getAppliedStyles.ts","webpack://checkout/./packages/dom-utils/src/parseAnchor.ts","webpack://checkout/./packages/dom-utils/src/preventDefault.ts","webpack://checkout/./packages/error-handling-utils/src/ErrorBoundary.tsx","webpack://checkout/./packages/error-handling-utils/src/ErrorLogger.ts","webpack://checkout/./packages/instrument-utils/src/guards/shouldUseStripeLinkByMinimumAmount.ts","webpack://checkout/./packages/legacy-hoc/src/createInjectHoc.tsx","webpack://checkout/./packages/locale/src/LocaleContext.ts","webpack://checkout/./packages/locale/src/LocaleProvider.tsx","webpack://checkout/./packages/locale/src/TranslatedHtml.tsx","webpack://checkout/./packages/locale/src/TranslatedLink.tsx","webpack://checkout/./packages/locale/src/TranslatedString.tsx","webpack://checkout/./packages/locale/src/translations/index.ts","webpack://checkout/./packages/locale/src/getLanguageService.ts","webpack://checkout/./packages/locale/src/localizeAddress.ts","webpack://checkout/./packages/locale/src/withDate.tsx","webpack://checkout/./packages/locale/src/withLanguage.tsx","webpack://checkout/./packages/payment-integration-api/src/PaymentMethodId.ts","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutContext.tsx","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutProvider.tsx","webpack://checkout/./packages/ui/src/icon/IconPayPalFastlane.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/PoweredByPayPalFastlaneLabel.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-braintree-fastlane-method.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-commerce-fastlane-method.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-method.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/usePayPalFastlaneAddress.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-customer.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/AddressFormSkeleton.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/ChecklistSkeleton.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/LoadingSkeleton.tsx","webpack://checkout/./packages/ui/src/form/contexts/FormContext.tsx","webpack://checkout/./packages/ui/src/icon/withIconContainer.tsx"],"sourcesContent":["import { CheckoutPaymentMethodExecutedOptions } from '@bigcommerce/checkout-sdk';\r\nimport { createContext } from 'react';\r\n\r\nexport interface AnalyticsEvents {\r\n    checkoutBegin(): void;\r\n    trackStepCompleted(step: string): void;\r\n    trackStepViewed(step: string): void;\r\n    orderPurchased(): void;\r\n    customerEmailEntry(email: string): void;\r\n    customerSuggestionInit(payload?: CheckoutPaymentMethodExecutedOptions): void;\r\n    customerSuggestionExecute(): void;\r\n    customerPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions): void;\r\n    showShippingMethods(): void;\r\n    selectedPaymentMethod(methodName: string, methodId: string): void;\r\n    clickPayButton(payload?: { [key: string]: unknown }): void;\r\n    paymentRejected(): void;\r\n    paymentComplete(): void;\r\n    exitCheckout(): void;\r\n    walletButtonClick(methodId: string): void;\r\n}\r\n\r\nexport interface AnalyticsContextProps {\r\n    analyticsTracker: AnalyticsEvents;\r\n}\r\n\r\nconst AnalyticsContext = createContext<AnalyticsContextProps | undefined>(undefined);\r\n\r\nexport default AnalyticsContext;\r\n","export default function createAnalyticsService<T>(\r\n    createFn: (args?: any) => T,\r\n    createArguments: unknown[] = [],\r\n) {\r\n    let analyticsTracker: T;\r\n\r\n    return () => {\r\n        if (analyticsTracker) {\r\n            return analyticsTracker;\r\n        }\r\n\r\n        analyticsTracker = createFn(...createArguments);\r\n\r\n        return analyticsTracker;\r\n    };\r\n}\r\n","import {\r\n    BodlEventsPayload,\r\n    BodlService,\r\n    BraintreeAnalyticTrackerService,\r\n    CheckoutService,\r\n    createBodlService,\r\n    createBraintreeAnalyticTracker,\r\n    createPayPalCommerceAnalyticTracker,\r\n    createStepTracker,\r\n    PayPalCommerceAnalyticTrackerService,\r\n    StepTracker,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport React, { ReactNode, useMemo } from 'react';\r\n\r\nimport AnalyticsContext, { AnalyticsEvents } from './AnalyticsContext';\r\nimport createAnalyticsService from './createAnalyticsService';\r\n\r\ninterface AnalyticsProviderProps {\r\n    checkoutService: CheckoutService;\r\n    children: ReactNode;\r\n}\r\n\r\nconst AnalyticsProvider = ({ checkoutService, children }: AnalyticsProviderProps) => {\r\n    const getStepTracker = useMemo(\r\n        () => createAnalyticsService<StepTracker>(createStepTracker, [checkoutService]),\r\n        [checkoutService],\r\n    );\r\n    const getBodlService = useMemo(\r\n        () => createAnalyticsService<BodlService>(createBodlService, [checkoutService.subscribe]),\r\n        [checkoutService],\r\n    );\r\n    const getBraintreeAnalyticTracker = useMemo(\r\n        () =>\r\n            createAnalyticsService<BraintreeAnalyticTrackerService>(\r\n                createBraintreeAnalyticTracker,\r\n                [checkoutService],\r\n            ),\r\n        [checkoutService],\r\n    );\r\n    const getPayPalCommerceAnalyticTracker = useMemo(\r\n        () =>\r\n            createAnalyticsService<PayPalCommerceAnalyticTrackerService>(\r\n                createPayPalCommerceAnalyticTracker,\r\n                [checkoutService],\r\n            ),\r\n        [checkoutService],\r\n    );\r\n\r\n    const checkoutBegin = () => {\r\n        getStepTracker().trackCheckoutStarted();\r\n        getBodlService().checkoutBegin();\r\n    };\r\n\r\n    const trackStepCompleted = (currentStep: string) => {\r\n        getStepTracker().trackStepCompleted(currentStep);\r\n        getBodlService().stepCompleted(currentStep);\r\n    };\r\n\r\n    const trackStepViewed = (step: string) => {\r\n        getStepTracker().trackStepViewed(step);\r\n    };\r\n\r\n    const orderPurchased = () => {\r\n        getStepTracker().trackOrderComplete();\r\n        getBodlService().orderPurchased();\r\n    };\r\n\r\n    const customerEmailEntry = (email: string) => {\r\n        getBodlService().customerEmailEntry(email);\r\n    };\r\n\r\n    const customerSuggestionInit = (payload: BodlEventsPayload) => {\r\n        getBodlService().customerSuggestionInit(payload);\r\n    };\r\n\r\n    const customerSuggestionExecute = () => {\r\n        getBodlService().customerSuggestionExecute();\r\n    };\r\n\r\n    const customerPaymentMethodExecuted = (payload: BodlEventsPayload) => {\r\n        getBodlService().customerPaymentMethodExecuted(payload);\r\n        getBraintreeAnalyticTracker().customerPaymentMethodExecuted();\r\n        getPayPalCommerceAnalyticTracker().customerPaymentMethodExecuted();\r\n    };\r\n\r\n    const showShippingMethods = () => {\r\n        getBodlService().showShippingMethods();\r\n    };\r\n\r\n    const selectedPaymentMethod = (methodName: string, methodId: string) => {\r\n        getBodlService().selectedPaymentMethod(methodName);\r\n        getBraintreeAnalyticTracker().selectedPaymentMethod(methodId);\r\n        getPayPalCommerceAnalyticTracker().selectedPaymentMethod(methodId);\r\n    };\r\n\r\n    const clickPayButton = (payload: BodlEventsPayload) => {\r\n        getBodlService().clickPayButton(payload);\r\n    };\r\n\r\n    const paymentRejected = () => {\r\n        getBodlService().paymentRejected();\r\n    };\r\n\r\n    const paymentComplete = () => {\r\n        getBodlService().paymentComplete();\r\n        getBraintreeAnalyticTracker().paymentComplete();\r\n        getPayPalCommerceAnalyticTracker().paymentComplete();\r\n    };\r\n\r\n    const exitCheckout = () => {\r\n        getBodlService().exitCheckout();\r\n    };\r\n\r\n    const walletButtonClick = (methodId: string) => {\r\n        getBraintreeAnalyticTracker().walletButtonClick(methodId);\r\n        getPayPalCommerceAnalyticTracker().walletButtonClick(methodId);\r\n    };\r\n\r\n    const analyticsTracker: AnalyticsEvents = {\r\n        checkoutBegin,\r\n        trackStepCompleted,\r\n        trackStepViewed,\r\n        orderPurchased,\r\n        customerEmailEntry,\r\n        customerSuggestionInit,\r\n        customerSuggestionExecute,\r\n        customerPaymentMethodExecuted,\r\n        showShippingMethods,\r\n        selectedPaymentMethod,\r\n        clickPayButton,\r\n        paymentRejected,\r\n        paymentComplete,\r\n        exitCheckout,\r\n        walletButtonClick,\r\n    };\r\n\r\n    return (\r\n        <AnalyticsContext.Provider value={{ analyticsTracker }}>\r\n            {children}\r\n        </AnalyticsContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AnalyticsProvider;\r\n","import { ExtensionRegion } from '@bigcommerce/checkout-sdk';\r\n\r\nexport enum ExtensionRegionContainer {\r\n    ShippingShippingAddressFormBefore = 'extension-region-shipping-shippingaddressform-before',\r\n    ShippingShippingAddressFormAfter = 'extension-region-shipping-shippingaddressform-after',\r\n    ShippingSelectedShippingMethod = 'extension-region-shipping-selectedshippingmethod',\r\n    SummaryAfter = 'extension-region-summary-after',\r\n    SummaryLastItemAfter = 'extension-region-summary-lastitem-after',\r\n}\r\n\r\nexport const extensionRegionToContainerMap: Record<ExtensionRegion, ExtensionRegionContainer> = {\r\n    [ExtensionRegion.ShippingShippingAddressFormBefore]:\r\n        ExtensionRegionContainer.ShippingShippingAddressFormBefore,\r\n    [ExtensionRegion.ShippingShippingAddressFormAfter]:\r\n        ExtensionRegionContainer.ShippingShippingAddressFormAfter,\r\n    [ExtensionRegion.ShippingSelectedShippingMethod]:\r\n        ExtensionRegionContainer.ShippingSelectedShippingMethod,\r\n    [ExtensionRegion.SummaryAfter]: ExtensionRegionContainer.SummaryAfter,\r\n    [ExtensionRegion.SummaryLastItemAfter]: ExtensionRegionContainer.SummaryLastItemAfter,\r\n};\r\n","import { ExtensionRegion } from '@bigcommerce/checkout-sdk';\r\nimport React, { useEffect } from 'react';\r\n\r\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nimport { extensionRegionToContainerMap } from './ExtensionRegionContainer';\r\nimport { useExtensions } from './useExtensions';\r\n\r\ninterface ExtensionProps {\r\n    region: ExtensionRegion;\r\n}\r\n\r\nexport const Extension = ({ region }: ExtensionProps): React.JSX.Element | null => {\r\n    const {\r\n        checkoutState: {\r\n            data: { getExtensions, getConfig, getCheckout },\r\n        },\r\n    } = useCheckout();\r\n    const extensions = getExtensions();\r\n    const config = getConfig();\r\n    const checkout = getCheckout();\r\n    const { extensionService } = useExtensions();\r\n    const isRegionEnabled =\r\n        extensions && config && checkout && extensionService.isRegionEnabled(region);\r\n    const containerId = extensionRegionToContainerMap[region];\r\n\r\n    useEffect(() => {\r\n        if (isRegionEnabled) {\r\n            void extensionService.renderExtension(containerId, region);\r\n\r\n            return () => {\r\n                extensionService.removeListeners(region);\r\n            };\r\n        }\r\n    }, [containerId, extensionService, isRegionEnabled, region]);\r\n\r\n    if (isRegionEnabled) {\r\n        return <div id={containerId} />;\r\n    }\r\n\r\n    return null;\r\n};\r\n","import { useContext } from 'react';\r\n\r\nimport { ExtensionContext } from './ExtensionContext';\r\n\r\nexport const useExtensions = () => {\r\n    const extensionContext = useContext(ExtensionContext);\r\n\r\n    if (!extensionContext) {\r\n        throw new Error('useExtensions must be used within an <ExtensionProvider>');\r\n    }\r\n\r\n    return extensionContext;\r\n};\r\n","import { createContext } from 'react';\r\n\r\nimport { ExtensionState } from './ExtensionProvider';\r\nimport { ExtensionService } from './ExtensionService';\r\n\r\nexport interface ExtensionContextProps {\r\n    extensionService: ExtensionService;\r\n    extensionState: ExtensionState;\r\n}\r\n\r\nexport const ExtensionContext = createContext<ExtensionContextProps | undefined>(undefined);\r\n","import { ExtensionAction, ExtensionActionType, ExtensionState } from './ExtensionProvider';\r\n\r\nexport const extensionReducer = (\r\n    state: ExtensionState,\r\n    action: ExtensionAction,\r\n): ExtensionState => {\r\n    switch (action.type) {\r\n        case ExtensionActionType.SHOW_LOADING_INDICATOR:\r\n            return { ...state, isShowingLoadingIndicator: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { CommandHandler, HandlerProps } from './CommandHandler';\r\n\r\nexport function createReloadCheckoutHandler({\r\n    checkoutService,\r\n}: HandlerProps): CommandHandler<ExtensionCommandType.ReloadCheckout> {\r\n    return {\r\n        commandType: ExtensionCommandType.ReloadCheckout,\r\n        handler: () => {\r\n            void checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id, {\r\n                params: {\r\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/consistent-type-assertions\r\n                    include: ['consignments.availableShippingOptions'] as any,\r\n                },\r\n            });\r\n        },\r\n    };\r\n}\r\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { CommandHandler, HandlerProps } from './CommandHandler';\r\n\r\nexport function createSetIframeStyleHandler({\r\n    extension,\r\n}: HandlerProps): CommandHandler<ExtensionCommandType.SetIframeStyle> {\r\n    return {\r\n        commandType: ExtensionCommandType.SetIframeStyle,\r\n        handler: (data) => {\r\n            const { style } = data.payload;\r\n            const extensionContainer = document.querySelector(\r\n                `div[data-extension-id=\"${extension.id}\"]`,\r\n            );\r\n            const iframe = extensionContainer?.querySelector('iframe');\r\n\r\n            if (iframe) {\r\n                Object.assign(iframe.style, style);\r\n            }\r\n        },\r\n    };\r\n}\r\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { ExtensionActionType } from '../ExtensionProvider';\r\n\r\nimport { CommandHandler, HandlerProps } from './CommandHandler';\r\n\r\nexport function createShowLoadingIndicatorHandler({\r\n    dispatch,\r\n}: HandlerProps): CommandHandler<ExtensionCommandType.ShowLoadingIndicator> {\r\n    return {\r\n        commandType: ExtensionCommandType.ShowLoadingIndicator,\r\n        handler: (data) => {\r\n            const { show } = data.payload;\r\n\r\n            dispatch({\r\n                type: ExtensionActionType.SHOW_LOADING_INDICATOR,\r\n                payload: show,\r\n            });\r\n        },\r\n    };\r\n}\r\n","import { ExtensionCommandType, ExtensionMessageType } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { CommandHandler, HandlerProps } from './CommandHandler';\r\n\r\nexport function createGetConsignmentHandler({\r\n    checkoutService,\r\n    extension,\r\n}: HandlerProps): CommandHandler<ExtensionCommandType.GetConsignments> {\r\n    return {\r\n        commandType: ExtensionCommandType.GetConsignments,\r\n        handler: () => {\r\n            const consignments = checkoutService.getState().data.getCheckout()?.consignments || [];\r\n\r\n            checkoutService.postMessageToExtension(extension.id, {\r\n                type: ExtensionMessageType.GetConsignments,\r\n                payload: {\r\n                    consignments,\r\n                },\r\n            });\r\n        },\r\n    };\r\n}\r\n","import {\r\n    CheckoutService,\r\n    Extension,\r\n    ExtensionCommandMap,\r\n    ExtensionRegion,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport React from 'react';\r\n\r\nimport { ErrorLevelType, ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\r\n\r\nimport { ExtensionAction } from './ExtensionProvider';\r\nimport * as handlerFactories from './handlers';\r\nimport { CommandHandler } from './handlers/CommandHandler';\r\n\r\nexport class ExtensionService {\r\n    private handlers: { [extensionId: string]: Array<() => void> } = {};\r\n\r\n    constructor(\r\n        private checkoutService: CheckoutService,\r\n        private dispatch: React.Dispatch<ExtensionAction>,\r\n        private errorLogger: ErrorLogger,\r\n    ) {}\r\n\r\n    async loadExtensions(): Promise<void> {\r\n        await this.checkoutService.loadExtensions();\r\n    }\r\n\r\n    preloadExtensions(): void {\r\n        const state = this.checkoutService.getState();\r\n        const extensions = state.data.getExtensions();\r\n        const cartId = state.data.getCart()?.id;\r\n        const parentOrigin = state.data.getConfig()?.links.siteLink;\r\n\r\n        if (!cartId || !parentOrigin) {\r\n            return;\r\n        }\r\n\r\n        extensions?.forEach((extension) => {\r\n            const url = new URL(extension.url);\r\n\r\n            url.searchParams.set('extensionId', extension.id);\r\n            url.searchParams.set('cartId', cartId);\r\n            url.searchParams.set('parentOrigin', parentOrigin);\r\n\r\n            const link = document.createElement('link');\r\n\r\n            link.rel = 'preload';\r\n            link.as = 'document';\r\n            link.href = url.toString();\r\n\r\n            const head = document.head;\r\n\r\n            head.appendChild(link);\r\n        });\r\n    }\r\n\r\n    async renderExtension(container: string, region: ExtensionRegion): Promise<void> {\r\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\r\n\r\n        if (!extension) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await this.checkoutService.renderExtension(container, region);\r\n\r\n            this.registerHandlers(extension);\r\n        } catch (error: unknown) {\r\n            if (error instanceof Error) {\r\n                this.errorLogger.log(\r\n                    error,\r\n                    { errorCode: 'checkoutExtension' },\r\n                    ErrorLevelType.Error,\r\n                    { extensionId: extension.id, region },\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    removeListeners(region: ExtensionRegion): void {\r\n        this.checkoutService.clearExtensionCache(region);\r\n\r\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\r\n\r\n        if (!extension) {\r\n            return;\r\n        }\r\n\r\n        const removers = this.handlers[extension.id];\r\n\r\n        if (!removers) {\r\n            return;\r\n        }\r\n\r\n        for (const remover of removers) {\r\n            remover();\r\n        }\r\n\r\n        delete this.handlers[extension.id];\r\n    }\r\n\r\n    isRegionEnabled(region: ExtensionRegion): boolean {\r\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\r\n\r\n        return Boolean(extension);\r\n    }\r\n\r\n    private registerHandlers(extension: Extension): void {\r\n        const handlerProps = {\r\n            checkoutService: this.checkoutService,\r\n            dispatch: this.dispatch,\r\n            extension,\r\n        };\r\n\r\n        if (!this.handlers[extension.id]) {\r\n            this.handlers[extension.id] = [];\r\n        }\r\n\r\n        Object.values(handlerFactories).forEach((createHandlerFactory) => {\r\n            const handlerFactory = createHandlerFactory(handlerProps);\r\n\r\n            if (this.isCommandHandler(handlerFactory.commandType, handlerFactory)) {\r\n                this.handlers[extension.id].push(\r\n                    this.checkoutService.handleExtensionCommand(\r\n                        extension.id,\r\n                        handlerFactory.commandType,\r\n                        handlerFactory.handler,\r\n                    ),\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    private isCommandHandler<T extends keyof ExtensionCommandMap>(\r\n        type: T,\r\n        handler: CommandHandler<any>,\r\n    ): handler is CommandHandler<T> {\r\n        return handler.commandType === type;\r\n    }\r\n}\r\n","import { CheckoutService } from '@bigcommerce/checkout-sdk';\r\nimport React, { ReactNode, useReducer } from 'react';\r\n\r\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\r\n\r\nimport { ExtensionContext } from './ExtensionContext';\r\nimport { extensionReducer } from './ExtensionReducer';\r\nimport { ExtensionService } from './ExtensionService';\r\n\r\nexport interface ExtensionState {\r\n    isShowingLoadingIndicator: boolean;\r\n}\r\n\r\nexport interface ExtensionAction {\r\n    type: ExtensionActionType;\r\n    payload: boolean;\r\n}\r\n\r\nexport enum ExtensionActionType {\r\n    SHOW_LOADING_INDICATOR,\r\n}\r\n\r\nexport interface ExtensionProviderProps {\r\n    checkoutService: CheckoutService;\r\n    children: ReactNode;\r\n    errorLogger: ErrorLogger;\r\n}\r\n\r\nexport const ExtensionProvider = ({\r\n    checkoutService,\r\n    children,\r\n    errorLogger,\r\n}: ExtensionProviderProps) => {\r\n    const [extensionState, dispatch] = useReducer(extensionReducer, {\r\n        isShowingLoadingIndicator: false,\r\n    });\r\n    const extensionService = new ExtensionService(checkoutService, dispatch, errorLogger);\r\n\r\n    const extensionValues = {\r\n        extensionService,\r\n        extensionState,\r\n    };\r\n\r\n    return (\r\n        <ExtensionContext.Provider value={extensionValues}>{children}</ExtensionContext.Provider>\r\n    );\r\n};\r\n","enum AddressType {\r\n    Billing = 'billing',\r\n    Shipping = 'shipping',\r\n}\r\n\r\nexport default AddressType;\r\n","import {\r\n    Address,\r\n    CheckoutSelectors,\r\n    Country,\r\n    FormField,\r\n    ShippingInitializeOptions,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { localizeAddress } from '@bigcommerce/checkout/locale';\r\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nimport { withCheckout } from '../checkout';\r\nimport { isExperimentEnabled } from '../common/utility';\r\n\r\nimport AddressType from './AddressType';\r\nimport isValidStaticAddress from './isValidStaticAddress';\r\n\r\nimport './StaticAddress.scss';\r\n\r\nexport interface StaticAddressProps {\r\n    address: Address;\r\n    type?: AddressType;\r\n}\r\n\r\nexport interface StaticAddressEditableProps extends StaticAddressProps {\r\n    initialize?(options: ShippingInitializeOptions): Promise<CheckoutSelectors>;\r\n}\r\n\r\ninterface WithCheckoutStaticAddressProps {\r\n    countries?: Country[];\r\n    fields?: FormField[];\r\n    validateAddressFields?: boolean;\r\n}\r\n\r\nconst StaticAddress: FunctionComponent<\r\n    StaticAddressEditableProps & WithCheckoutStaticAddressProps\r\n    > = ({\r\n        countries,\r\n        fields,\r\n        address: addressWithoutLocalization,\r\n        validateAddressFields = false,\r\n    }) => {\r\n    const address = localizeAddress(addressWithoutLocalization, countries);\r\n    const isValid = isValidStaticAddress(address, validateAddressFields, fields);\r\n\r\n    return !isValid ? null : (\r\n        <div className=\"vcard checkout-address--static\" data-test=\"static-address\">\r\n            {(address.firstName || address.lastName) && (\r\n                <p className=\"fn address-entry\">\r\n                    <span className=\"first-name\">{`${address.firstName} `}</span>\r\n                    <span className=\"family-name\">{address.lastName}</span>\r\n                </p>\r\n            )}\r\n\r\n            {(address.phone || address.company) && (\r\n                <p className=\"address-entry\">\r\n                    <span className=\"company-name\">{`${address.company} `}</span>\r\n                    <span className=\"tel\">{address.phone}</span>\r\n                </p>\r\n            )}\r\n\r\n            <div className=\"adr\">\r\n                <p className=\"street-address address-entry\">\r\n                    <span className=\"address-line-1\">{`${address.address1} `}</span>\r\n                    {address.address2 && (\r\n                        <span className=\"address-line-2\">{` / ${address.address2}`}</span>\r\n                    )}\r\n                </p>\r\n\r\n                <p className=\"address-entry\">\r\n                    {address.city && <span className=\"locality\">{`${address.city}, `}</span>}\r\n                    {address.localizedProvince && (\r\n                        <span className=\"region\">{`${address.localizedProvince}, `}</span>\r\n                    )}\r\n                    {address.postalCode && (\r\n                        <span className=\"postal-code\">{`${address.postalCode} / `}</span>\r\n                    )}\r\n                    {address.localizedCountry && (\r\n                        <span className=\"country-name\">{`${address.localizedCountry} `}</span>\r\n                    )}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport function mapToStaticAddressProps(\r\n    context: CheckoutContextProps,\r\n    { address, type }: StaticAddressProps,\r\n): WithCheckoutStaticAddressProps | null {\r\n    const {\r\n        checkoutState: {\r\n            data: { getConfig, getBillingCountries, getShippingCountries, getBillingAddressFields, getShippingAddressFields },\r\n        },\r\n    } = context;\r\n\r\n    const config = getConfig();\r\n\r\n    const validateAddressFields =\r\n        isExperimentEnabled(\r\n            config?.checkoutSettings,\r\n            'CHECKOUT-7560.address_fields_max_length_validation',\r\n        );\r\n\r\n    return {\r\n        countries: type === AddressType.Billing\r\n            ? getBillingCountries()\r\n            : getShippingCountries(),\r\n        fields:\r\n            type === AddressType.Billing\r\n                ? getBillingAddressFields(address.countryCode)\r\n                : type === AddressType.Shipping\r\n                ? getShippingAddressFields(address.countryCode)\r\n                : undefined,\r\n        validateAddressFields,\r\n    };\r\n}\r\n\r\nexport default withCheckout(mapToStaticAddressProps)(memo(StaticAddress));\r\n","import { memoize } from '@bigcommerce/memoize';\r\nimport { object, ObjectSchema, string, StringSchema } from 'yup';\r\n\r\nimport getCustomFormFieldsValidationSchema, {\r\n    FormFieldsValidationSchemaOptions,\r\n} from './getCustomFormFieldsValidationSchema';\r\n\r\nexport const WHITELIST_REGEXP = /^[^<>]*$/;\r\n\r\nexport interface FormFieldValues {\r\n    [key: string]: string | { [id: string]: any };\r\n}\r\n\r\nexport default memoize(function getFormFieldsValidationSchema({\r\n    formFields,\r\n    translate = () => undefined,\r\n    validateGoogleMapAutoCompleteMaxLength = false,\r\n    validateAddressFields = false,\r\n}: FormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\r\n    return object({\r\n        ...formFields\r\n            .filter(({ custom }) => !custom)\r\n            .reduce((schema, { name, required, label, maxLength }) => {\r\n                schema[name] = string();\r\n\r\n                if (required) {\r\n                    schema[name] = schema[name]\r\n                        .trim()\r\n                        .required(translate('required', { label, name}));\r\n                }\r\n\r\n                if (name === 'address1' && maxLength && validateGoogleMapAutoCompleteMaxLength) {\r\n                    schema[name] = schema[name]\r\n                        .max(maxLength, translate('max', { label, name, max: maxLength }));\r\n                }\r\n\r\n                if ((name === 'address1' || name === 'address2') && maxLength && validateAddressFields) {\r\n                    schema[name] = schema[name]\r\n                        .max(maxLength, translate('max', { label, name, max: maxLength }));\r\n                }\r\n\r\n                schema[name] = schema[name].matches(\r\n                    WHITELIST_REGEXP,\r\n                    translate('invalid', { name, label }),\r\n                );\r\n\r\n                return schema;\r\n            }, {} as { [key: string]: StringSchema }),\r\n    }).concat(\r\n        getCustomFormFieldsValidationSchema({ formFields, translate }),\r\n    ) as ObjectSchema<FormFieldValues>;\r\n});\r\n","import { FormField, LanguageService } from '@bigcommerce/checkout-sdk';\r\nimport { memoize } from 'lodash';\r\nimport { ObjectSchema } from 'yup';\r\n\r\nimport {\r\n    FormFieldValues,\r\n    getFormFieldsValidationSchema,\r\n    TranslateValidationErrorFunction,\r\n} from '../formFields';\r\n\r\nexport interface AddressFormFieldsValidationSchemaOptions {\r\n    formFields: FormField[];\r\n    language?: LanguageService;\r\n    validateGoogleMapAutoCompleteMaxLength?: boolean;\r\n    validateAddressFields?: boolean;\r\n}\r\n\r\nexport function getTranslateAddressError(\r\n    language?: LanguageService,\r\n): TranslateValidationErrorFunction {\r\n    const requiredFieldErrorTranslationIds: { [fieldName: string]: string } = {\r\n        countryCode: 'address.country',\r\n        firstName: 'address.first_name',\r\n        lastName: 'address.last_name',\r\n        company: 'address.company_name',\r\n        address1: 'address.address_line_1',\r\n        address2: 'address.address_line_2',\r\n        city: 'address.city',\r\n        stateOrProvince: 'address.state',\r\n        stateOrProvinceCode: 'address.state',\r\n        postalCode: 'address.postal_code',\r\n        phone: 'address.phone_number',\r\n    };\r\n\r\n    return (type, { label, name, min, max }) => {\r\n        if (!language) {\r\n            return;\r\n        }\r\n\r\n        if (type === 'required') {\r\n            if (requiredFieldErrorTranslationIds[name]) {\r\n                return language.translate(\r\n                    `${requiredFieldErrorTranslationIds[name]}_required_error`,\r\n                );\r\n            }\r\n\r\n            return language.translate(`address.custom_required_error`, { label });\r\n        }\r\n\r\n        if (type === 'max' && max) {\r\n            return language.translate(`address.custom_max_error`, { label, max });\r\n        }\r\n\r\n        if (type === 'min' && min) {\r\n            return language.translate(`address.custom_max_error`, { label, min });\r\n        }\r\n\r\n        if (type === 'invalid') {\r\n            return language.translate(`address.invalid_characters_error`, { label });\r\n        }\r\n    };\r\n}\r\n\r\nexport default memoize(function getAddressFormFieldsValidationSchema({\r\n    formFields,\r\n    language,\r\n    validateGoogleMapAutoCompleteMaxLength,\r\n    validateAddressFields,\r\n}: AddressFormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\r\n    return getFormFieldsValidationSchema({\r\n        formFields,\r\n        translate: getTranslateAddressError(language),\r\n        validateGoogleMapAutoCompleteMaxLength,\r\n        validateAddressFields,\r\n    });\r\n});\r\n","import { Address, FormField } from '@bigcommerce/checkout-sdk';\r\n\r\nimport getAddressFormFieldsValidationSchema from './getAddressFormFieldsValidationSchema';\r\nimport mapAddressToFormValues from './mapAddressToFormValues';\r\n\r\nexport default function isValidAddress(\r\n    address: Address,\r\n    formFields: FormField[],\r\n    validateAddressFields?: boolean\r\n): boolean {\r\n    const addressSchema = getAddressFormFieldsValidationSchema({ formFields, validateAddressFields });\r\n\r\n    return addressSchema.isValidSync(mapAddressToFormValues(formFields, address));\r\n}\r\n","import { Address, FormField } from \"@bigcommerce/checkout-sdk\";\r\nimport { isEmpty } from \"lodash\";\r\n\r\nimport isValidAddress from \"./isValidAddress\";\r\n\r\nexport default function isValidStaticAddress(\r\n    address: Address, \r\n    validateAddressFields: boolean,\r\n    fields?: FormField[], \r\n): boolean {\r\n    let isValid = !isEmpty(address);\r\n        \r\n    if (fields && !validateAddressFields) {\r\n        isValid = isValidAddress(\r\n            address,\r\n            fields.filter((field) => !field.custom),\r\n        );\r\n    }\r\n\r\n    return isValid;\r\n}\r\n","import { Address, AddressKey, FormField } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { DynamicFormFieldType } from '../ui/form';\r\n\r\nexport type AddressFormValues = Pick<Address, Exclude<AddressKey, 'customFields'>> & {\r\n    customFields: { [id: string]: any };\r\n};\r\n\r\nexport default function mapAddressToFormValues(\r\n    fields: FormField[],\r\n    address?: Address,\r\n): AddressFormValues {\r\n    const values = {\r\n        ...fields.reduce(\r\n            (addressFormValues, { name, custom, fieldType, default: defaultValue }) => {\r\n                if (custom) {\r\n                    if (!addressFormValues.customFields) {\r\n                        addressFormValues.customFields = {};\r\n                    }\r\n\r\n                    const field =\r\n                        address &&\r\n                        address.customFields &&\r\n                        address.customFields.find(({ fieldId }) => fieldId === name);\r\n\r\n                    const fieldValue = field && field.fieldValue;\r\n\r\n                    addressFormValues.customFields[name] = getValue(\r\n                        fieldType,\r\n                        fieldValue,\r\n                        defaultValue,\r\n                    );\r\n\r\n                    return addressFormValues;\r\n                }\r\n\r\n                if (isSystemAddressFieldName(name)) {\r\n                    const fieldValue = address && address[name];\r\n\r\n                    addressFormValues[name] = getValue(\r\n                        fieldType,\r\n                        fieldValue,\r\n                        defaultValue,\r\n                    )?.toString() || '';\r\n                }\r\n\r\n                return addressFormValues;\r\n            },\r\n            {} as AddressFormValues,\r\n        ),\r\n    };\r\n\r\n    values.shouldSaveAddress =\r\n        address && address.shouldSaveAddress !== undefined ? address.shouldSaveAddress : true;\r\n\r\n    // Manually backfill stateOrProvince to avoid Formik warning (uncontrolled to controlled input)\r\n    if (values.stateOrProvince === undefined) {\r\n        values.stateOrProvince = '';\r\n    }\r\n\r\n    if (values.stateOrProvinceCode === undefined) {\r\n        values.stateOrProvinceCode = '';\r\n    }\r\n\r\n    return values;\r\n}\r\n\r\nfunction getValue(\r\n    fieldType?: string,\r\n    fieldValue?: string | string[] | number,\r\n    defaultValue?: string,\r\n): string | string[] | number | Date | undefined {\r\n    if (fieldValue === undefined || fieldValue === null) {\r\n        return getDefaultValue(fieldType, defaultValue);\r\n    }\r\n\r\n    if (fieldType === DynamicFormFieldType.date && typeof fieldValue === 'string') {\r\n        if (fieldValue) {\r\n            const [year, month, day] = fieldValue.split('-');\r\n\r\n            return new Date(Number(year), Number(month)-1, Number(day));\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    return fieldValue;\r\n}\r\n\r\nfunction getDefaultValue(fieldType?: string, defaultValue?: string): string | string[] | Date {\r\n    if (defaultValue && fieldType === DynamicFormFieldType.date) {\r\n        return new Date(defaultValue);\r\n    }\r\n\r\n    if (fieldType === DynamicFormFieldType.checkbox) {\r\n        return [];\r\n    }\r\n\r\n    return defaultValue || '';\r\n}\r\n\r\nfunction isSystemAddressFieldName(\r\n    fieldName: string,\r\n): fieldName is Exclude<keyof Address, 'customFields' | 'shouldSaveAddress'> {\r\n    return fieldName !== 'customFields' && fieldName !== 'shouldSaveAddress';\r\n}\r\n","import { AnalyticsContext } from '@bigcommerce/checkout/analytics';\r\nimport { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\r\n\r\nconst withAnalytics = createInjectHoc(AnalyticsContext, { displayNamePrefix: 'WithAnalytics' });\r\n\r\nexport default withAnalytics;\r\n","import CheckoutSupport from './CheckoutSupport';\r\n\r\nexport default class NoopCheckoutSupport implements CheckoutSupport {\r\n    isSupported(): boolean {\r\n        return true;\r\n    }\r\n}\r\n","import { CustomError, setPrototypeOf } from '../../common/error';\r\n\r\nexport class EmbeddedCheckoutUnsupportedError extends CustomError {\r\n    constructor(message: string) {\r\n        super({\r\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\r\n            message,\r\n        });\r\n\r\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\r\n    }\r\n}\r\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { CheckoutSupport } from '../checkout';\r\n\r\nimport { EmbeddedCheckoutUnsupportedError } from './errors';\r\n\r\nexport default class EmbeddedCheckoutSupport implements CheckoutSupport {\r\n    constructor(private unsupportedMethods: string[], private langService: LanguageService) {}\r\n\r\n    isSupported(...ids: string[]): boolean {\r\n        const unsupportedMethods = ids.filter((id) => this.unsupportedMethods.indexOf(id) >= 0);\r\n\r\n        if (unsupportedMethods.length === 0) {\r\n            return true;\r\n        }\r\n\r\n        throw new EmbeddedCheckoutUnsupportedError(\r\n            this.langService.translate('embedded_checkout.unsupported_error', {\r\n                methods: unsupportedMethods.join(', '),\r\n            }),\r\n        );\r\n    }\r\n}\r\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { CheckoutSupport, NoopCheckoutSupport } from '../checkout';\r\n\r\nimport EmbeddedCheckoutSupport from './EmbeddedCheckoutSupport';\r\nimport isEmbedded from './isEmbedded';\r\n\r\nconst UNSUPPORTED_METHODS = ['afterpay', 'applepay', 'amazonpay', 'googlepay', 'klarna', 'masterpass'];\r\n\r\nexport default function createEmbeddedCheckoutSupport(language: LanguageService): CheckoutSupport {\r\n    return isEmbedded()\r\n        ? new EmbeddedCheckoutSupport(UNSUPPORTED_METHODS, language)\r\n        : new NoopCheckoutSupport();\r\n}\r\n","import { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\r\n\r\nimport { ExtensionContext } from './ExtensionContext';\r\n\r\nexport const withExtension = createInjectHoc(ExtensionContext, {\r\n    displayNamePrefix: 'WithExtension',\r\n});\r\n","import React, { PureComponent, ReactNode } from 'react';\r\n\r\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\r\n\r\nimport { LoadingOverlay } from '../ui/loading';\r\n\r\nexport interface EmptyCartMessageProps {\r\n    waitInterval?: number;\r\n    loginUrl: string;\r\n}\r\n\r\ninterface EmptyCartMessageState {\r\n    isWaiting: boolean;\r\n}\r\n\r\nexport default class EmptyCartMessage extends PureComponent<\r\n    EmptyCartMessageProps,\r\n    EmptyCartMessageState\r\n> {\r\n    state: EmptyCartMessageState = {\r\n        isWaiting: true,\r\n    };\r\n\r\n    private waitToken?: number;\r\n\r\n    componentDidMount(): void {\r\n        const { waitInterval } = this.props;\r\n\r\n        this.waitToken = setTimeout(() => {\r\n            this.setState({ isWaiting: false });\r\n        }, waitInterval);\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        clearInterval(this.waitToken);\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { loginUrl } = this.props;\r\n        const { isWaiting } = this.state;\r\n\r\n        return (\r\n            <LoadingOverlay hideContentWhenLoading isLoading={isWaiting}>\r\n                <TranslatedHtml data={{ url: loginUrl }} id=\"cart.empty_cart_message\" />\r\n            </LoadingOverlay>\r\n        );\r\n    }\r\n}\r\n","enum CustomerViewType {\r\n    Guest = 'guest',\r\n    Login = 'login',\r\n    SuggestedLogin = 'suggested_login',\r\n    EnforcedLogin = 'enforced_login',\r\n    CancellableEnforcedLogin = 'cancellable_enforced_login',\r\n    CreateAccount = 'create_account',\r\n}\r\n\r\nexport default CustomerViewType;\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\r\n\r\ninterface WalletButtonsProps {\r\n    buttonsCount: number;\r\n}\r\n\r\nconst WalletButtonContainerSkeleton: FunctionComponent<\r\n    LoadingSkeletonProps & WalletButtonsProps\r\n> = ({ buttonsCount, children, isLoading }) => {\r\n    const renderWhileLoading = true;\r\n    const skeleton = (\r\n        <div className=\"checkoutRemote customer-skeleton\">\r\n            {Array(buttonsCount)\r\n                .fill(0)\r\n                .map((_v, i) => (\r\n                    <div className=\"skeleton-container\" key={`skeleton-container-${i}`}>\r\n                        <div className=\"input-skeleton\" />\r\n                    </div>\r\n                ))}\r\n        </div>\r\n    );\r\n\r\n    return <LoadingSkeleton {...{ children, isLoading, renderWhileLoading, skeleton }} />;\r\n};\r\n\r\nexport default WalletButtonContainerSkeleton;\r\n","interface ApplePayWindow extends Window {\r\n    ApplePaySession: void;\r\n}\r\n\r\nexport default function isApplePayWindow(window: Window): window is ApplePayWindow {\r\n    return 'ApplePaySession' in window;\r\n}\r\n","import { isApplePayWindow } from \"../common/utility\";\r\n\r\nconst APPLE_PAY = 'applepay';\r\n\r\n// TODO: The API should tell UI which payment method offers its own checkout button\r\nexport const SUPPORTED_METHODS: string[] = [\r\n    'amazonpay',\r\n    APPLE_PAY,\r\n    'braintreevisacheckout',\r\n    'braintreepaypal',\r\n    'braintreepaypalcredit',\r\n    'masterpass',\r\n    'paypalcommerce',\r\n    'paypalcommercevenmo',\r\n    'paypalcommercecredit',\r\n    'googlepayadyenv2',\r\n    'googlepayadyenv3',\r\n    'googlepayauthorizenet',\r\n    'googlepaybnz',\r\n    'googlepaybraintree',\r\n    'googlepaycheckoutcom',\r\n    'googlepaycybersourcev2',\r\n    'googlepayorbital',\r\n    'googlepaystripe',\r\n    'googlepaystripeupe',\r\n    'googlepayworldpayaccess',\r\n    'googlepaypaypalcommerce',\r\n    'googlepaytdonlinemart',\r\n];\r\n\r\nexport const getSupportedMethodIds = (methodIds: string[]): string[] => {\r\n    return methodIds.filter((methodId) => {\r\n        if (methodId === APPLE_PAY && !isApplePayWindow(window)) {\r\n            return false;\r\n        }\r\n\r\n        return SUPPORTED_METHODS.indexOf(methodId) !== -1;\r\n    });\r\n}\r\n","import { ComponentType } from 'react';\r\n\r\nimport { ResolvableComponent } from '.';\r\n\r\nexport default function isResolvableComponent<TProps, TIdentifier>(\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    Component: ComponentType<TProps>,\r\n): Component is ResolvableComponent<TProps, TIdentifier> {\r\n    return 'resolveIds' in Component;\r\n}\r\n","import { ComponentType } from 'react';\r\n\r\nimport {\r\n    CheckoutButtonProps,\r\n    CheckoutButtonResolveId,\r\n} from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nimport { resolveComponent } from '../common/resolver';\r\n\r\nexport default function resolveCheckoutButton(\r\n    resolveId: CheckoutButtonResolveId,\r\n): ComponentType<CheckoutButtonProps> | undefined {\r\n    return resolveComponent<CheckoutButtonResolveId, CheckoutButtonProps>(\r\n        resolveId,\r\n        require('../generated/checkoutButtons'),\r\n    );\r\n}\r\n","import { ComponentType } from 'react';\r\n\r\nimport { isResolvableComponent } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\ninterface ResolveResult<TProps> {\r\n    component: ComponentType<TProps>;\r\n    matches: number;\r\n    default: boolean;\r\n}\r\n\r\nexport default function resolveComponent<TResolveId extends Record<string, unknown>, TProps>(\r\n    query: TResolveId,\r\n    components: Record<string, ComponentType<TProps>>,\r\n): ComponentType<TProps> | undefined {\r\n    const results: Array<ResolveResult<TProps>> = [];\r\n\r\n    for (const [_, Component] of Object.entries(components)) {\r\n        if (!isResolvableComponent<TProps, TResolveId>(Component)) {\r\n            continue;\r\n        }\r\n\r\n        for (const resolverId of Component.resolveIds) {\r\n            const result = { component: Component, matches: 0, default: false };\r\n\r\n            for (const [key, value] of Object.entries(resolverId)) {\r\n                if (key in query && query[key] !== value) {\r\n                    result.matches = 0;\r\n                    break;\r\n                }\r\n\r\n                if (query[key] === value) {\r\n                    result.matches++;\r\n                }\r\n\r\n                if (key === 'default' && value === true) {\r\n                    result.default = true;\r\n                }\r\n            }\r\n\r\n            results.push(result);\r\n        }\r\n    }\r\n\r\n    const matched = results\r\n        .sort((a, b) => b.matches - a.matches)\r\n        .filter((result) => result.matches > 0)[0];\r\n\r\n    return matched?.component ?? results.find((result) => result.default)?.component;\r\n}\r\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\r\nimport { noop } from 'lodash';\r\nimport React, { PureComponent } from 'react';\r\n\r\nconst WALLET_BUTTON_HEIGHT = 36;\r\n\r\nexport interface CheckoutButtonProps {\r\n    containerId: string;\r\n    methodId: string;\r\n    isShowingWalletButtonsOnTop?: boolean;\r\n    deinitialize(options: CustomerRequestOptions): void;\r\n    initialize(options: CustomerInitializeOptions): void;\r\n    onError?(error: Error): void;\r\n    onClick?(methodId: string): void;\r\n}\r\n\r\nexport default class CheckoutButton extends PureComponent<CheckoutButtonProps> {\r\n    componentDidMount() {\r\n        const {\r\n            containerId,\r\n            initialize,\r\n            isShowingWalletButtonsOnTop,\r\n            methodId,\r\n            onError,\r\n            onClick = noop,\r\n        } = this.props;\r\n\r\n        const heightOption = isShowingWalletButtonsOnTop && (methodId === 'braintreepaypal' || methodId === 'braintreepaypalcredit' )\r\n            ? { buttonHeight: WALLET_BUTTON_HEIGHT }\r\n            : {};\r\n\r\n        initialize({\r\n            methodId,\r\n            [methodId]: {\r\n                ...heightOption,\r\n                container: containerId,\r\n                onError,\r\n                onClick: () => onClick(methodId),\r\n            },\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { deinitialize, methodId } = this.props;\r\n\r\n        deinitialize({ methodId });\r\n    }\r\n\r\n    render() {\r\n        const { containerId } = this.props;\r\n\r\n        return <div id={containerId} />;\r\n    }\r\n}\r\n","import { noop } from 'lodash';\r\n\r\nimport { isBuyNowCart } from '../common/utility';\r\n\r\nexport default function navigateToOrderConfirmation(\r\n    orderId?: number,\r\n): Promise<never> {\r\n    let url: string;\r\n\r\n    if (orderId && isBuyNowCart()) {\r\n        url = `/checkout/order-confirmation/${orderId.toString()}`;\r\n    } else {\r\n        url = `${window.location.pathname.replace(/\\/$/, '')}/order-confirmation`;\r\n    }\r\n\r\n    window.location.replace(url);\r\n\r\n    return new Promise(noop);\r\n}\r\n","import { CustomerInitializeOptions } from '@bigcommerce/checkout-sdk';\r\nimport { noop } from 'lodash';\r\nimport React, { FunctionComponent, useCallback, useContext } from 'react';\r\n\r\nimport { LocaleContext } from '@bigcommerce/checkout/locale';\r\n\r\nimport { navigateToOrderConfirmation } from '../../checkout';\r\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\r\n\r\nconst ApplePayButton: FunctionComponent<CheckoutButtonProps> = ({\r\n    initialize,\r\n    onError,\r\n    onClick = noop,\r\n    ...rest\r\n}) => {\r\n    const localeContext = useContext(LocaleContext);\r\n    const initializeOptions = useCallback(\r\n        (options: CustomerInitializeOptions) =>\r\n            initialize({\r\n                ...options,\r\n                applepay: {\r\n                    container: rest.containerId,\r\n                    shippingLabel: localeContext?.language.translate('cart.shipping_text'),\r\n                    subtotalLabel: localeContext?.language.translate('cart.subtotal_text'),\r\n                    onError,\r\n                    onClick: () => onClick(rest.methodId),\r\n                    onPaymentAuthorize: navigateToOrderConfirmation,\r\n                },\r\n            }),\r\n        [initialize, localeContext, onError, rest.containerId],\r\n    );\r\n\r\n    return <CheckoutButton initialize={initializeOptions} {...rest} />;\r\n};\r\n\r\nexport default ApplePayButton;\r\n","import { CustomerInitializeOptions } from '@bigcommerce/checkout-sdk';\r\nimport { noop } from 'lodash';\r\nimport React, { FunctionComponent, useCallback, useContext } from 'react';\r\n\r\nimport { LocaleContext } from '@bigcommerce/checkout/locale';\r\n\r\nimport { navigateToOrderConfirmation } from '../../checkout';\r\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\r\n\r\nconst PayPalCommerceButton: FunctionComponent<CheckoutButtonProps> = ({\r\n    methodId,\r\n    initialize,\r\n    onError,\r\n    onClick = noop,\r\n    ...rest\r\n}) => {\r\n    const localeContext = useContext(LocaleContext);\r\n    const initializeOptions = useCallback(\r\n        (options: CustomerInitializeOptions) =>\r\n            initialize({\r\n                ...options,\r\n                [methodId]: {\r\n                    container: rest.containerId,\r\n                    onError,\r\n                    onClick: () => onClick(methodId),\r\n                    onComplete: navigateToOrderConfirmation,\r\n                },\r\n            }),\r\n        [initialize, localeContext, onError, rest.containerId],\r\n    );\r\n\r\n    return <CheckoutButton initialize={initializeOptions} methodId={methodId} {...rest} />;\r\n};\r\n\r\nexport default PayPalCommerceButton;\r\n","import { CustomerInitializeOptions, CustomerRequestOptions } from \"@bigcommerce/checkout-sdk\";\r\nimport React, { FunctionComponent } from \"react\";\r\n\r\nimport CheckoutButton from \"./CheckoutButton\";\r\nimport { ApplePayButton, PayPalCommerceButton } from \"./customWalletButton\";\r\n\r\ninterface CheckoutButtonV1ResolverProps {\r\n    methodId: string;\r\n    deinitialize(options: CustomerRequestOptions): void;\r\n    isShowingWalletButtonsOnTop?: boolean;\r\n    initialize(options: CustomerInitializeOptions): void;\r\n    onError?(error: Error): void;\r\n    onClick?(methodName: string): void;\r\n}\r\n\r\nconst CheckoutButtonV1Resolver: FunctionComponent<CheckoutButtonV1ResolverProps> = ({\r\n    isShowingWalletButtonsOnTop= false,\r\n    onError,\r\n    methodId,\r\n    ...rest\r\n}) => {\r\n    switch (methodId) {\r\n        case 'applepay':\r\n            return (\r\n                <ApplePayButton\r\n                    containerId={`${methodId}CheckoutButton`}\r\n                    key={methodId}\r\n                    methodId={methodId}\r\n                    onError={onError}\r\n                    {...rest}\r\n                />\r\n            );\r\n\r\n        case 'paypalcommerce':\r\n        case 'paypalcommercecredit':\r\n            return (\r\n                <PayPalCommerceButton\r\n                    containerId={`${methodId}CheckoutButton`}\r\n                    key={methodId}\r\n                    methodId={methodId}\r\n                    onError={onError}\r\n                    {...rest}\r\n                />\r\n            );\r\n    }\r\n\r\n    return <CheckoutButton\r\n            containerId={`${methodId}CheckoutButton`}\r\n            isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\r\n            key={methodId}\r\n            methodId={methodId}\r\n            onError={onError}\r\n            {...rest}\r\n        />;\r\n};\r\n\r\nexport default CheckoutButtonV1Resolver;\r\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { TranslatedString, useLocale } from '@bigcommerce/checkout/locale';\r\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\r\nimport { WalletButtonsContainerSkeleton } from '@bigcommerce/checkout/ui';\r\n\r\n\r\nimport { withCheckout } from '../checkout';\r\n\r\nimport { getSupportedMethodIds } from './getSupportedMethods';\r\nimport resolveCheckoutButton from './resolveCheckoutButton';\r\nimport CheckoutButtonV1Resolver from './WalletButtonV1Resolver';\r\n\r\ninterface CheckoutButtonContainerProps {\r\n    isPaymentStepActive: boolean;\r\n    checkEmbeddedSupport(methodIds: string[]): void;\r\n    onUnhandledError(error: Error): void;\r\n    onWalletButtonClick(methodId: string): void;\r\n}\r\n\r\ninterface WithCheckoutCheckoutButtonContainerProps {\r\n    availableMethodIds: string[];\r\n    checkoutState: CheckoutSelectors;\r\n    checkoutService: CheckoutService;\r\n    isLoading: boolean;\r\n}\r\n\r\nconst paypalCommerceIds = [\r\n    'paypalcommerce',\r\n    'paypalcommercecredit',\r\n    'paypalcommercevenmo',\r\n];\r\n\r\nconst isPayPalCommerce = (methodId: string): boolean => paypalCommerceIds.includes(methodId);\r\n\r\nconst CheckoutButtonContainer: FunctionComponent<CheckoutButtonContainerProps & WithCheckoutCheckoutButtonContainerProps> = (\r\n    {\r\n        availableMethodIds,\r\n        checkoutService,\r\n        checkoutState,\r\n        checkEmbeddedSupport,\r\n        isLoading,\r\n        isPaymentStepActive,\r\n        onUnhandledError,\r\n        onWalletButtonClick,\r\n    }) => {\r\n    const { language } = useLocale();\r\n\r\n    try {\r\n        checkEmbeddedSupport(availableMethodIds);\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n\r\n    const renderButtons = () => availableMethodIds.map((methodId) => {\r\n        if (isPaymentStepActive && isPayPalCommerce(methodId)) {\r\n            return null;\r\n        }\r\n\r\n        const ResolvedCheckoutButton = resolveCheckoutButton({ id: methodId });\r\n\r\n        if (!ResolvedCheckoutButton) {\r\n            return <CheckoutButtonV1Resolver\r\n                deinitialize={checkoutService.deinitializeCustomer}\r\n                initialize={checkoutService.initializeCustomer}\r\n                isShowingWalletButtonsOnTop={true}\r\n                key={methodId}\r\n                methodId={methodId}\r\n                onClick={onWalletButtonClick}\r\n                onError={onUnhandledError}\r\n            />\r\n        }\r\n\r\n        return <ResolvedCheckoutButton\r\n                    checkoutService={checkoutService}\r\n                    checkoutState={checkoutState}\r\n                    containerId={`${methodId}CheckoutButton`}\r\n                    key={methodId}\r\n                    language={language}\r\n                    methodId={methodId}\r\n                    onUnhandledError={onUnhandledError}\r\n                    onWalletButtonClick={onWalletButtonClick}\r\n                />;\r\n    });\r\n\r\n    return (\r\n        <div className='checkout-button-container'\r\n             style={ isPaymentStepActive ? { position: 'absolute', left: '0', top: '-100%' } : undefined }\r\n        >\r\n            <p>\r\n                <TranslatedString id=\"remote.start_with_text\" />\r\n            </p>\r\n            <div className='checkout-buttons-auto-layout'>\r\n                <WalletButtonsContainerSkeleton buttonsCount={availableMethodIds.length} isLoading={isLoading}>\r\n                    <div className=\"checkoutRemote\">\r\n                        {renderButtons()}\r\n                    </div>\r\n                </WalletButtonsContainerSkeleton>\r\n            </div>\r\n            <div className='checkout-separator'><span><TranslatedString id='remote.or_text' /></span></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction mapToCheckoutButtonContainerProps({\r\n    checkoutState,\r\n    checkoutService,\r\n}: CheckoutContextProps): WithCheckoutCheckoutButtonContainerProps | null {\r\n    const {\r\n        data: {\r\n            getConfig,\r\n            getCustomer,\r\n            isPaymentDataRequired,\r\n        },\r\n        statuses: {\r\n            isInitializedCustomer,\r\n        },\r\n        errors: {\r\n            getInitializeCustomerError,\r\n        }\r\n     } = checkoutState;\r\n    const config = getConfig();\r\n    const availableMethodIds = getSupportedMethodIds(config?.checkoutSettings.remoteCheckoutProviders ?? []);\r\n    const customer = getCustomer();\r\n\r\n    if (!isPaymentDataRequired()) {\r\n        return null;\r\n    }\r\n\r\n    if (!config || availableMethodIds.length === 0 || !customer?.isGuest) {\r\n        return null;\r\n    }\r\n\r\n    const isLoading = availableMethodIds.filter(\r\n        (methodId) => Boolean(getInitializeCustomerError(methodId)) || isInitializedCustomer(methodId)\r\n    ).length !== availableMethodIds.length;\r\n\r\n    return {\r\n        checkoutService,\r\n        checkoutState,\r\n        availableMethodIds,\r\n        isLoading,\r\n    }\r\n}\r\n\r\nexport default memo(withCheckout(mapToCheckoutButtonContainerProps)(CheckoutButtonContainer));\r\n","import { useContext, useMemo } from 'react';\r\n\r\nimport AnalyticsContext from './AnalyticsContext';\r\n\r\nconst useAnalytics = () => {\r\n    const analyticsContext = useContext(AnalyticsContext);\r\n\r\n    if (!analyticsContext) {\r\n        throw new Error('useAnalytics must be used within an <AnalyticsProvider>');\r\n    }\r\n\r\n    return useMemo(\r\n        () => ({\r\n            analyticsTracker: analyticsContext.analyticsTracker,\r\n        }),\r\n        [analyticsContext],\r\n    );\r\n};\r\n\r\nexport default useAnalytics;\r\n","import {\r\n    CheckoutSelectors,\r\n    CustomerInitializeOptions,\r\n    CustomerRequestOptions,\r\n    ExecutePaymentMethodCheckoutOptions,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport { noop } from 'lodash';\r\nimport React, { FunctionComponent, memo, useEffect, useState } from 'react';\r\n\r\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\r\nimport { stopPropagation } from '@bigcommerce/checkout/dom-utils';\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { Button } from '../../ui/button';\r\nimport { IconBolt } from '../../ui/icon';\r\n\r\nexport interface BoltCheckoutSuggestionProps {\r\n    isExecutingPaymentMethodCheckout: boolean;\r\n    methodId: string;\r\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\r\n    executePaymentMethodCheckout(\r\n        options: ExecutePaymentMethodCheckoutOptions,\r\n    ): Promise<CheckoutSelectors>;\r\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\r\n    onUnhandledError?(error: Error): void;\r\n}\r\n\r\nconst BoltCheckoutSuggestion: FunctionComponent<BoltCheckoutSuggestionProps> = ({\r\n    isExecutingPaymentMethodCheckout,\r\n    methodId,\r\n    deinitializeCustomer,\r\n    executePaymentMethodCheckout,\r\n    initializeCustomer,\r\n    onUnhandledError = noop,\r\n}) => {\r\n    const [showSuggestion, setShowSuggestion] = useState<boolean>(false);\r\n    const { analyticsTracker } = useAnalytics();\r\n\r\n    useEffect(() => {\r\n        deinitializeCustomer({ methodId });\r\n\r\n        try {\r\n            initializeCustomer({\r\n                methodId,\r\n                bolt: {\r\n                    onInit: (hasBoltAccount, email) => {\r\n                        setShowSuggestion(hasBoltAccount);\r\n\r\n                        if (email) {\r\n                            analyticsTracker.customerSuggestionInit({hasBoltAccount});\r\n                        }\r\n                    },\r\n                },\r\n            });\r\n        } catch (error) {\r\n            onUnhandledError(error);\r\n        }\r\n\r\n        return () => {\r\n            deinitializeCustomer({ methodId });\r\n        };\r\n    }, [initializeCustomer, deinitializeCustomer, methodId, onUnhandledError]);\r\n\r\n    if (!showSuggestion) {\r\n        return null;\r\n    }\r\n\r\n    const handleActionClick = async () => {\r\n        await executePaymentMethodCheckout({ methodId });\r\n    };\r\n\r\n    return (\r\n        <div className=\"checkoutSuggestion\" onClick={stopPropagation()}>\r\n            <p className=\"checkoutSuggestion-message\">\r\n                <TranslatedString\r\n                    data={{\r\n                        provider: 'Bolt',\r\n                        providerFlow: 'Bolt Checkout',\r\n                    }}\r\n                    id=\"customer.suggestion_text\"\r\n                />\r\n            </p>\r\n            <Button\r\n                className=\"checkoutSuggestion-button checkoutSuggestion-button--bolt\"\r\n                data-test=\"suggestion-action-button\"\r\n                isLoading={isExecutingPaymentMethodCheckout}\r\n                onClick={handleActionClick}\r\n            >\r\n                <IconBolt additionalClassName=\"checkoutSuggestion-button-icon--bolt\" />\r\n                <TranslatedString\r\n                    data={{ providerFlow: 'Bolt Checkout' }}\r\n                    id=\"customer.suggestion_action\"\r\n                />\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(BoltCheckoutSuggestion);\r\n","import { SyntheticEvent } from 'react';\r\n\r\nexport default function stopPropagation<\r\n    TFunc extends (event: TEvent, ...args: any[]) => any,\r\n    TEvent extends SyntheticEvent,\r\n>(fn?: TFunc): (event: TEvent) => void {\r\n    return (event) => {\r\n        event.stopPropagation();\r\n\r\n        if (fn) {\r\n            fn(event);\r\n        }\r\n    };\r\n}\r\n","import {\r\n    CheckoutSelectors,\r\n    CustomerInitializeOptions,\r\n    CustomerRequestOptions,\r\n    ExecutePaymentMethodCheckoutOptions,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\r\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nimport { withCheckout } from '../../checkout';\r\nimport { PaymentMethodId } from '../../payment/paymentMethod';\r\n\r\n\r\nimport BoltCheckoutSuggestion from './BoltCheckoutSuggestion';\r\n\r\nexport interface CheckoutSuggestionProps {\r\n    onUnhandledError?(error: Error): void;\r\n}\r\n\r\nexport interface WithCheckoutSuggestionsProps {\r\n    isExecutingPaymentMethodCheckout: boolean;\r\n    providerWithCustomCheckout?: string;\r\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\r\n    executePaymentMethodCheckout(\r\n        options: ExecutePaymentMethodCheckoutOptions,\r\n    ): Promise<CheckoutSelectors>;\r\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\r\n}\r\n\r\nconst CheckoutSuggestion: FunctionComponent<\r\n    WithCheckoutSuggestionsProps & CheckoutSuggestionProps\r\n> = ({\r\n    providerWithCustomCheckout,\r\n    executePaymentMethodCheckout,\r\n    ...rest\r\n}) => {\r\n    const { analyticsTracker } = useAnalytics();\r\n\r\n    const handleExecutePaymentMethodCheckout = (options: ExecutePaymentMethodCheckoutOptions) => {\r\n        analyticsTracker.customerSuggestionExecute();\r\n\r\n        return executePaymentMethodCheckout(options);\r\n    }\r\n\r\n    if (providerWithCustomCheckout === PaymentMethodId.Bolt) {\r\n        return <BoltCheckoutSuggestion\r\n                    executePaymentMethodCheckout={handleExecutePaymentMethodCheckout}\r\n                    methodId={providerWithCustomCheckout}\r\n                    {...rest}\r\n                />;\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nconst mapToCheckoutSuggestionProps = ({\r\n    checkoutService,\r\n    checkoutState,\r\n}: CheckoutContextProps): WithCheckoutSuggestionsProps | null => {\r\n    const {\r\n        data: { getCheckout, getConfig },\r\n        statuses: { isExecutingPaymentMethodCheckout },\r\n    } = checkoutState;\r\n\r\n    const checkout = getCheckout();\r\n    const config = getConfig();\r\n\r\n    if (!checkout || !config) {\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\r\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\r\n        initializeCustomer: checkoutService.initializeCustomer,\r\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\r\n        providerWithCustomCheckout: config.checkoutSettings.providerWithCustomCheckout || undefined,\r\n    };\r\n};\r\n\r\nexport default withCheckout(mapToCheckoutSuggestionProps)(memo(CheckoutSuggestion));\r\n","import React, { FunctionComponent, useEffect } from 'react';\r\n\r\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\r\n\r\nconst AmazonPayV2Button: FunctionComponent<CheckoutButtonProps> = (props) => {\r\n    useEffect(() => {\r\n        beautifyAmazonButton();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"AmazonPayContainer\">\r\n            <CheckoutButton {...props} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AmazonPayV2Button;\r\n\r\nconst beautifyAmazonButton = (): void => {\r\n    if (!document.querySelector('.checkout-button-container')) {\r\n        return;\r\n    }\r\n\r\n    const container = document.querySelector('#amazonpayCheckoutButton > div') as unknown as HTMLElement;\r\n    const amazonButton = container?.shadowRoot?.querySelector('.amazonpay-button-view1') as unknown as HTMLElement;\r\n\r\n    if (container && amazonButton) {\r\n        amazonButton.style.height = '36px';\r\n\r\n        return;\r\n    }\r\n\r\n    setTimeout(beautifyAmazonButton, 10);\r\n}\r\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { isApplePayWindow } from '../common/utility';\r\n\r\nimport CheckoutButton from './CheckoutButton';\r\nimport { AmazonPayV2Button, ApplePayButton, PayPalCommerceButton } from './customWalletButton';\r\n\r\nconst APPLE_PAY = 'applepay';\r\n\r\n// TODO: The API should tell UI which payment method offers its own checkout button\r\nexport const SUPPORTED_METHODS: string[] = [\r\n    'amazonpay',\r\n    APPLE_PAY,\r\n    'braintreevisacheckout',\r\n    'braintreepaypal',\r\n    'braintreepaypalcredit',\r\n    'chasepay',\r\n    'masterpass',\r\n    'paypalcommerce',\r\n    'paypalcommercevenmo',\r\n    'paypalcommercecredit',\r\n    'googlepayadyenv2',\r\n    'googlepayadyenv3',\r\n    'googlepayauthorizenet',\r\n    'googlepaybnz',\r\n    'googlepaybraintree',\r\n    'googlepaypaypalcommerce',\r\n    'googlepaycheckoutcom',\r\n    'googlepaycybersourcev2',\r\n    'googlepayorbital',\r\n    'googlepaystripe',\r\n    'googlepaystripeupe',\r\n    'googlepayworldpayaccess',\r\n];\r\n\r\nexport interface CheckoutButtonListProps {\r\n    methodIds?: string[];\r\n    isInitializing?: boolean;\r\n    isShowingWalletButtonsOnTop?: boolean;\r\n    hideText?: boolean;\r\n    checkEmbeddedSupport?(methodIds: string[]): void;\r\n    deinitialize(options: CustomerRequestOptions): void;\r\n    initialize(options: CustomerInitializeOptions): void;\r\n    onError?(error: Error): void;\r\n    onClick?(methodId: string): void;\r\n}\r\n\r\nexport const filterUnsupportedMethodIds = (methodIds:string[]): string[] => {\r\n    return (methodIds).filter((methodId) => {\r\n        if (methodId === APPLE_PAY && !isApplePayWindow(window)) {\r\n            return false;\r\n        }\r\n\r\n        return SUPPORTED_METHODS.indexOf(methodId) !== -1;\r\n    });\r\n}\r\n\r\nconst CheckoutButtonList: FunctionComponent<CheckoutButtonListProps> = ({\r\n    checkEmbeddedSupport,\r\n    onError,\r\n    isInitializing = false,\r\n    isShowingWalletButtonsOnTop= false,\r\n    methodIds,\r\n    hideText = false,\r\n    ...rest\r\n}) => {\r\n    const supportedMethodIds = filterUnsupportedMethodIds(methodIds ?? []);\r\n\r\n    if (supportedMethodIds.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    if (checkEmbeddedSupport) {\r\n        try {\r\n            checkEmbeddedSupport(supportedMethodIds);\r\n        } catch (error) {\r\n            if (error instanceof Error && onError) {\r\n                onError(error);\r\n            } else {\r\n                throw error;\r\n            }\r\n\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!isInitializing && !hideText && (\r\n                <p>\r\n                    <TranslatedString id=\"remote.continue_with_text\" />\r\n                </p>\r\n            )}\r\n\r\n            <div className=\"checkoutRemote\">\r\n                {supportedMethodIds.map((methodId) => {\r\n                    if (methodId === 'applepay') {\r\n                        return (\r\n                            <ApplePayButton\r\n                                containerId={`${methodId}CheckoutButton`}\r\n                                key={methodId}\r\n                                methodId={methodId}\r\n                                onError={onError}\r\n                                {...rest}\r\n                            />\r\n                        );\r\n                    }\r\n\r\n                    if (methodId === 'amazonpay') {\r\n                        return (\r\n                            <AmazonPayV2Button\r\n                                containerId={`${methodId}CheckoutButton`}\r\n                                key={methodId}\r\n                                methodId={methodId}\r\n                                onError={onError}\r\n                                {...rest}\r\n                            />\r\n                        );\r\n                    }\r\n\r\n                    if (methodId === 'paypalcommerce' || methodId === 'paypalcommercecredit') {\r\n                        return (\r\n                            <PayPalCommerceButton\r\n                                containerId={`${methodId}CheckoutButton`}\r\n                                key={methodId}\r\n                                methodId={methodId}\r\n                                onError={onError}\r\n                                {...rest}\r\n                            />\r\n                        );\r\n                    }\r\n\r\n                    return (\r\n                        <CheckoutButton\r\n                            containerId={`${methodId}CheckoutButton`}\r\n                            isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\r\n                            key={methodId}\r\n                            methodId={methodId}\r\n                            onError={onError}\r\n                            {...rest}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default memo(CheckoutButtonList);\r\n","import { Checkout, Customer } from '@bigcommerce/checkout-sdk';\r\nimport { every } from 'lodash';\r\n\r\nimport { SUPPORTED_METHODS } from './CheckoutButtonList';\r\n\r\nconst SUPPORTED_SIGNOUT_METHODS = ['amazonpay'];\r\n\r\nexport const isSupportedSignoutMethod = (methodId: string): boolean => {\r\n    return SUPPORTED_SIGNOUT_METHODS.indexOf(methodId) > -1;\r\n};\r\n\r\nexport default function canSignOut(\r\n    customer: Customer,\r\n    checkout: Checkout,\r\n    methodId: string,\r\n): boolean {\r\n    if (isSupportedSignoutMethod(methodId)) {\r\n        return true;\r\n    }\r\n\r\n    if (customer.isGuest) {\r\n        return false;\r\n    }\r\n\r\n    // Return false if payment method offers its own checkout button\r\n    return every(\r\n        checkout.payments,\r\n        (payment) => SUPPORTED_METHODS.indexOf(payment.providerId) === -1,\r\n    );\r\n}\r\n","import { CheckoutSelectors, CustomerRequestOptions, CustomError } from '@bigcommerce/checkout-sdk';\r\nimport { noop } from 'lodash';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nimport { withCheckout } from '../checkout';\r\nimport { isErrorWithType } from '../common/error';\r\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\r\n\r\nimport canSignOut, { isSupportedSignoutMethod } from './canSignOut';\r\n\r\nexport interface CustomerInfoProps {\r\n    onSignOut?(event: CustomerSignOutEvent): void;\r\n    onSignOutError?(error: CustomError): void;\r\n}\r\n\r\nexport interface CustomerSignOutEvent {\r\n    isCartEmpty: boolean;\r\n}\r\n\r\ninterface WithCheckoutCustomerInfoProps {\r\n    email: string;\r\n    methodId: string;\r\n    isSignedIn: boolean;\r\n    isSigningOut: boolean;\r\n    signOut(options?: CustomerRequestOptions): Promise<CheckoutSelectors>;\r\n}\r\n\r\nconst CustomerInfo: FunctionComponent<CustomerInfoProps & WithCheckoutCustomerInfoProps> = ({\r\n    email,\r\n    methodId,\r\n    isSignedIn,\r\n    isSigningOut,\r\n    onSignOut = noop,\r\n    onSignOutError = noop,\r\n    signOut,\r\n}) => {\r\n    const handleSignOut: () => Promise<void> = async () => {\r\n        try {\r\n            if (isSupportedSignoutMethod(methodId)) {\r\n                await signOut({ methodId });\r\n                onSignOut({ isCartEmpty: false });\r\n                window.location.reload();\r\n            } else {\r\n                await signOut();\r\n                onSignOut({ isCartEmpty: false });\r\n            }\r\n        } catch (error) {\r\n            if (isErrorWithType(error) && error.type === 'checkout_not_available') {\r\n                onSignOut({ isCartEmpty: true });\r\n            } else {\r\n                onSignOutError(error);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"customerView\" data-test=\"checkout-customer-info\">\r\n            <div\r\n                className=\"customerView-body optimizedCheckout-contentPrimary\"\r\n                data-test=\"customer-info\"\r\n            >\r\n                {email}\r\n            </div>\r\n\r\n            <div className=\"customerView-actions\">\r\n                {isSignedIn && (\r\n                    <Button\r\n                        isLoading={isSigningOut}\r\n                        onClick={handleSignOut}\r\n                        size={ButtonSize.Tiny}\r\n                        testId=\"sign-out-link\"\r\n                        variant={ButtonVariant.Secondary}\r\n                    >\r\n                        <TranslatedString id=\"customer.sign_out_action\" />\r\n                    </Button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction mapToWithCheckoutCustomerInfoProps({\r\n    checkoutService,\r\n    checkoutState,\r\n}: CheckoutContextProps): WithCheckoutCustomerInfoProps | null {\r\n    const {\r\n        data: { getBillingAddress, getCheckout, getCustomer },\r\n        statuses: { isSigningOut },\r\n    } = checkoutState;\r\n\r\n    const billingAddress = getBillingAddress();\r\n    const checkout = getCheckout();\r\n    const customer = getCustomer();\r\n\r\n    if (!billingAddress || !checkout || !customer) {\r\n        return null;\r\n    }\r\n\r\n    const methodId =\r\n        checkout.payments && checkout.payments.length === 1 ? checkout.payments[0].providerId : '';\r\n\r\n    return {\r\n        email: billingAddress.email || customer.email,\r\n        methodId,\r\n        isSignedIn: canSignOut(customer, checkout, methodId),\r\n        isSigningOut: isSigningOut(),\r\n        signOut: checkoutService.signOutCustomer,\r\n    };\r\n}\r\n\r\nexport default withCheckout(mapToWithCheckoutCustomerInfoProps)(CustomerInfo);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\r\n\r\nconst CustomerSkeleton: FunctionComponent<LoadingSkeletonProps> = ({ children, isLoading }) => {\r\n    const skeleton = (\r\n        <div className=\"checkout-form customer-skeleton\">\r\n            <div className=\"customerEmail-container\">\r\n                <div className=\"customerEmail-body\">\r\n                    <div className=\"skeleton-container\">\r\n                        <div className=\"input-skeleton\" />\r\n                    </div>\r\n                    <div className=\"button-skeleton skeleton-container subscription-skeleton\" />\r\n                </div>\r\n                <div className=\"customerEmail-action customerEmail-floating--enabled\">\r\n                    <div className=\"button-skeleton skeleton-container\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\r\n};\r\n\r\nexport default CustomerSkeleton;\r\n","// NOTE: This is a legacy regex used to create accounts, more flexible than the current used one\r\n// we need to keep this regex for login validation as accounts might have been created using this regex\r\nexport const EMAIL_REGEXP =\r\n    /^[a-z0-9!#$%&'*+/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\r\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\r\nimport { object, ObjectSchema, string } from 'yup';\r\n\r\nimport { EMAIL_REGEXP } from './validationPatterns';\r\n\r\nexport interface EmailValidationSchemaOptions {\r\n    language: LanguageService;\r\n}\r\n\r\nexport default function getEmailValidationSchema({\r\n    language,\r\n}: EmailValidationSchemaOptions): ObjectSchema<{ email: string }> {\r\n    return object({\r\n        email: string()\r\n            .max(256)\r\n            .matches(EMAIL_REGEXP, language.translate('customer.email_invalid_error'))\r\n            .required(language.translate('customer.email_required_error')),\r\n    });\r\n}\r\n","import { FormField, LanguageService } from '@bigcommerce/checkout-sdk';\r\nimport { memoize } from '@bigcommerce/memoize';\r\nimport { object, ObjectSchema, string } from 'yup';\r\n\r\nimport {\r\n    CustomFormFieldValues,\r\n    getCustomFormFieldsValidationSchema,\r\n    TranslateValidationErrorFunction,\r\n} from '../formFields';\r\n\r\nimport getEmailValidationSchema from './getEmailValidationSchema';\r\nimport { PasswordRequirements } from './getPasswordRequirements';\r\n\r\nexport type CreateAccountFormValues = {\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    password: string;\r\n    acceptsMarketingEmails?: string[];\r\n    token?: string;\r\n} & CustomFormFieldValues;\r\n\r\nexport interface CreateCustomerValidationSchema {\r\n    formFields: FormField[];\r\n    language: LanguageService;\r\n    passwordRequirements: PasswordRequirements;\r\n}\r\n\r\nfunction getTranslateCreateCustomerError(\r\n    language?: LanguageService,\r\n): TranslateValidationErrorFunction {\r\n    return (type, { label, min, max }) => {\r\n        if (!language) {\r\n            return;\r\n        }\r\n\r\n        if (type === 'required') {\r\n            return language.translate('customer.required_error', { label });\r\n        }\r\n\r\n        if (type === 'max' && max) {\r\n            return language.translate('customer.max_error', { label, max });\r\n        }\r\n\r\n        if (type === 'min' && min) {\r\n            return language.translate('customer.min_error', { label, min });\r\n        }\r\n\r\n        if (type === 'invalid') {\r\n            return language.translate('customer.invalid_characters_error', { label });\r\n        }\r\n    };\r\n}\r\n\r\nexport default memoize(function getCreateCustomerValidationSchema({\r\n    formFields,\r\n    language,\r\n    passwordRequirements: { description, numeric, alpha, minLength },\r\n}: CreateCustomerValidationSchema): ObjectSchema<CreateAccountFormValues> {\r\n    return object({\r\n        firstName: string().required(language.translate('address.first_name_required_error')),\r\n        lastName: string().required(language.translate('address.last_name_required_error')),\r\n        password: string()\r\n            .required(language.translate('customer.password_required_error') || description)\r\n            .matches(\r\n                numeric,\r\n                language.translate('customer.password_number_required_error') || description,\r\n            )\r\n            .matches(\r\n                alpha,\r\n                language.translate('customer.password_letter_required_error') || description,\r\n            )\r\n            .min(\r\n                minLength,\r\n                language.translate('customer.password_under_minimum_length_error') || description,\r\n            )\r\n            .max(100, language.translate('customer.password_over_maximum_length_error')),\r\n    })\r\n        .concat(getEmailValidationSchema({ language }))\r\n        .concat(\r\n            getCustomFormFieldsValidationSchema({\r\n                formFields,\r\n                translate: getTranslateCreateCustomerError(language),\r\n            }),\r\n        );\r\n});\r\n","import { FormField } from '@bigcommerce/checkout-sdk';\r\nimport { FormikProps, withFormik } from 'formik';\r\nimport { noop } from 'lodash';\r\nimport React, { FunctionComponent, useMemo } from 'react';\r\n\r\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\r\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\r\n\r\nimport { isRequestError } from '../common/error';\r\nimport { Alert, AlertType } from '../ui/alert';\r\nimport { Button, ButtonVariant } from '../ui/button';\r\nimport { DynamicFormField, Fieldset, Form } from '../ui/form';\r\n\r\nimport getCreateCustomerValidationSchema, {\r\n    CreateAccountFormValues,\r\n} from './getCreateCustomerValidationSchema';\r\nimport getPasswordRequirements from './getPasswordRequirements';\r\nimport './CreateAccountForm.scss';\r\n\r\nexport interface CreateAccountFormProps {\r\n    formFields: FormField[];\r\n    createAccountError?: Error;\r\n    fixNewsletterCheckboxExperimentEnabled: boolean;\r\n    isCreatingAccount?: boolean;\r\n    isExecutingPaymentMethodCheckout?: boolean;\r\n    requiresMarketingConsent: boolean;\r\n    defaultShouldSubscribe: boolean;\r\n    isFloatingLabelEnabled?: boolean;\r\n    onCancel?(): void;\r\n    onSubmit(values: CreateAccountFormValues): void;\r\n}\r\n\r\nfunction getAcceptsMarketingEmailsDefault(defaultShouldSubscribe: boolean, requiresMarketingConsent: boolean): string[] {\r\n    if (defaultShouldSubscribe) {\r\n        return ['1'];\r\n    }\r\n\r\n    return requiresMarketingConsent ? [] : ['0'];\r\n}\r\n\r\nfunction transformFormFieldsData(formFields: FormField[], defaultShouldSubscribe: boolean): FormField[] {\r\n    return formFields.map(field => {\r\n        if (field.name === 'acceptsMarketingEmails') {\r\n            const { options } = field;\r\n            const items = options?.items || [];\r\n            \r\n            const updatedItems = items.map(item => {\r\n                return {\r\n                    value: defaultShouldSubscribe ? '1' : item.value,\r\n                    label: item.label,\r\n                }\r\n            });\r\n\r\n            return {\r\n                ...field,\r\n                options: {\r\n                    items: updatedItems,\r\n                }\r\n            }\r\n        }\r\n\r\n        return field;\r\n    });\r\n}\r\n\r\nconst CreateAccountForm: FunctionComponent<\r\n    CreateAccountFormProps & WithLanguageProps & FormikProps<CreateAccountFormValues>\r\n> = ({ fixNewsletterCheckboxExperimentEnabled, formFields, createAccountError, isCreatingAccount, isExecutingPaymentMethodCheckout, onCancel, isFloatingLabelEnabled, defaultShouldSubscribe }) => {\r\n    const createAccountErrorMessage = useMemo(() => {\r\n        if (!createAccountError) {\r\n            return;\r\n        }\r\n\r\n        if (isRequestError(createAccountError) && createAccountError.status === 409) {\r\n            const splitMessage = createAccountError.message.split(':');\r\n\r\n            if (splitMessage.length > 1) {\r\n                return (\r\n                    <TranslatedString\r\n                        data={{ email: splitMessage[1].trim() }}\r\n                        id=\"customer.email_in_use_text\"\r\n                    />\r\n                );\r\n            }\r\n\r\n            return <TranslatedString id=\"customer.unknown_email_in_use_text\" />;\r\n        }\r\n\r\n        return createAccountError.message;\r\n    }, [createAccountError]);\r\n\r\n    const fields = fixNewsletterCheckboxExperimentEnabled ?\r\n        transformFormFieldsData(formFields, defaultShouldSubscribe): formFields;\r\n\r\n    return (\r\n        <Form\r\n            className=\"checkout-form\"\r\n            id=\"checkout-customer-returning\"\r\n            testId=\"checkout-customer-returning\"\r\n        >\r\n            <Fieldset>\r\n                {createAccountErrorMessage && (\r\n                    <Alert type={AlertType.Error}>{createAccountErrorMessage}</Alert>\r\n                )}\r\n                <div className=\"create-account-form\">\r\n                    {fields.map((field) => (\r\n                        <DynamicFormField\r\n                            autocomplete={field.name}\r\n                            extraClass={`dynamic-form-field--${field.name}`}\r\n                            field={field}\r\n                            isFloatingLabelEnabled={isFloatingLabelEnabled}\r\n                            key={field.id}\r\n                            parentFieldName={field.custom ? 'customFields' : undefined}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </Fieldset>\r\n\r\n            <div className=\"form-actions\">\r\n                <Button\r\n                    disabled={isCreatingAccount || isExecutingPaymentMethodCheckout}\r\n                    id=\"checkout-customer-create\"\r\n                    isLoading={isCreatingAccount || isExecutingPaymentMethodCheckout}\r\n                    testId=\"customer-continue-create\"\r\n                    type=\"submit\"\r\n                    variant={ButtonVariant.Primary}\r\n                >\r\n                    <TranslatedString id=\"customer.create_account_action\" />\r\n                </Button>\r\n\r\n                <a\r\n                    className=\"button optimizedCheckout-buttonSecondary\"\r\n                    data-test=\"customer-cancel-button\"\r\n                    href=\"#\"\r\n                    id=\"checkout-customer-cancel\"\r\n                    onClick={preventDefault(onCancel)}\r\n                >\r\n                    <TranslatedString id=\"common.cancel_action\" />\r\n                </a>\r\n            </div>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default withLanguage(\r\n    withFormik<CreateAccountFormProps & WithLanguageProps, CreateAccountFormValues>({\r\n        handleSubmit: (values, { props: { onSubmit = noop } }) => {\r\n            onSubmit(values);\r\n        },\r\n        mapPropsToValues: ({ defaultShouldSubscribe, requiresMarketingConsent }) => ({\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            password: '',\r\n            customFields: {},\r\n            acceptsMarketingEmails: getAcceptsMarketingEmailsDefault(defaultShouldSubscribe, requiresMarketingConsent),\r\n        }),\r\n        validationSchema: ({\r\n            language,\r\n            formFields,\r\n        }: CreateAccountFormProps & WithLanguageProps) => {\r\n            const passwordRequirements = formFields.find(\r\n                ({ requirements }) => requirements,\r\n            )?.requirements;\r\n\r\n            if (!passwordRequirements) {\r\n                throw new Error('Password requirements missing');\r\n            }\r\n\r\n            const schema = getCreateCustomerValidationSchema({\r\n                language,\r\n                formFields,\r\n                passwordRequirements: getPasswordRequirements(passwordRequirements),\r\n            });\r\n\r\n            return schema;\r\n        },\r\n    })(CreateAccountForm),\r\n);\r\n","import { FieldProps } from 'formik';\r\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { FormField, TextInput } from '../ui/form';\r\n\r\nexport interface EmailFieldProps {\r\n    isFloatingLabelEnabled?: boolean;\r\n    onChange?(value: string): void;\r\n}\r\n\r\nconst EmailField: FunctionComponent<EmailFieldProps> = ({ onChange, isFloatingLabelEnabled }) => {\r\n    const renderInput = useCallback(\r\n        (props: FieldProps) => (\r\n            <TextInput\r\n                {...props.field}\r\n                autoComplete={props.field.name}\r\n                id={props.field.name}\r\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\r\n                type=\"email\"\r\n            />\r\n        ),\r\n        [isFloatingLabelEnabled],\r\n    );\r\n\r\n    const labelContent = useMemo(() => <TranslatedString id=\"customer.email_label\" />, []);\r\n\r\n    return (\r\n        <FormField\r\n            input={renderInput}\r\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\r\n            labelContent={labelContent}\r\n            name=\"email\"\r\n            onChange={onChange}\r\n        />\r\n    );\r\n};\r\n\r\nexport default memo(EmailField);\r\n","import { SignInEmail } from '@bigcommerce/checkout-sdk';\r\nimport { FormikProps, withFormik } from 'formik';\r\nimport { noop } from 'lodash';\r\nimport React, { FunctionComponent, memo, useMemo } from 'react';\r\n\r\nimport {\r\n    TranslatedHtml,\r\n    TranslatedLink,\r\n    TranslatedString,\r\n    withLanguage,\r\n    WithLanguageProps,\r\n} from '@bigcommerce/checkout/locale';\r\n\r\nimport { Alert, AlertType } from '../ui/alert';\r\nimport { Button, ButtonVariant } from '../ui/button';\r\nimport { Form } from '../ui/form';\r\nimport { LoadingSpinner } from '../ui/loading';\r\nimport { Modal, ModalHeader } from '../ui/modal';\r\n\r\nimport EmailField from './EmailField';\r\nimport getEmailValidationSchema from './getEmailValidationSchema';\r\n\r\nexport interface EmailLoginFormProps {\r\n    email?: string;\r\n    isOpen: boolean;\r\n    isSendingEmail?: boolean;\r\n    emailHasBeenRequested?: boolean;\r\n    sentEmail?: SignInEmail;\r\n    sentEmailError?: any;\r\n    isFloatingLabelEnabled?: boolean;\r\n    onRequestClose?(): void;\r\n    onSendLoginEmail?(values: EmailLoginFormValues): void;\r\n}\r\n\r\nexport interface EmailLoginFormValues {\r\n    email: string;\r\n}\r\n\r\nconst EmailLoginForm: FunctionComponent<\r\n    EmailLoginFormProps & WithLanguageProps & FormikProps<EmailLoginFormValues>\r\n> = ({\r\n    email,\r\n    isOpen,\r\n    isSendingEmail = false,\r\n    emailHasBeenRequested,\r\n    onRequestClose = noop,\r\n    sentEmailError,\r\n    sentEmail,\r\n    submitForm,\r\n    isFloatingLabelEnabled,\r\n    values: { email: formEmail },\r\n}) => {\r\n    const modalHeaderStringId = useMemo(() => {\r\n        if (emailHasBeenRequested) {\r\n            if (sentEmailError) {\r\n                return 'common.error_heading';\r\n            }\r\n\r\n            return 'login_email.sent_header';\r\n        }\r\n\r\n        if (email) {\r\n            return 'login_email.header_with_email';\r\n        }\r\n\r\n        return 'login_email.header';\r\n    }, [emailHasBeenRequested, sentEmailError, email]);\r\n\r\n    const okButton = useMemo(\r\n        () => (\r\n            <div className=\"modal-footer\">\r\n                <Button onClick={onRequestClose}>\r\n                    <TranslatedString id=\"common.ok_action\" />\r\n                </Button>\r\n            </div>\r\n        ),\r\n        [onRequestClose],\r\n    );\r\n\r\n    const footer = useMemo(() => {\r\n        if (sentEmailError && sentEmailError.status === 429) {\r\n            return okButton;\r\n        }\r\n\r\n        if (emailHasBeenRequested && !sentEmailError) {\r\n            if (isSendingEmail) {\r\n                return <LoadingSpinner isLoading />;\r\n            }\r\n\r\n            if (sentEmail && sentEmail.sent_email === 'reset_password') {\r\n                return okButton;\r\n            }\r\n\r\n            return (\r\n                <p>\r\n                    <TranslatedLink id=\"login_email.resend_link\" onClick={submitForm} />\r\n                    <TranslatedLink id=\"login_email.use_password_link\" onClick={onRequestClose} />\r\n                </p>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"modal-footer\">\r\n                <Button\r\n                    className=\"optimizedCheckout-buttonSecondary\"\r\n                    onClick={onRequestClose}\r\n                    type=\"button\"\r\n                >\r\n                    <TranslatedString id=\"common.cancel_action\" />\r\n                </Button>\r\n                <Button isLoading={isSendingEmail} type=\"submit\" variant={ButtonVariant.Primary}>\r\n                    <TranslatedString id=\"login_email.send\" />\r\n                </Button>\r\n            </div>\r\n        );\r\n    }, [\r\n        sentEmailError,\r\n        emailHasBeenRequested,\r\n        okButton,\r\n        submitForm,\r\n        isSendingEmail,\r\n        onRequestClose,\r\n        sentEmail,\r\n    ]);\r\n\r\n    const error = useMemo(() => {\r\n        if (!sentEmailError) {\r\n            return null;\r\n        }\r\n\r\n        const { status } = sentEmailError;\r\n\r\n        return (\r\n            <Alert type={AlertType.Error}>\r\n                {status === 429 ? (\r\n                    <TranslatedString id=\"login_email.error_temporary_disabled\" />\r\n                ) : (\r\n                    <TranslatedString\r\n                        id={\r\n                            status === 404\r\n                                ? 'login_email.error_not_found'\r\n                                : 'login_email.error_server'\r\n                        }\r\n                    />\r\n                )}\r\n            </Alert>\r\n        );\r\n    }, [sentEmailError]);\r\n\r\n    const form = useMemo(() => {\r\n        if (sentEmailError && sentEmailError.status === 429) {\r\n            return null;\r\n        }\r\n\r\n        if (emailHasBeenRequested && sentEmail && !sentEmailError) {\r\n            const { expiry, sent_email } = sentEmail;\r\n\r\n            return (\r\n                <p>\r\n                    <TranslatedHtml\r\n                        data={{\r\n                            minutes: Math.round(expiry / 60),\r\n                        }}\r\n                        id={\r\n                            sent_email === 'sign_in'\r\n                                ? 'login_email.sent_text'\r\n                                : 'customer.reset_password_before_login_error'\r\n                        }\r\n                    />\r\n                </p>\r\n            );\r\n        }\r\n\r\n        if (emailHasBeenRequested && !sentEmail) {\r\n            return <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} />;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <p>\r\n                    <TranslatedString id=\"login_email.text\" />\r\n                </p>\r\n                <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} />\r\n            </>\r\n        );\r\n    }, [sentEmailError, emailHasBeenRequested, sentEmail, formEmail]);\r\n\r\n    return (\r\n        <Modal\r\n            additionalBodyClassName=\"modal--withText\"\r\n            additionalModalClassName=\"modal--medium\"\r\n            header={\r\n                <ModalHeader>\r\n                    <TranslatedString id={modalHeaderStringId} />\r\n                </ModalHeader>\r\n            }\r\n            isOpen={isOpen}\r\n            onRequestClose={onRequestClose}\r\n            shouldShowCloseButton={true}\r\n        >\r\n            <Form>\r\n                <LoadingSpinner isLoading={isSendingEmail && !email} />\r\n                {error}\r\n                {form}\r\n                {footer}\r\n            </Form>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default withLanguage(\r\n    withFormik<EmailLoginFormProps & WithLanguageProps, EmailLoginFormValues>({\r\n        mapPropsToValues: ({ email = '' }) => ({\r\n            email,\r\n        }),\r\n        handleSubmit: (values, { props: { onSendLoginEmail = noop } }) => {\r\n            onSendLoginEmail(values);\r\n        },\r\n        validationSchema: ({ language }: WithLanguageProps) =>\r\n            getEmailValidationSchema({ language }),\r\n    })(memo(EmailLoginForm)),\r\n);\r\n","import { FastlaneHostWindow } from './types';\r\n\r\nexport default function isFastlaneHostWindow(window: Window): window is FastlaneHostWindow {\r\n    /* eslint-disable no-prototype-builtins */\r\n    return window.hasOwnProperty('paypalFastlane') || window.hasOwnProperty('braintreeFastlane');\r\n}\r\n","import React, { FunctionComponent, useEffect } from 'react';\r\n\r\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nimport isBraintreeFastlaneMethod from './is-braintree-fastlane-method';\r\nimport isFastlaneHostWindow from './is-fastlane-window';\r\nimport isPayPalFastlaneMethod from './is-paypal-fastlane-method';\r\nimport { FastlanePrivacySettings } from './types';\r\n\r\nimport './PayPalFastlaneWatermark.scss';\r\n\r\nconst PayPalFastlaneWatermark: FunctionComponent = () => {\r\n    const { checkoutState } = useCheckout();\r\n    const { getPaymentMethod, getConfig } = checkoutState.data;\r\n    const providerWithCustomCheckout = getConfig()?.checkoutSettings?.providerWithCustomCheckout;\r\n\r\n    const paymentMethod =\r\n        providerWithCustomCheckout &&\r\n        isPayPalFastlaneMethod(providerWithCustomCheckout) &&\r\n        getPaymentMethod(providerWithCustomCheckout);\r\n\r\n    const shouldRenderFastlaneWatermark =\r\n        !!paymentMethod &&\r\n        isFastlaneHostWindow(window) &&\r\n        paymentMethod?.initializationData?.isFastlanePrivacySettingEnabled;\r\n\r\n    useEffect(() => {\r\n        if(shouldRenderFastlaneWatermark && isFastlaneHostWindow(window)) {\r\n            const fastlane = isBraintreeFastlaneMethod(providerWithCustomCheckout)\r\n                ? window.braintreeFastlane\r\n                : window.paypalFastlane;\r\n\r\n            fastlane.FastlaneWatermarkComponent({\r\n                includeAdditionalInfo: true,\r\n            })\r\n                .then((result: FastlanePrivacySettings) => {\r\n                    result.render('#paypalFastlaneWatermark');\r\n                });\r\n        }\r\n    }, []);\r\n\r\n    if (shouldRenderFastlaneWatermark) {\r\n        return (\r\n            <div className='paypalFastlaneWatermark-container'>\r\n                <div id='paypalFastlaneWatermark' data-test='paypalFastlaneWatermark' />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return <></>;\r\n}\r\n\r\nexport default PayPalFastlaneWatermark;\r\n","import React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\r\n\r\nimport { CheckboxFormField, Fieldset } from '../ui/form';\r\n\r\nconst PrivacyPolicyCheckboxFieldLink: FunctionComponent<{ url: string }> = ({ url }) => (\r\n    <CheckboxFormField\r\n        labelContent={<TranslatedHtml data={{ url }} id=\"privacy_policy.label\" />}\r\n        name=\"privacyPolicy\"\r\n        testId=\"privacy-policy-checkbox\"\r\n    />\r\n);\r\n\r\nconst PrivacyPolicyFieldset: FunctionComponent<{ url: string }> = ({ url }) => (\r\n    <Fieldset additionalClassName=\"checkout-privacy-policy\">\r\n        <PrivacyPolicyCheckboxFieldLink url={url} />\r\n    </Fieldset>\r\n);\r\n\r\nconst PrivacyPolicyAutoConsent: FunctionComponent<{ url: string }> = ({ url }) => (\r\n    <p>\r\n        <TranslatedHtml data={{ url }} id=\"privacy_policy_auto_consent.label\" />\r\n    </p>\r\n);\r\n\r\nconst PrivacyPolicyField: FunctionComponent<{ url: string; isExpressPrivacyPolicy: boolean }> = ({\r\n    url,\r\n    isExpressPrivacyPolicy,\r\n}) => {\r\n    if (isExpressPrivacyPolicy) {\r\n        return <PrivacyPolicyAutoConsent url={url} />;\r\n    }\r\n\r\n    return <PrivacyPolicyFieldset url={url} />;\r\n};\r\n\r\nexport default memo(PrivacyPolicyField);\r\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\r\nimport { boolean, BooleanSchema, object, ObjectSchema } from 'yup';\r\n\r\nexport interface PrivacyPolicyValidatonSchemaProps {\r\n    isRequired: boolean;\r\n    language: LanguageService;\r\n}\r\n\r\nexport default function getPrivacyPolicyValidationSchema({\r\n    isRequired,\r\n    language,\r\n}: PrivacyPolicyValidatonSchemaProps): ObjectSchema<{ privacyPolicy?: boolean }> {\r\n    const schemaFields: {\r\n        privacyPolicy?: BooleanSchema;\r\n    } = {};\r\n\r\n    if (isRequired) {\r\n        schemaFields.privacyPolicy = boolean().oneOf(\r\n            [true],\r\n            language.translate('privacy_policy.required_error'),\r\n        );\r\n    }\r\n\r\n    return object(schemaFields);\r\n}\r\n","import { FieldProps } from 'formik';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\r\n\r\nimport { Input, Label } from '../ui/form';\r\n\r\nexport type SubscribeFieldProps = FieldProps<boolean> & {\r\n    requiresMarketingConsent: boolean;\r\n};\r\n\r\nconst SubscribeField: FunctionComponent<SubscribeFieldProps> = ({\r\n    field,\r\n    requiresMarketingConsent,\r\n}) => (\r\n    <>\r\n        <Input\r\n            {...field}\r\n            checked={field.value}\r\n            className=\"form-checkbox\"\r\n            id={field.name}\r\n            testId=\"should-subscribe-checkbox\"\r\n            type=\"checkbox\"\r\n        />\r\n\r\n        <Label htmlFor={field.name}>\r\n            <TranslatedHtml\r\n                id={\r\n                    requiresMarketingConsent\r\n                        ? 'customer.guest_marketing_consent'\r\n                        : 'customer.guest_subscribe_to_newsletter_text'\r\n                }\r\n            />\r\n        </Label>\r\n    </>\r\n);\r\n\r\nexport default memo(SubscribeField);\r\n","export class SubscribeSessionStorage {\r\n    static key = 'shouldSubscribe';\r\n\r\n    static setSubscribeStatus(shouldSubscribe: boolean) {\r\n        sessionStorage.setItem(this.key, `${shouldSubscribe}`)\r\n    }\r\n\r\n    static getSubscribeStatus(): boolean {\r\n        const value = sessionStorage.getItem(this.key);\r\n\r\n        return value === 'true';\r\n    }\r\n\r\n    static removeSubscribeStatus() {\r\n        sessionStorage.removeItem(this.key);\r\n    }\r\n}\r\n","import classNames from 'classnames';\r\nimport { FieldProps, FormikProps, withFormik } from 'formik';\r\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\r\nimport { object, string } from 'yup';\r\n\r\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\r\nimport { PayPalFastlaneWatermark } from '@bigcommerce/checkout/paypal-fastlane-integration';\r\n\r\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\r\nimport { Button, ButtonVariant } from '../ui/button';\r\nimport { BasicFormField, Fieldset, Form, Legend } from '../ui/form';\r\n\r\nimport EmailField from './EmailField';\r\nimport SubscribeField from './SubscribeField';\r\nimport { SubscribeSessionStorage } from './SubscribeSessionStorage';\r\n\r\nfunction getShouldSubscribeValue(requiresMarketingConsent: boolean, defaultShouldSubscribe: boolean) {\r\n    if (SubscribeSessionStorage.getSubscribeStatus()) {\r\n        return true;\r\n    }\r\n\r\n    return requiresMarketingConsent ? false : defaultShouldSubscribe\r\n}\r\n\r\nexport interface GuestFormProps {\r\n    canSubscribe: boolean;\r\n    checkoutButtons?: ReactNode;\r\n    continueAsGuestButtonLabelId: string;\r\n    requiresMarketingConsent: boolean;\r\n    defaultShouldSubscribe: boolean;\r\n    email?: string;\r\n    isLoading: boolean;\r\n    privacyPolicyUrl?: string;\r\n    isExpressPrivacyPolicy: boolean;\r\n    isFloatingLabelEnabled?: boolean;\r\n    shouldShowEmailWatermark: boolean;\r\n    onChangeEmail(email: string): void;\r\n    onContinueAsGuest(data: GuestFormValues): void;\r\n    onShowLogin(): void;\r\n}\r\n\r\nexport interface GuestFormValues {\r\n    email: string;\r\n    shouldSubscribe: boolean;\r\n}\r\n\r\nconst GuestForm: FunctionComponent<\r\n    GuestFormProps & WithLanguageProps & FormikProps<GuestFormValues>\r\n> = ({\r\n    canSubscribe,\r\n    checkoutButtons,\r\n    continueAsGuestButtonLabelId,\r\n    isLoading,\r\n    onChangeEmail,\r\n    onShowLogin,\r\n    privacyPolicyUrl,\r\n    requiresMarketingConsent,\r\n    isExpressPrivacyPolicy,\r\n    isFloatingLabelEnabled,\r\n    shouldShowEmailWatermark,\r\n}) => {\r\n    const renderField = useCallback(\r\n        (fieldProps: FieldProps<boolean>) => (\r\n            <SubscribeField {...fieldProps} requiresMarketingConsent={requiresMarketingConsent} />\r\n        ),\r\n        [requiresMarketingConsent],\r\n    );\r\n\r\n    return (\r\n        <Form\r\n            className=\"checkout-form\"\r\n            id=\"checkout-customer-guest\"\r\n            testId=\"checkout-customer-guest\"\r\n        >\r\n            {/* <div className='optimizedCheckout-callToAction'>\r\n                The SmallSat Catalog sales team can help you find information and get quotes quickly ahead of your proposals and project deadlines.\r\n            </div> */}\r\n            <Fieldset\r\n                legend={\r\n                    <Legend hidden>\r\n                        <TranslatedString id=\"customer.guest_customer_text\" />\r\n                    </Legend>\r\n                }\r\n            >\r\n                <div className=\"customerEmail-container\">\r\n                    <div className=\"customerEmail-body\">\r\n                        <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} onChange={onChangeEmail}/>\r\n\r\n                        {shouldShowEmailWatermark && <PayPalFastlaneWatermark />}\r\n\r\n                        {(canSubscribe || requiresMarketingConsent) && (\r\n                            <BasicFormField name=\"shouldSubscribe\" render={renderField} />\r\n                        )}\r\n                    </div>\r\n\r\n                    <div\r\n                        className={classNames('form-actions customerEmail-action', {\r\n                            'customerEmail-floating--enabled': isFloatingLabelEnabled,\r\n                        })}\r\n                    >\r\n                        <Button\r\n                            className=\"customerEmail-button\"\r\n                            id=\"checkout-customer-continue\"\r\n                            isLoading={isLoading}\r\n                            testId=\"customer-continue-as-guest-button\"\r\n                            type=\"submit\"\r\n                            variant={ButtonVariant.Primary}\r\n                        >\r\n                            <TranslatedString id={continueAsGuestButtonLabelId} />\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                {privacyPolicyUrl && (\r\n                    <PrivacyPolicyField isExpressPrivacyPolicy={isExpressPrivacyPolicy} url={privacyPolicyUrl} />\r\n                )}\r\n\r\n                {!isLoading && (\r\n                    <p>\r\n                        <TranslatedString id=\"customer.login_text\" />{' '}\r\n                        <a\r\n                            data-test=\"customer-continue-button\"\r\n                            id=\"checkout-customer-login\"\r\n                            onClick={onShowLogin}\r\n                            role=\"button\"\r\n                            tabIndex={0}\r\n                        >\r\n                            <TranslatedString id=\"customer.login_action\" />\r\n                        </a>\r\n                    </p>\r\n                )}\r\n\r\n                {checkoutButtons}\r\n            </Fieldset>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default withLanguage(\r\n    withFormik<GuestFormProps & WithLanguageProps, GuestFormValues>({\r\n        mapPropsToValues: ({\r\n            email = '',\r\n            defaultShouldSubscribe = false,\r\n            requiresMarketingConsent,\r\n        }) => ({\r\n            email,\r\n            shouldSubscribe: getShouldSubscribeValue(requiresMarketingConsent, defaultShouldSubscribe),\r\n            privacyPolicy: false,\r\n        }),\r\n        handleSubmit: (values, { props: { onContinueAsGuest } }) => {\r\n            onContinueAsGuest(values);\r\n        },\r\n        validationSchema: ({ language, privacyPolicyUrl, isExpressPrivacyPolicy }: GuestFormProps & WithLanguageProps) => {\r\n            const email = string()\r\n                .email(language.translate('customer.email_invalid_error'))\r\n                .max(256)\r\n                .required(language.translate('customer.email_required_error'));\r\n\r\n            const baseSchema = object({ email });\r\n\r\n            if (privacyPolicyUrl && !isExpressPrivacyPolicy) {\r\n                return baseSchema.concat(\r\n                    getPrivacyPolicyValidationSchema({\r\n                        isRequired: !!privacyPolicyUrl,\r\n                        language,\r\n                    }),\r\n                );\r\n            }\r\n\r\n            return baseSchema;\r\n        },\r\n    })(memo(GuestForm)),\r\n);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconEye: FunctionComponent = () => (\r\n    <svg viewBox=\"0 0 576 512\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M288 144a110.94 110.94 0 0 0-31.24 5 55.4 55.4 0 0 1 7.24 27 56 56 0 0 1-56 56 55.4 55.4 0 0 1-27-7.24A111.71 111.71 0 1 0 288 144zm284.52 97.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400c-98.65 0-189.09-55-237.93-144C98.91 167 189.34 112 288 112s189.09 55 237.93 144C477.1 345 386.66 400 288 400z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconEye);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconEyeSlash: FunctionComponent = () => (\r\n    <svg viewBox=\"0 0 640 512\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M634 471L36 3.51A16 16 0 0 0 13.51 6l-10 12.49A16 16 0 0 0 6 41l598 467.49a16 16 0 0 0 22.49-2.49l10-12.49A16 16 0 0 0 634 471zM296.79 146.47l134.79 105.38C429.36 191.91 380.48 144 320 144a112.26 112.26 0 0 0-23.21 2.47zm46.42 219.07L208.42 260.16C210.65 320.09 259.53 368 320 368a113 113 0 0 0 23.21-2.46zM320 112c98.65 0 189.09 55 237.93 144a285.53 285.53 0 0 1-44 60.2l37.74 29.5a333.7 333.7 0 0 0 52.9-75.11 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64c-36.7 0-71.71 7-104.63 18.81l46.41 36.29c18.94-4.3 38.34-7.1 58.22-7.1zm0 288c-98.65 0-189.08-55-237.93-144a285.47 285.47 0 0 1 44.05-60.19l-37.74-29.5a333.6 333.6 0 0 0-52.89 75.1 32.35 32.35 0 0 0 0 29.19C89.72 376.41 197.08 448 320 448c36.7 0 71.71-7.05 104.63-18.81l-46.41-36.28C359.28 397.2 339.89 400 320 400z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconEyeSlash);\r\n","import { FieldProps } from 'formik';\r\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { FormField, TextInput } from '../ui/form';\r\nimport Label from '../ui/form/Label';\r\nimport { IconEye, IconEyeSlash } from '../ui/icon';\r\nimport { Toggle } from '../ui/toggle';\r\n\r\ninterface WithFloatingLabel {\r\n    isFloatingLabelEnabled?: boolean;\r\n}\r\n\r\nconst PasswordField: FunctionComponent<WithFloatingLabel> = ({ isFloatingLabelEnabled = false }) => {\r\n    const renderInput = useCallback(\r\n        (props: FieldProps) => (\r\n            <Toggle openByDefault={false}>\r\n                {({ isOpen, toggle }) => (\r\n                    <div className=\"form-field-password\">\r\n                        <TextInput\r\n                            {...props.field}\r\n                            additionalClassName=\"form-input--withIcon\"\r\n                            id={props.field.name}\r\n                            isFloatingLabelEnabled={isFloatingLabelEnabled}\r\n                            type={isOpen ? 'text' : 'password'}\r\n                        />\r\n                        {isFloatingLabelEnabled && (\r\n                            <Label\r\n                                htmlFor={props.field.name}\r\n                                id={`${props.field.name}-label`}\r\n                                isFloatingLabelEnabled={true}\r\n                            >\r\n                                <TranslatedString id=\"customer.password_label\" />\r\n                            </Label>\r\n                        )}\r\n                        <a\r\n                            className=\"form-toggle-password form-input-icon\"\r\n                            href=\"#\"\r\n                            onClick={toggle}\r\n                        >\r\n                            {isOpen ? <IconEye /> : <IconEyeSlash />}\r\n                        </a>\r\n                    </div>\r\n                )}\r\n            </Toggle>\r\n        ),\r\n        [isFloatingLabelEnabled],\r\n    );\r\n\r\n    const labelContent = useMemo(() => <TranslatedString id=\"customer.password_label\" />, []);\r\n\r\n    return <FormField input={renderInput} isFloatingLabelEnabled={isFloatingLabelEnabled} labelContent={isFloatingLabelEnabled ? null : labelContent} name=\"password\" />;\r\n};\r\n\r\nexport default memo(PasswordField);\r\n","import { FormikProps, withFormik } from 'formik';\r\nimport { noop } from 'lodash';\r\nimport React, { FunctionComponent, memo, useCallback } from 'react';\r\nimport { object, string } from 'yup';\r\n\r\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\r\nimport {\r\n    TranslatedHtml,\r\n    TranslatedLink,\r\n    TranslatedString,\r\n    withLanguage,\r\n    WithLanguageProps,\r\n} from '@bigcommerce/checkout/locale';\r\n\r\nimport { Alert, AlertType } from '../ui/alert';\r\nimport { Button, ButtonVariant } from '../ui/button';\r\nimport { Fieldset, Form, Legend } from '../ui/form';\r\n\r\nimport CustomerViewType from './CustomerViewType';\r\nimport EmailField from './EmailField';\r\nimport getEmailValidationSchema from './getEmailValidationSchema';\r\nimport mapErrorMessage from './mapErrorMessage';\r\nimport PasswordField from './PasswordField';\r\n\r\nexport interface LoginFormProps {\r\n    canCancel?: boolean;\r\n    continueAsGuestButtonLabelId: string;\r\n    email?: string;\r\n    forgotPasswordUrl: string;\r\n    isSignInEmailEnabled?: boolean;\r\n    isSendingSignInEmail?: boolean;\r\n    isSigningIn?: boolean;\r\n    isExecutingPaymentMethodCheckout?: boolean;\r\n    signInError?: Error;\r\n    signInEmailError?: Error;\r\n    viewType?: Omit<CustomerViewType, 'guest'>;\r\n    passwordlessLogin?: boolean;\r\n    shouldShowCreateAccountLink?: boolean;\r\n    isFloatingLabelEnabled?: boolean;\r\n    onCancel?(): void;\r\n    onCreateAccount?(): void;\r\n    onChangeEmail?(email: string): void;\r\n    onSignIn(data: LoginFormValues): void;\r\n    onSendLoginEmail?(): void;\r\n    onContinueAsGuest?(): void;\r\n}\r\n\r\nexport interface LoginFormValues {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\nconst LoginForm: FunctionComponent<\r\n    LoginFormProps & WithLanguageProps & FormikProps<LoginFormValues>\r\n> = ({\r\n    canCancel,\r\n    continueAsGuestButtonLabelId,\r\n    forgotPasswordUrl,\r\n    email,\r\n    isSignInEmailEnabled,\r\n    isSigningIn,\r\n    isExecutingPaymentMethodCheckout,\r\n    language,\r\n    onCancel = noop,\r\n    onChangeEmail,\r\n    onContinueAsGuest,\r\n    onCreateAccount = noop,\r\n    onSendLoginEmail = noop,\r\n    signInError,\r\n    shouldShowCreateAccountLink,\r\n    isFloatingLabelEnabled,\r\n    viewType = CustomerViewType.Login,\r\n}) => {\r\n    const changeEmailLink = useCallback(() => {\r\n        if (!email) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <p className=\"optimizedCheckout-contentSecondary\">\r\n                <TranslatedLink\r\n                    data={{ email }}\r\n                    id=\"customer.guest_could_login_change_email\"\r\n                    onClick={onCancel}\r\n                    testId=\"change-email\"\r\n                />\r\n            </p>\r\n        );\r\n    }, [email, onCancel]);\r\n\r\n    return (\r\n        <Form\r\n            className=\"checkout-form\"\r\n            id=\"checkout-customer-returning\"\r\n            testId=\"checkout-customer-returning\"\r\n        >\r\n            <Fieldset\r\n                legend={\r\n                    <Legend hidden>\r\n                        <TranslatedString id=\"customer.returning_customer_text\" />\r\n                    </Legend>\r\n                }\r\n            >\r\n                {signInError && (\r\n                    <Alert testId=\"customer-login-error-message\" type={AlertType.Error}>\r\n                        {mapErrorMessage(signInError, (key) => language.translate(key))}\r\n                    </Alert>\r\n                )}\r\n\r\n                {viewType === CustomerViewType.SuggestedLogin && (\r\n                    <Alert type={AlertType.Info}>\r\n                        <TranslatedHtml data={{ email }} id=\"customer.guest_could_login\" />\r\n                    </Alert>\r\n                )}\r\n\r\n                {viewType === CustomerViewType.CancellableEnforcedLogin && (\r\n                    <Alert type={AlertType.Info}>\r\n                        <TranslatedHtml data={{ email }} id=\"customer.guest_must_login\" />\r\n                    </Alert>\r\n                )}\r\n\r\n                {viewType === CustomerViewType.EnforcedLogin && (\r\n                    <Alert type={AlertType.Error}>\r\n                        <TranslatedLink\r\n                            id=\"customer.guest_temporary_disabled\"\r\n                            onClick={onCreateAccount}\r\n                        />\r\n                    </Alert>\r\n                )}\r\n\r\n                {(viewType === CustomerViewType.Login ||\r\n                    viewType === CustomerViewType.EnforcedLogin) && (\r\n                    <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} onChange={onChangeEmail} />\r\n                )}\r\n\r\n                <PasswordField isFloatingLabelEnabled={isFloatingLabelEnabled} />\r\n\r\n                <p className=\"form-legend-container\">\r\n                    <span>\r\n                        { isSignInEmailEnabled &&\r\n                            <TranslatedLink\r\n                                id=\"login_email.link\"\r\n                                onClick={ onSendLoginEmail }\r\n                                testId=\"customer-signin-link\"\r\n                            />\r\n                        }\r\n                        { !isSignInEmailEnabled &&\r\n                            <a\r\n                                data-test=\"forgot-password-link\"\r\n                                href={ forgotPasswordUrl }\r\n                                rel=\"noopener noreferrer\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                <TranslatedString id=\"customer.forgot_password_action\" />\r\n                            </a>\r\n                        }\r\n                    </span>\r\n                    { viewType === CustomerViewType.Login && shouldShowCreateAccountLink &&\r\n                        <span>\r\n                            <TranslatedLink\r\n                                id=\"customer.create_account_to_continue_text\"\r\n                                onClick={onCreateAccount}\r\n                            />\r\n                        </span>\r\n                    }\r\n                </p>\r\n\r\n                <div className=\"form-actions\">\r\n                    <Button\r\n                        disabled={isSigningIn || isExecutingPaymentMethodCheckout}\r\n                        id=\"checkout-customer-continue\"\r\n                        isLoading={isSigningIn || isExecutingPaymentMethodCheckout}\r\n                        testId=\"customer-continue-button\"\r\n                        type=\"submit\"\r\n                        variant={ButtonVariant.Primary}\r\n                    >\r\n                        <TranslatedString id=\"customer.sign_in_action\" />\r\n                    </Button>\r\n\r\n                    {viewType === CustomerViewType.SuggestedLogin && (\r\n                        <a\r\n                            className=\"button optimizedCheckout-buttonSecondary\"\r\n                            data-test=\"customer-guest-continue\"\r\n                            href=\"#\"\r\n                            id=\"checkout-guest-continue\"\r\n                            onClick={preventDefault(onContinueAsGuest)}\r\n                        >\r\n                            <TranslatedString id={continueAsGuestButtonLabelId} />\r\n                        </a>\r\n                    )}\r\n\r\n                    {canCancel &&\r\n                        viewType !== CustomerViewType.EnforcedLogin &&\r\n                        viewType !== CustomerViewType.SuggestedLogin && (\r\n                            <a\r\n                                className=\"button optimizedCheckout-buttonSecondary\"\r\n                                data-test=\"customer-cancel-button\"\r\n                                href=\"#\"\r\n                                id=\"checkout-customer-cancel\"\r\n                                onClick={preventDefault(onCancel)}\r\n                            >\r\n                                <TranslatedString\r\n                                    id={\r\n                                        viewType === CustomerViewType.CancellableEnforcedLogin\r\n                                            ? 'login_email.use_another_email'\r\n                                            : 'common.cancel_action'\r\n                                    }\r\n                                />\r\n                            </a>\r\n                        )}\r\n                </div>\r\n\r\n                {viewType === CustomerViewType.SuggestedLogin && changeEmailLink()}\r\n            </Fieldset>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default withLanguage(\r\n    withFormik<LoginFormProps & WithLanguageProps, LoginFormValues>({\r\n        mapPropsToValues: ({ email = '' }) => ({\r\n            email,\r\n            password: '',\r\n        }),\r\n        handleSubmit: (values, { props: { onSignIn } }) => {\r\n            onSignIn(values);\r\n        },\r\n        validationSchema: ({ language }: LoginFormProps & WithLanguageProps) =>\r\n            getEmailValidationSchema({ language }).concat(\r\n                object({\r\n                    password: string().required(\r\n                        language.translate('customer.password_required_error'),\r\n                    ),\r\n                }),\r\n            ),\r\n    })(memo(LoginForm)),\r\n);\r\n","export default function mapErrorMessage(\r\n    error: any, // TODO: Export `RequestError`\r\n    translate: (key: string) => string,\r\n): string {\r\n    const type = error.body && error.body.type;\r\n\r\n    switch (type) {\r\n        case 'throttled_login':\r\n            return translate('customer.sign_in_throttled_error');\r\n\r\n        case 'reset_password_before_login':\r\n            return translate('customer.reset_password_before_login_error');\r\n\r\n        default:\r\n            return translate('customer.sign_in_error');\r\n    }\r\n}\r\n","import { CustomerAccountRequestBody } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { mapCustomFormFieldsFromFormValues } from '../formFields';\r\n\r\nimport { CreateAccountFormValues } from './getCreateCustomerValidationSchema';\r\n\r\nexport default function mapCreateAccountFromFormValues({\r\n    acceptsMarketingEmails,\r\n    customFields,\r\n    ...values\r\n}: CreateAccountFormValues): CustomerAccountRequestBody {\r\n    return {\r\n        ...values,\r\n        acceptsMarketingEmails: acceptsMarketingEmails && acceptsMarketingEmails.length > 0,\r\n        customFields: mapCustomFormFieldsFromFormValues(customFields),\r\n    };\r\n}\r\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\r\nimport { FieldProps, FormikProps, withFormik } from 'formik';\r\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useEffect, useState } from 'react';\r\n\r\nimport { getAppliedStyles } from '@bigcommerce/checkout/dom-utils';\r\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\r\nimport { CustomerSkeleton } from '@bigcommerce/checkout/ui';\r\n\r\nimport CheckoutStepStatus from '../checkout/CheckoutStepStatus';\r\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\r\nimport { Button, ButtonVariant } from '../ui/button';\r\nimport { BasicFormField, Fieldset, Form, Legend } from '../ui/form';\r\n\r\nimport { GuestFormValues } from './GuestForm';\r\nimport SubscribeField from './SubscribeField';\r\n\r\nexport interface StripeGuestFormProps {\r\n    canSubscribe: boolean;\r\n    checkoutButtons?: ReactNode;\r\n    step: CheckoutStepStatus;\r\n    continueAsGuestButtonLabelId: string;\r\n    email?: string;\r\n    isLoading: boolean;\r\n    isExpressPrivacyPolicy: boolean;\r\n    requiresMarketingConsent: boolean;\r\n    defaultShouldSubscribe: boolean;\r\n    privacyPolicyUrl?: string;\r\n    onChangeEmail(email: string): void;\r\n    onContinueAsGuest(data: GuestFormValues): void;\r\n    deinitialize(options: CustomerRequestOptions): void;\r\n    initialize(options: CustomerInitializeOptions): void;\r\n    onShowLogin(): void;\r\n}\r\n\r\nconst StripeGuestForm: FunctionComponent<StripeGuestFormProps & FormikProps<GuestFormValues>> = ({\r\n    continueAsGuestButtonLabelId,\r\n    isLoading,\r\n    initialize,\r\n    isExpressPrivacyPolicy,\r\n    deinitialize,\r\n    onChangeEmail,\r\n    onShowLogin,\r\n    onContinueAsGuest,\r\n    canSubscribe,\r\n    checkoutButtons,\r\n    requiresMarketingConsent,\r\n    privacyPolicyUrl,\r\n    step,\r\n    status\r\n}) => {\r\n\r\n    const [continueAsAGuestButton, setContinueAsAGuestButton] = useState(true);\r\n    const [emailValue, setEmailValue] = useState('');\r\n    const [authentication, setAuthentication] = useState(false);\r\n    const [isStripeLoading, setIsStripeLoading] = useState(true);\r\n    const [isNewAuth, setIsNewAuth] = useState(false);\r\n    const handleOnClickSubmitButton = () => {\r\n        onContinueAsGuest({\r\n            email: emailValue,\r\n            shouldSubscribe: !!status?.shouldSubscribe,\r\n        });\r\n    };\r\n    const setEmailCallback = useCallback((authenticated: boolean, email: string) => {\r\n        onChangeEmail(email);\r\n        setEmailValue(email);\r\n        setContinueAsAGuestButton(!email);\r\n        setAuthentication(authenticated);\r\n\r\n        if(!authenticated){\r\n            setIsNewAuth(true);\r\n        }\r\n    }, [setContinueAsAGuestButton, onChangeEmail]);\r\n\r\n    useEffect(() => {\r\n        if ((!step.isComplete || isNewAuth) && emailValue && authentication) {\r\n            handleOnClickSubmitButton();\r\n        }\r\n    }, [emailValue, authentication, isNewAuth]);\r\n\r\n    useEffect(() => {\r\n        if (status?.valSuccess) {\r\n            handleOnClickSubmitButton();\r\n        }\r\n    }, [status?.valSuccess]);\r\n\r\n    const handleLoading = useCallback((mounted: boolean) => {\r\n        setIsStripeLoading(mounted);\r\n    }, []);\r\n\r\n    const stripeDeinitialize = () => {\r\n        deinitialize({\r\n            methodId: 'stripeupe',\r\n        });\r\n    };\r\n\r\n    const stripeInitialize = () => {\r\n        initialize( {\r\n            methodId: 'stripeupe',\r\n            stripeupe: {\r\n                container: 'stripeupeLink',\r\n                onEmailChange: setEmailCallback,\r\n                isLoading: handleLoading,\r\n                getStyles: getStripeStyles,\r\n                gatewayId: 'stripeupe',\r\n                methodId: 'card',\r\n            },\r\n        })};\r\n\r\n    useEffect(() => {\r\n        stripeInitialize();\r\n\r\n        return () => stripeDeinitialize();\r\n    }, []);\r\n\r\n    const getStylesFromElement = (\r\n        id: string,\r\n        properties: string[]) => {\r\n        const parentContainer = document.getElementById(id);\r\n\r\n        if (parentContainer) {\r\n            return getAppliedStyles(parentContainer, properties);\r\n        }\r\n\r\n            return undefined;\r\n\r\n    };\r\n\r\n    const containerId = 'stripe-card-component-field';\r\n\r\n    const getStripeStyles: () => (Record<string, string> | undefined) = useCallback( () => {\r\n        const formInput = getStylesFromElement(`${containerId}--input`, ['color', 'background-color', 'border-color', 'box-shadow']);\r\n        const formLabel = getStylesFromElement(`${containerId}--label`, ['color']);\r\n        const formError = getStylesFromElement(`${containerId}--error`, ['color']);\r\n\r\n        return formLabel && formInput && formError ? {\r\n            labelText: formLabel.color,\r\n            fieldText: formInput.color,\r\n            fieldPlaceholderText: formInput.color,\r\n            fieldErrorText: formError.color,\r\n            fieldBackground: formInput['background-color'],\r\n            fieldInnerShadow: formInput['box-shadow'],\r\n            fieldBorder: formInput['border-color'],\r\n        } : undefined;\r\n    }, [])\r\n\r\n    const renderCheckoutThemeStylesForStripeUPE = () => {\r\n        return (\r\n            <div\r\n                className=\"optimizedCheckout-form-input\"\r\n                id={ `${containerId}--input` }\r\n                placeholder=\"1111\"\r\n            >\r\n                <div\r\n                    className=\"form-field--error\"\r\n                >\r\n                    <div\r\n                        className=\"optimizedCheckout-form-label\"\r\n                        id={ `${containerId}--error` }\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"optimizedCheckout-form-label\"\r\n                    id={ `${containerId}--label` }\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const renderField = useCallback((fieldProps: FieldProps<boolean>) => (\r\n        <SubscribeField\r\n            { ...fieldProps }\r\n            requiresMarketingConsent={ requiresMarketingConsent }\r\n        />\r\n    ), [\r\n        requiresMarketingConsent,\r\n    ]);\r\n\r\n    const buttonText = authentication && !isNewAuth? 'customer.continue_as_stripe_customer_action' : continueAsGuestButtonLabelId;\r\n\r\n    return (\r\n        <>\r\n            <CustomerSkeleton isLoading={isStripeLoading}/>\r\n            <Form\r\n                className=\"checkout-form\"\r\n                id=\"checkout-customer-guest\"\r\n                testId=\"checkout-customer-guest\"\r\n            >\r\n                <div className=\"checkout-form\" style={ {display: isStripeLoading ? 'none' : undefined} }>\r\n                    <Fieldset\r\n                        legend={ !authentication &&\r\n                            <Legend hidden>\r\n                                <TranslatedString id=\"customer.guest_customer_text\"/>\r\n                            </Legend>\r\n                        }\r\n                    >\r\n                        <div className=\"customerEmail-container\">\r\n                            <div className=\"customerEmail-body\">\r\n                                <div id=\"stripeupeLink\"/>\r\n                                <br/>\r\n                                { (canSubscribe || requiresMarketingConsent) && <BasicFormField\r\n                                    name=\"shouldSubscribe\"\r\n                                    render={ renderField }\r\n                                /> }\r\n                            </div>\r\n\r\n                            <div className=\"form-actions customerEmail-action\">\r\n                                { (!authentication || (authentication && !isNewAuth )) && <Button\r\n                                    className=\"stripeCustomerEmail-button\"\r\n                                    disabled={ continueAsAGuestButton }\r\n                                    id=\"stripe-checkout-customer-continue\"\r\n                                    isLoading={ isLoading }\r\n                                    testId=\"stripe-customer-continue-as-guest-button\"\r\n                                    type=\"submit\"\r\n                                    variant={ ButtonVariant.Primary }\r\n                                >\r\n                                    <TranslatedString id={ buttonText }/>\r\n                                </Button> }\r\n                            </div>\r\n                        </div>\r\n\r\n                        {privacyPolicyUrl && (\r\n                            <PrivacyPolicyField isExpressPrivacyPolicy={isExpressPrivacyPolicy} url={privacyPolicyUrl} />\r\n                        )}\r\n\r\n                        {\r\n                            !isLoading && <p>\r\n                                <TranslatedString id=\"customer.login_text\"/>\r\n                                { ' ' }\r\n                                <a\r\n                                    data-test=\"customer-continue-button\"\r\n                                    id=\"checkout-customer-login\"\r\n                                    onClick={ onShowLogin }\r\n                                    role=\"button\"\r\n                                    tabIndex={0}\r\n                                >\r\n                                    <TranslatedString id=\"customer.login_action\"/>\r\n                                </a>\r\n                            </p>\r\n                        }\r\n                        { !authentication && checkoutButtons }\r\n                    </Fieldset>\r\n                </div>\r\n                { renderCheckoutThemeStylesForStripeUPE() }\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withLanguage(\r\n    withFormik<StripeGuestFormProps, GuestFormValues>({\r\n            mapPropsToValues: ({\r\n                email = '',\r\n                defaultShouldSubscribe = false,\r\n                requiresMarketingConsent,\r\n            }) => ({\r\n                email,\r\n                shouldSubscribe: requiresMarketingConsent ? false : defaultShouldSubscribe,\r\n                privacyPolicy: false,\r\n            }),\r\n            handleSubmit: ( values, { setStatus }) => {\r\n                setStatus({\r\n                    valSuccess: true,\r\n                    shouldSubscribe: values.shouldSubscribe,\r\n                  });\r\n            },\r\n            validationSchema: ({ language, privacyPolicyUrl, isExpressPrivacyPolicy }: StripeGuestFormProps & WithLanguageProps) => {\r\n                if (privacyPolicyUrl && !isExpressPrivacyPolicy) {\r\n                    return getPrivacyPolicyValidationSchema({\r\n                            isRequired: !!privacyPolicyUrl,\r\n                            language,\r\n                        })\r\n                }\r\n            },\r\n        })(memo(StripeGuestForm))\r\n)\r\n\r\n","import {\r\n    CheckoutPaymentMethodExecutedOptions,\r\n    CheckoutSelectors,\r\n    CustomerAccountRequestBody,\r\n    CustomerCredentials,\r\n    CustomerInitializeOptions,\r\n    CustomerRequestOptions,\r\n    ExecutePaymentMethodCheckoutOptions,\r\n    FormField,\r\n    GuestCredentials,\r\n    SignInEmail,\r\n    StoreConfig,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport { noop } from 'lodash';\r\nimport React, { Component, ReactNode } from 'react';\r\n\r\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\r\nimport { shouldUseStripeLinkByMinimumAmount } from '@bigcommerce/checkout/instrument-utils';\r\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\r\nimport { isPayPalFastlaneMethod } from '@bigcommerce/checkout/paypal-fastlane-integration';\r\nimport { CustomerSkeleton } from '@bigcommerce/checkout/ui';\r\n\r\nimport { withAnalytics } from '../analytics';\r\nimport { withCheckout } from '../checkout';\r\nimport CheckoutStepStatus from '../checkout/CheckoutStepStatus';\r\nimport { isErrorWithType } from '../common/error';\r\nimport { isFloatingLabelEnabled } from '../common/utility';\r\nimport getProviderWithCustomCheckout from '../payment/getProviderWithCustomCheckout';\r\nimport { PaymentMethodId } from '../payment/paymentMethod';\r\n\r\nimport CheckoutButtonList from './CheckoutButtonList';\r\nimport CreateAccountForm from './CreateAccountForm';\r\nimport CustomerViewType from './CustomerViewType';\r\nimport EmailLoginForm, { EmailLoginFormValues } from './EmailLoginForm';\r\nimport { CreateAccountFormValues } from './getCreateCustomerValidationSchema';\r\nimport GuestForm, { GuestFormValues } from './GuestForm';\r\nimport LoginForm from './LoginForm';\r\nimport mapCreateAccountFromFormValues from './mapCreateAccountFromFormValues';\r\nimport StripeGuestForm from './StripeGuestForm';\r\nimport { SubscribeSessionStorage } from './SubscribeSessionStorage';\r\n\r\nexport interface CustomerProps {\r\n    viewType: CustomerViewType;\r\n    step: CheckoutStepStatus;\r\n    isEmbedded?: boolean;\r\n    isSubscribed: boolean;\r\n    isWalletButtonsOnTop: boolean;\r\n    checkEmbeddedSupport?(methodIds: string[]): void;\r\n    onChangeViewType?(viewType: CustomerViewType): void;\r\n    onAccountCreated?(): void;\r\n    onContinueAsGuest?(): void;\r\n    onContinueAsGuestError?(error: Error): void;\r\n    onReady?(): void;\r\n    onSubscribeToNewsletter(subscribe: boolean): void;\r\n    onSignIn?(): void;\r\n    onSignInError?(error: Error): void;\r\n    onUnhandledError?(error: Error): void;\r\n    onWalletButtonClick?(methodName: string): void;\r\n}\r\n\r\nexport interface WithCheckoutCustomerProps {\r\n    canSubscribe: boolean;\r\n    customerAccountFields: FormField[];\r\n    checkoutButtonIds: string[];\r\n    defaultShouldSubscribe: boolean;\r\n    email?: string;\r\n    firstName?: string;\r\n    fixNewsletterCheckboxExperimentEnabled: boolean;\r\n    forgotPasswordUrl: string;\r\n    isContinuingAsGuest: boolean;\r\n    isCreatingAccount: boolean;\r\n    isExecutingPaymentMethodCheckout: boolean;\r\n    isGuestEnabled: boolean;\r\n    hasBillingId: boolean;\r\n    isInitializing: boolean;\r\n    isSendingSignInEmail: boolean;\r\n    isSignInEmailEnabled: boolean;\r\n    isSigningIn: boolean;\r\n    privacyPolicyUrl?: string;\r\n    providerWithCustomCheckout?: string;\r\n    requiresMarketingConsent: boolean;\r\n    signInEmail?: SignInEmail;\r\n    signInEmailError?: Error;\r\n    isAccountCreationEnabled: boolean;\r\n    isPaymentDataRequired: boolean;\r\n    createAccountError?: Error;\r\n    signInError?: Error;\r\n    isFloatingLabelEnabled?: boolean;\r\n    isExpressPrivacyPolicy: boolean;\r\n    clearError(error: Error): Promise<CheckoutSelectors>;\r\n    continueAsGuest(credentials: GuestCredentials): Promise<CheckoutSelectors>;\r\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\r\n    executePaymentMethodCheckout(\r\n        options: ExecutePaymentMethodCheckoutOptions,\r\n    ): Promise<CheckoutSelectors>;\r\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\r\n    sendLoginEmail(params: { email: string }): Promise<CheckoutSelectors>;\r\n    signIn(credentials: CustomerCredentials): Promise<CheckoutSelectors>;\r\n    createAccount(values: CustomerAccountRequestBody): Promise<CheckoutSelectors>;\r\n    shouldRenderStripeForm: boolean;\r\n}\r\n\r\nexport interface CustomerState {\r\n    isEmailLoginFormOpen: boolean;\r\n    isReady: boolean;\r\n    hasRequestedLoginEmail: boolean;\r\n}\r\n\r\nclass Customer extends Component<CustomerProps & WithCheckoutCustomerProps & AnalyticsContextProps, CustomerState> {\r\n    state: CustomerState = {\r\n        isEmailLoginFormOpen: false,\r\n        isReady: false,\r\n        hasRequestedLoginEmail: false,\r\n    };\r\n\r\n    private draftEmail?: string;\r\n\r\n    async componentDidMount(): Promise<void> {\r\n        const {\r\n            initializeCustomer,\r\n            email,\r\n            onReady = noop,\r\n            onUnhandledError = noop,\r\n            providerWithCustomCheckout,\r\n        } = this.props;\r\n\r\n        this.draftEmail = email;\r\n\r\n        try {\r\n            if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\r\n                await initializeCustomer({methodId: providerWithCustomCheckout});\r\n            }\r\n        } catch (error) {\r\n            onUnhandledError(error);\r\n        }\r\n\r\n        this.setState({ isReady: true });\r\n\r\n        onReady();\r\n    }\r\n\r\n    async componentWillUnmount(): Promise<void> {\r\n        const {\r\n            deinitializeCustomer = noop,\r\n            providerWithCustomCheckout,\r\n            onUnhandledError = noop,\r\n        } = this.props;\r\n\r\n        try {\r\n            await deinitializeCustomer({ methodId: providerWithCustomCheckout });\r\n        } catch (error) {\r\n            onUnhandledError(error);\r\n        }\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { viewType } = this.props;\r\n        const { isEmailLoginFormOpen, isReady } = this.state;\r\n        const shouldRenderGuestForm = viewType === CustomerViewType.Guest;\r\n        const shouldRenderCreateAccountForm = viewType === CustomerViewType.CreateAccount;\r\n        const shouldRenderLoginForm = !shouldRenderGuestForm && !shouldRenderCreateAccountForm;\r\n\r\n        return (\r\n            <CustomerSkeleton isLoading={!isReady}>\r\n                {isEmailLoginFormOpen && this.renderEmailLoginLinkForm()}\r\n                {shouldRenderLoginForm && this.renderLoginForm()}\r\n                {shouldRenderGuestForm && this.renderGuestForm()}\r\n                {shouldRenderCreateAccountForm && this.renderCreateAccountForm()}\r\n            </CustomerSkeleton>\r\n        );\r\n    }\r\n\r\n    private renderGuestForm(): ReactNode {\r\n        const {\r\n            canSubscribe,\r\n            checkEmbeddedSupport,\r\n            checkoutButtonIds,\r\n            deinitializeCustomer,\r\n            email,\r\n            initializeCustomer,\r\n            isContinuingAsGuest = false,\r\n            isExecutingPaymentMethodCheckout = false,\r\n            isInitializing = false,\r\n            isSubscribed,\r\n            isWalletButtonsOnTop,\r\n            privacyPolicyUrl,\r\n            requiresMarketingConsent,\r\n            onUnhandledError = noop,\r\n            onWalletButtonClick = noop,\r\n            step,\r\n            isFloatingLabelEnabled,\r\n            isExpressPrivacyPolicy,\r\n            isPaymentDataRequired,\r\n            shouldRenderStripeForm,\r\n            providerWithCustomCheckout,\r\n        } = this.props;\r\n\r\n        const checkoutButtons = isWalletButtonsOnTop || !isPaymentDataRequired\r\n          ? null\r\n          : <CheckoutButtonList\r\n            checkEmbeddedSupport={checkEmbeddedSupport}\r\n            deinitialize={deinitializeCustomer}\r\n            initialize={initializeCustomer}\r\n            isInitializing={isInitializing}\r\n            methodIds={checkoutButtonIds}\r\n            onClick={onWalletButtonClick}\r\n            onError={onUnhandledError}\r\n          />;\r\n\r\n        const isLoadingGuestForm = isContinuingAsGuest || isExecutingPaymentMethodCheckout;\r\n\r\n        return (\r\n            shouldRenderStripeForm ?\r\n                <StripeGuestForm\r\n                    canSubscribe={canSubscribe}\r\n                    checkoutButtons={checkoutButtons}\r\n                    continueAsGuestButtonLabelId=\"customer.continue\"\r\n                    defaultShouldSubscribe={isSubscribed}\r\n                    deinitialize={deinitializeCustomer}\r\n                    email={this.draftEmail || email}\r\n                    initialize={initializeCustomer}\r\n                    isExpressPrivacyPolicy={isExpressPrivacyPolicy}\r\n                    isLoading={isContinuingAsGuest || isInitializing || isExecutingPaymentMethodCheckout}\r\n                    onChangeEmail={this.handleChangeEmail}\r\n                    onContinueAsGuest={this.handleContinueAsGuest}\r\n                    onShowLogin={this.handleShowLogin}\r\n                    privacyPolicyUrl={privacyPolicyUrl}\r\n                    requiresMarketingConsent={requiresMarketingConsent}\r\n                    step={step}\r\n                />\r\n                :\r\n            <GuestForm\r\n                canSubscribe={canSubscribe}\r\n                checkoutButtons={checkoutButtons}\r\n                continueAsGuestButtonLabelId=\"customer.continue\"\r\n                defaultShouldSubscribe={isSubscribed}\r\n                email={this.draftEmail || email}\r\n                isExpressPrivacyPolicy={isExpressPrivacyPolicy}\r\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\r\n                isLoading={isLoadingGuestForm}\r\n                onChangeEmail={this.handleChangeEmail}\r\n                onContinueAsGuest={this.handleContinueAsGuest}\r\n                onShowLogin={this.handleShowLogin}\r\n                privacyPolicyUrl={privacyPolicyUrl}\r\n                shouldShowEmailWatermark={isPayPalFastlaneMethod(providerWithCustomCheckout)}\r\n                requiresMarketingConsent={requiresMarketingConsent}\r\n            />\r\n        );\r\n    }\r\n\r\n    private renderEmailLoginLinkForm(): ReactNode {\r\n        const { isEmailLoginFormOpen, hasRequestedLoginEmail } = this.state;\r\n\r\n        const { isSendingSignInEmail, signInEmailError, signInEmail, isFloatingLabelEnabled } =\r\n            this.props;\r\n\r\n        return (\r\n            <EmailLoginForm\r\n                email={this.draftEmail}\r\n                emailHasBeenRequested={hasRequestedLoginEmail}\r\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\r\n                isOpen={isEmailLoginFormOpen}\r\n                isSendingEmail={isSendingSignInEmail}\r\n                onRequestClose={this.closeEmailLoginFormForm}\r\n                onSendLoginEmail={this.handleSendLoginEmail}\r\n                sentEmail={signInEmail}\r\n                sentEmailError={signInEmailError}\r\n            />\r\n        );\r\n    }\r\n\r\n    private closeEmailLoginFormForm: () => void = () => {\r\n        this.setState({\r\n            isEmailLoginFormOpen: false,\r\n            hasRequestedLoginEmail: false,\r\n        });\r\n    };\r\n\r\n    private renderCreateAccountForm(): ReactNode {\r\n        const {\r\n            customerAccountFields,\r\n            isExecutingPaymentMethodCheckout,\r\n            isCreatingAccount,\r\n            createAccountError,\r\n            requiresMarketingConsent,\r\n            isFloatingLabelEnabled,\r\n            defaultShouldSubscribe,\r\n            fixNewsletterCheckboxExperimentEnabled,\r\n        } = this.props;\r\n\r\n        return (\r\n            <CreateAccountForm\r\n                createAccountError={createAccountError}\r\n                defaultShouldSubscribe={defaultShouldSubscribe}\r\n                fixNewsletterCheckboxExperimentEnabled={fixNewsletterCheckboxExperimentEnabled}\r\n                formFields={customerAccountFields}\r\n                isCreatingAccount={isCreatingAccount}\r\n                isExecutingPaymentMethodCheckout={isExecutingPaymentMethodCheckout}\r\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\r\n                onCancel={this.handleCancelCreateAccount}\r\n                onSubmit={this.handleCreateAccount}\r\n                requiresMarketingConsent={requiresMarketingConsent}\r\n            />\r\n        );\r\n    }\r\n\r\n    private renderLoginForm(): ReactNode {\r\n        const {\r\n            isEmbedded,\r\n            email,\r\n            forgotPasswordUrl,\r\n            isSignInEmailEnabled,\r\n            isGuestEnabled,\r\n            isSendingSignInEmail,\r\n            isSigningIn,\r\n            isExecutingPaymentMethodCheckout,\r\n            isAccountCreationEnabled,\r\n            providerWithCustomCheckout,\r\n            signInError,\r\n            isFloatingLabelEnabled,\r\n            viewType,\r\n        } = this.props;\r\n\r\n        return (\r\n            <LoginForm\r\n                canCancel={isGuestEnabled}\r\n                continueAsGuestButtonLabelId={\r\n                    providerWithCustomCheckout\r\n                        ? 'customer.continue'\r\n                        : 'customer.continue_as_guest_action'\r\n                }\r\n                email={this.draftEmail || email}\r\n                forgotPasswordUrl={forgotPasswordUrl}\r\n                isExecutingPaymentMethodCheckout={isExecutingPaymentMethodCheckout}\r\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\r\n                isSendingSignInEmail={isSendingSignInEmail}\r\n                isSignInEmailEnabled={isSignInEmailEnabled && !isEmbedded}\r\n                isSigningIn={isSigningIn}\r\n                onCancel={this.handleCancelSignIn}\r\n                onChangeEmail={this.handleChangeEmail}\r\n                onContinueAsGuest={this.executePaymentMethodCheckoutOrContinue}\r\n                onCreateAccount={this.showCreateAccount}\r\n                onSendLoginEmail={this.handleEmailLoginClicked}\r\n                onSignIn={this.handleSignIn}\r\n                shouldShowCreateAccountLink={isAccountCreationEnabled}\r\n                signInError={signInError}\r\n                viewType={viewType}\r\n            />\r\n        );\r\n    }\r\n\r\n    private handleEmailLoginClicked: () => void = async () => {\r\n        const { viewType } = this.props;\r\n\r\n        try {\r\n            if (viewType !== CustomerViewType.Login && this.draftEmail) {\r\n                await this.handleSendLoginEmail({ email: this.draftEmail });\r\n            }\r\n        } finally {\r\n            this.setState({\r\n                isEmailLoginFormOpen: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    private handleSendLoginEmail: (values: EmailLoginFormValues) => Promise<void> = async (\r\n        values,\r\n    ) => {\r\n        const { sendLoginEmail } = this.props;\r\n\r\n        try {\r\n            await sendLoginEmail(values);\r\n        } catch (error) {\r\n        // Need to write catch block since one test covers the case when `sendLoginEmail` fails\r\n        } finally {\r\n            this.setState({\r\n                hasRequestedLoginEmail: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    private handleContinueAsGuest: (formValues: GuestFormValues) => Promise<void> = async (\r\n        formValues,\r\n    ) => {\r\n        const {\r\n            canSubscribe,\r\n            continueAsGuest,\r\n            hasBillingId,\r\n            defaultShouldSubscribe,\r\n            onChangeViewType = noop,\r\n            onContinueAsGuest = noop,\r\n            onContinueAsGuestError = noop,\r\n            onSubscribeToNewsletter,\r\n        } = this.props;\r\n\r\n        const email = formValues.email.trim();\r\n        const updateSubscriptionWhenUnchecked =\r\n            hasBillingId || defaultShouldSubscribe ? false : undefined;\r\n\r\n        try {\r\n            const { data } = await continueAsGuest({\r\n                email,\r\n                acceptsMarketingNewsletter:\r\n                    canSubscribe && formValues.shouldSubscribe\r\n                        ? true\r\n                        : updateSubscriptionWhenUnchecked,\r\n                acceptsAbandonedCartEmails: formValues.shouldSubscribe\r\n                    ? true\r\n                    : updateSubscriptionWhenUnchecked,\r\n            });\r\n\r\n            onSubscribeToNewsletter(formValues.shouldSubscribe);\r\n\r\n            SubscribeSessionStorage.setSubscribeStatus(formValues.shouldSubscribe);\r\n\r\n            const customer = data.getCustomer();\r\n\r\n            const paymentProviderCustomer = data.getPaymentProviderCustomer();\r\n\r\n            if (customer && customer.shouldEncourageSignIn && customer.isGuest && !paymentProviderCustomer?.stripeLinkAuthenticationState) {\r\n                return onChangeViewType(CustomerViewType.SuggestedLogin);\r\n            }\r\n\r\n            await this.executePaymentMethodCheckoutOrContinue();\r\n\r\n            this.draftEmail = undefined;\r\n        } catch (error) {\r\n            if (\r\n                isErrorWithType(error) &&\r\n                (error.type === 'update_subscriptions' ||\r\n                    error.type === 'payment_method_client_invalid')\r\n            ) {\r\n                this.draftEmail = undefined;\r\n\r\n                onContinueAsGuest();\r\n            }\r\n\r\n            if (isErrorWithType(error) && error.status === 429) {\r\n                return onChangeViewType(CustomerViewType.EnforcedLogin);\r\n            }\r\n\r\n            if (isErrorWithType(error) && error.status === 403) {\r\n                return onChangeViewType(CustomerViewType.CancellableEnforcedLogin);\r\n            }\r\n\r\n            onContinueAsGuestError(error);\r\n        }\r\n    };\r\n\r\n    private handleSignIn: (credentials: CustomerCredentials) => Promise<void> = async (\r\n        credentials,\r\n    ) => {\r\n        const {\r\n            signIn,\r\n            onSignIn = noop,\r\n            onSignInError = noop,\r\n        } = this.props;\r\n\r\n        try {\r\n            await signIn(credentials);\r\n\r\n            onSignIn();\r\n\r\n            this.draftEmail = undefined;\r\n        } catch (error) {\r\n            onSignInError(error);\r\n        }\r\n    };\r\n\r\n    private handleCreateAccount: (values: CreateAccountFormValues) => void = async (values) => {\r\n        const {\r\n            createAccount = noop,\r\n            onAccountCreated = noop,\r\n        } = this.props;\r\n\r\n        await createAccount(mapCreateAccountFromFormValues(values));\r\n\r\n        onAccountCreated();\r\n    };\r\n\r\n    private showCreateAccount: () => void = () => {\r\n        const { onChangeViewType = noop } = this.props;\r\n\r\n        onChangeViewType(CustomerViewType.CreateAccount);\r\n    };\r\n\r\n    private handleCancelCreateAccount: () => void = () => {\r\n        const { clearError, onChangeViewType = noop, createAccountError } = this.props;\r\n\r\n        if (createAccountError) {\r\n            clearError(createAccountError);\r\n        }\r\n\r\n        onChangeViewType(CustomerViewType.Login);\r\n    };\r\n\r\n    private handleCancelSignIn: () => void = () => {\r\n        const { clearError, onChangeViewType = noop, signInError } = this.props;\r\n\r\n        if (signInError) {\r\n            clearError(signInError);\r\n        }\r\n\r\n        onChangeViewType(CustomerViewType.Guest);\r\n    };\r\n\r\n    private handleChangeEmail: (email: string) => void = (email) => {\r\n        const { analyticsTracker } = this.props;\r\n\r\n        this.draftEmail = email;\r\n        analyticsTracker.customerEmailEntry(email);\r\n    };\r\n\r\n    private handleShowLogin: () => void = () => {\r\n        const { onChangeViewType = noop } = this.props;\r\n\r\n        onChangeViewType(CustomerViewType.Login);\r\n    };\r\n\r\n    private executePaymentMethodCheckoutOrContinue: () => void = async () => {\r\n        const {\r\n            executePaymentMethodCheckout,\r\n            onContinueAsGuest = noop,\r\n            providerWithCustomCheckout\r\n        } = this.props;\r\n\r\n        if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\r\n            await executePaymentMethodCheckout({\r\n                methodId: providerWithCustomCheckout,\r\n                continueWithCheckoutCallback: onContinueAsGuest,\r\n                checkoutPaymentMethodExecuted: (payload) => this.checkoutPaymentMethodExecuted(payload)\r\n            });\r\n        } else {\r\n            onContinueAsGuest();\r\n        }\r\n    };\r\n\r\n    private checkoutPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions) {\r\n        const { analyticsTracker } = this.props;\r\n\r\n        analyticsTracker.customerPaymentMethodExecuted(payload);\r\n    }\r\n}\r\n\r\nexport function mapToWithCheckoutCustomerProps({\r\n    checkoutService,\r\n    checkoutState,\r\n}: CheckoutContextProps): WithCheckoutCustomerProps | null {\r\n    const {\r\n        data: {\r\n            getBillingAddress,\r\n            getCustomerAccountFields,\r\n            getCheckout,\r\n            getCustomer,\r\n            getCart,\r\n            getSignInEmail,\r\n            getConfig,\r\n            isPaymentDataRequired,\r\n        },\r\n        errors: { getSignInError, getSignInEmailError, getCreateCustomerAccountError },\r\n        statuses: {\r\n            isContinuingAsGuest,\r\n            isExecutingPaymentMethodCheckout,\r\n            isInitializingCustomer,\r\n            isSigningIn,\r\n            isSendingSignInEmail,\r\n            isCreatingCustomerAccount,\r\n        },\r\n    } = checkoutState;\r\n\r\n    const billingAddress = getBillingAddress();\r\n    const checkout = getCheckout();\r\n    const customer = getCustomer();\r\n    const cart = getCart();\r\n    const signInEmail = getSignInEmail();\r\n    const config = getConfig();\r\n\r\n    if (!checkout || !config || !cart) {\r\n        return null;\r\n    }\r\n\r\n    const {\r\n        checkoutSettings: {\r\n            privacyPolicyUrl,\r\n            requiresMarketingConsent,\r\n            isSignInEmailEnabled,\r\n            isAccountCreationEnabled,\r\n            isExpressPrivacyPolicy,\r\n            features,\r\n        },\r\n    } = config as StoreConfig & { checkoutSettings: { isAccountCreationEnabled: boolean } };\r\n\r\n    const providerWithCustomCheckout = getProviderWithCustomCheckout(\r\n        config.checkoutSettings.providerWithCustomCheckout,\r\n    );\r\n\r\n    const fixNewsletterCheckboxExperimentEnabled = features['CHECKOUT-8033.fix_newletter_checkbox'];\r\n\r\n    return {\r\n        customerAccountFields: getCustomerAccountFields(),\r\n        canSubscribe: config.shopperConfig.showNewsletterSignup,\r\n        checkoutButtonIds: config.checkoutSettings.remoteCheckoutProviders,\r\n        clearError: checkoutService.clearError,\r\n        createAccount: checkoutService.createCustomerAccount,\r\n        continueAsGuest: checkoutService.continueAsGuest,\r\n        sendLoginEmail: checkoutService.sendSignInEmail,\r\n        defaultShouldSubscribe: config.shopperConfig.defaultNewsletterSignup,\r\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\r\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\r\n        email: billingAddress?.email || customer?.email,\r\n        firstName: customer?.firstName,\r\n        fixNewsletterCheckboxExperimentEnabled,\r\n        forgotPasswordUrl: config.links.forgotPasswordLink,\r\n        initializeCustomer: checkoutService.initializeCustomer,\r\n        isCreatingAccount: isCreatingCustomerAccount(),\r\n        createAccountError: getCreateCustomerAccountError(),\r\n        hasBillingId: !!billingAddress?.id,\r\n        isContinuingAsGuest: isContinuingAsGuest(),\r\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\r\n        isInitializing: isInitializingCustomer(),\r\n        isSignInEmailEnabled,\r\n        isAccountCreationEnabled,\r\n        isGuestEnabled: config.checkoutSettings.guestCheckoutEnabled,\r\n        isSigningIn: isSigningIn(),\r\n        isSendingSignInEmail: isSendingSignInEmail(),\r\n        signInEmail,\r\n        signInEmailError: getSignInEmailError(),\r\n        privacyPolicyUrl,\r\n        providerWithCustomCheckout,\r\n        requiresMarketingConsent,\r\n        signIn: checkoutService.signInCustomer,\r\n        signInError: getSignInError(),\r\n        isFloatingLabelEnabled: isFloatingLabelEnabled(config.checkoutSettings),\r\n        isExpressPrivacyPolicy,\r\n        isPaymentDataRequired: isPaymentDataRequired(),\r\n        shouldRenderStripeForm: providerWithCustomCheckout === PaymentMethodId.StripeUPE && shouldUseStripeLinkByMinimumAmount(cart),\r\n    };\r\n}\r\n\r\nexport default withAnalytics(withCheckout(mapToWithCheckoutCustomerProps)(Customer));\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconTag: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconTag);\r\n","import DOMPurify from 'dompurify';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { Alert, AlertType } from '../ui/alert';\r\nimport { IconTag } from '../ui/icon';\r\n\r\nexport interface PromotionBannerProps {\r\n    message: string;\r\n}\r\n\r\nconst PromotionBanner: FunctionComponent<PromotionBannerProps> = ({ message }) => (\r\n    <Alert\r\n        additionalClassName=\"optimizedCheckout-discountBanner\"\r\n        icon={<IconTag />}\r\n        type={AlertType.Info}\r\n    >\r\n        <span\r\n            dangerouslySetInnerHTML={{\r\n                __html: DOMPurify.sanitize(message),\r\n            }}\r\n            data-test=\"promotion-banner-message\"\r\n        />\r\n    </Alert>\r\n);\r\n\r\nexport default memo(PromotionBanner);\r\n","import { Banner, Promotion } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport PromotionBanner from './PromotionBanner';\r\nimport './PromotionBannerList.scss';\r\n\r\nexport interface PromotionBannerListProps {\r\n    promotions?: Promotion[];\r\n}\r\n\r\nconst PromotionBannerList: FunctionComponent<PromotionBannerListProps> = ({ promotions }) => {\r\n    const banners = (promotions || []).reduce(\r\n        (result, promotion) => [...result, ...promotion.banners],\r\n        [] as Banner[],\r\n    );\r\n\r\n    if (!banners.length) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"discountBanner\">\r\n            <ul className=\"discountBannerList\">\r\n                {banners.map((banner, index) => (\r\n                    <PromotionBanner key={index} message={banner.text} />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(PromotionBannerList);\r\n","import { Consignment, LineItemMap } from '@bigcommerce/checkout-sdk';\r\nimport { some } from 'lodash';\r\n\r\nimport hasUnassignedLineItems from './hasUnassignedLineItems';\r\n\r\nexport default function isUsingMultiShipping(\r\n    consignments: Consignment[],\r\n    lineItems: LineItemMap,\r\n): boolean {\r\n    if (consignments.length > 1) {\r\n        return true;\r\n    }\r\n\r\n    if (\r\n        some(consignments, (consignment) => consignment.lineItemIds.length) &&\r\n        hasUnassignedLineItems(consignments, lineItems)\r\n    ) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n","import {\r\n    Address,\r\n    AddressRequestBody,\r\n    BillingAddress,\r\n    CustomerAddress,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport { isEqual, omit } from 'lodash';\r\n\r\ntype ComparableAddress = CustomerAddress | Address | BillingAddress | AddressRequestBody;\r\ntype ComparableAddressFields = keyof CustomerAddress | keyof Address | keyof BillingAddress;\r\n\r\nconst normalizeAddress = (address: Partial<ComparableAddress>) => {\r\n    const ignoredFields: ComparableAddressFields[] = [\r\n        'id',\r\n        'shouldSaveAddress',\r\n        'stateOrProvince',\r\n        'type',\r\n        'email',\r\n        'country',\r\n        'customFields',\r\n    ];\r\n\r\n    return omit(address, ignoredFields);\r\n};\r\n\r\nconst isEqualToPayPalFastlaneAddress = (\r\n    bcAddress: Partial<ComparableAddress>,\r\n    paypalFastlaneAddress: Partial<ComparableAddress>,\r\n): boolean => isEqual(normalizeAddress(bcAddress), normalizeAddress(paypalFastlaneAddress));\r\n\r\nconst isPayPalFastlaneAddress = (address: Address, addresses?: Address[]): boolean => {\r\n    if (!addresses || addresses.length === 0) {\r\n        return false;\r\n    }\r\n\r\n    return addresses.some((paypalFastlaneAddress) =>\r\n        isEqualToPayPalFastlaneAddress(address, paypalFastlaneAddress),\r\n    );\r\n};\r\n\r\nexport default isPayPalFastlaneAddress;\r\n","import { Cart, Consignment } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\r\n\r\nimport { AddressType, StaticAddress } from '../address';\r\n\r\n// import { StaticShippingOption } from './shippingOption';\r\nimport './StaticConsignment.scss';\r\nimport StaticConsignmentItemList from './StaticConsignmentItemList';\r\n\r\ninterface StaticConsignmentProps {\r\n    consignment: Consignment;\r\n    cart: Cart;\r\n    compactView?: boolean;\r\n}\r\n\r\nconst StaticConsignment: FunctionComponent<StaticConsignmentProps> = ({\r\n    consignment,\r\n    cart,\r\n    compactView,\r\n}) => {\r\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\r\n    // const { shippingAddress: address, selectedShippingOption } = consignment;\r\n    const { shippingAddress: address } = consignment;\r\n    const showPayPalFastlaneAddressLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\r\n\r\n    return (\r\n        <div className=\"staticConsignment\">\r\n            <StaticAddress address={address} type={AddressType.Shipping} />\r\n\r\n            {showPayPalFastlaneAddressLabel && <PoweredByPayPalFastlaneLabel />}\r\n\r\n            {!compactView && <StaticConsignmentItemList cart={cart} consignment={consignment} />}\r\n\r\n            {/* {selectedShippingOption && (\r\n                <div>\r\n                    <div className=\"shippingOption shippingOption--alt shippingOption--selected\">\r\n                        <StaticShippingOption\r\n                            displayAdditionalInformation={false}\r\n                            method={selectedShippingOption}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )} */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(StaticConsignment);\r\n","import { Cart, Consignment } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { localizeAddress, TranslatedString } from '@bigcommerce/checkout/locale';\r\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\r\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\r\n\r\nimport ConsignmentLineItemDetail from './ConsignmentLineItemDetail';\r\nimport findLineItems from './findLineItems';\r\nimport getLineItemsCount from './getLineItemsCount';\r\nimport { StaticShippingOption } from './shippingOption';\r\nimport './StaticMultiConsignment.scss';\r\n\r\ninterface StaticMultiConsignmentProps {\r\n    consignment: Consignment;\r\n    cart: Cart;\r\n    consignmentNumber: number;\r\n}\r\n\r\nconst StaticMultiConsignment: FunctionComponent<StaticMultiConsignmentProps> = ({\r\n    consignment,\r\n    cart,\r\n    consignmentNumber,\r\n}) => {\r\n    const {\r\n        checkoutState: {\r\n            data: { getShippingCountries },\r\n        },\r\n    } = useCheckout();\r\n\r\n    const { shippingAddress: addressWithoutLocalization, selectedShippingOption } = consignment;\r\n    const address = localizeAddress(addressWithoutLocalization, getShippingCountries());\r\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\r\n    const showPayPalFastlaneAddressLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\r\n\r\n    const lineItems = findLineItems(cart, consignment);\r\n\r\n    return (\r\n        <div className=\"staticMultiConsignment\">\r\n            <h3 className=\"staticMultiConsignment-header\">\r\n                <TranslatedString data={{ consignmentNumber }} id=\"shipping.multishipping_consignment_index_heading\" />\r\n            </h3>\r\n\r\n            <div className=\"checkout-address--static\">\r\n                <p className=\"address-entry\">\r\n                    <span className=\"first-name\">{`${address.firstName} `}</span>\r\n                    <span className=\"family-name\">{address.lastName}</span>\r\n                </p>\r\n                <div className=\"address-details\">\r\n                    <p className=\"street-address address-entry\">\r\n                        <span className=\"address-line-1\">{`${address.address1}`}</span>\r\n                        {address.address2 && (\r\n                            <span className=\"address-line-2\">{`, ${address.address2}`}</span>\r\n                        )}\r\n                    </p>\r\n\r\n                    <p className=\"address-entry\">\r\n                        {address.city && <span className=\"locality\">{`${address.city}`}</span>}\r\n                        {address.localizedProvince && (\r\n                            <span className=\"region\">{`, ${address.localizedProvince}`}</span>\r\n                        )}\r\n                        {address.localizedCountry && (\r\n                            <span className=\"country-name\">{`, ${address.localizedCountry}`}</span>\r\n                        )}\r\n                        {address.postalCode && (\r\n                            <span className=\"postal-code\">{` ${address.postalCode}`}</span>\r\n                        )}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            {showPayPalFastlaneAddressLabel && <PoweredByPayPalFastlaneLabel />}\r\n\r\n            <div className=\"staticConsignment-items\">\r\n            <strong>\r\n                <TranslatedString\r\n                    data={{ count: getLineItemsCount(lineItems) }}\r\n                    id=\"cart.item_count_text\"\r\n                />\r\n            </strong>\r\n            \r\n            <ConsignmentLineItemDetail lineItems={lineItems} />\r\n        </div>\r\n\r\n            {selectedShippingOption && (\r\n                <div>\r\n                    <div className=\"shippingOption shippingOption--alt shippingOption--selected\">\r\n                        <StaticShippingOption\r\n                            displayAdditionalInformation={false}\r\n                            method={selectedShippingOption}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(StaticMultiConsignment);\r\n","\r\nimport { Cart, Consignment } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport StaticConsignment from './StaticConsignment';\r\nimport StaticMultiConsignment from './StaticMultiConsignment';\r\n\r\n\r\ninterface ShippingSummaryProps {\r\n    isNewMultiShippingUIEnabled: boolean;\r\n    isMultiShippingMode: boolean;\r\n    consignments: Consignment[];\r\n    cart: Cart;\r\n}\r\n\r\nconst ShippingSummary: FunctionComponent<ShippingSummaryProps> = ({\r\n    isNewMultiShippingUIEnabled,\r\n    isMultiShippingMode,\r\n    consignments,\r\n    cart\r\n}) => {\r\n    if (isNewMultiShippingUIEnabled && isMultiShippingMode) {\r\n        return (\r\n            <>\r\n                {consignments.map((consignment, index) => (\r\n                    <div className=\"staticMultiConsignmentContainer\" key={consignment.id}>\r\n                        <StaticMultiConsignment\r\n                            cart={cart}\r\n                            consignment={consignment}\r\n                            consignmentNumber={index + 1}\r\n                        />\r\n                    </div>\r\n                ))}\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {consignments.map((consignment) => (\r\n                <div className=\"staticConsignmentContainer\" key={consignment.id}>\r\n                    <StaticConsignment\r\n                        cart={cart}\r\n                        compactView={consignments.length < 2}\r\n                        consignment={consignment}\r\n                    />\r\n                </div>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default memo(ShippingSummary);\r\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\r\n\r\nimport { CustomError, setPrototypeOf } from '../../common/error';\r\n\r\nexport default class ShippingOptionExpiredError extends CustomError {\r\n    constructor() {\r\n        super({\r\n            name: 'SHIPPING_OPTION_EXPIRED',\r\n            message: getLanguageService().translate('shipping.shipping_option_expired_error'),\r\n            title: getLanguageService().translate('shipping.shipping_option_expired_heading'),\r\n        });\r\n\r\n        setPrototypeOf(this, ShippingOptionExpiredError.prototype);\r\n    }\r\n}\r\n","import React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nexport interface LoadingNotificationProps {\r\n    isLoading: boolean;\r\n}\r\n\r\nconst LoadingNotification: FunctionComponent<LoadingNotificationProps> = ({ isLoading }) => {\r\n    if (!isLoading) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"loadingNotification\">\r\n            <div className=\"loadingNotification-label optimizedCheckout-loadingToaster\">\r\n                <div className=\"spinner\" />\r\n\r\n                <span aria-live=\"assertive\" className=\"label\" role=\"alert\">\r\n                    <TranslatedString id=\"common.loading_text\" />\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(LoadingNotification);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconCheck: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconCheck);\r\n","import classNames from 'classnames';\r\nimport { noop } from 'lodash';\r\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\r\n\r\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\r\nimport { IconCheck } from '../ui/icon';\r\n\r\nimport CheckoutStepType from './CheckoutStepType';\r\n\r\nexport interface CheckoutStepHeaderProps {\r\n    heading: ReactNode;\r\n    isActive?: boolean;\r\n    isComplete?: boolean;\r\n    isEditable?: boolean;\r\n    summary?: ReactNode;\r\n    type: CheckoutStepType;\r\n    onEdit?(type: CheckoutStepType): void;\r\n}\r\n\r\nconst CheckoutStepHeader: FunctionComponent<CheckoutStepHeaderProps> = ({\r\n    heading,\r\n    isActive,\r\n    isComplete,\r\n    isEditable,\r\n    onEdit,\r\n    summary,\r\n    type,\r\n}) => {\r\n    return (\r\n        <div\r\n            className={classNames('stepHeader', {\r\n                'is-readonly': !isEditable,\r\n                'is-clickable': isEditable && !isActive,\r\n            })}\r\n            onClick={preventDefault(isEditable && onEdit ? () => onEdit(type) : noop)}\r\n        >\r\n            <div className=\"stepHeader-figure stepHeader-column\">\r\n                <IconCheck\r\n                    additionalClassName={classNames(\r\n                        'stepHeader-counter',\r\n                        'optimizedCheckout-step',\r\n                        { 'stepHeader-counter--complete': isComplete },\r\n                    )}\r\n                />\r\n\r\n                <h2 className=\"stepHeader-title optimizedCheckout-headingPrimary\">{heading}</h2>\r\n            </div>\r\n\r\n            <div\r\n                className=\"stepHeader-body stepHeader-column optimizedCheckout-contentPrimary\"\r\n                data-test=\"step-info\"\r\n            >\r\n                {!isActive && isComplete && summary}\r\n            </div>\r\n\r\n            {isEditable && !isActive && (\r\n                <div className=\"stepHeader-actions stepHeader-column\">\r\n                    <Button\r\n                        aria-expanded={isActive}\r\n                        size={ButtonSize.Tiny}\r\n                        testId=\"step-edit-button\"\r\n                        variant={ButtonVariant.Secondary}\r\n                    >\r\n                        <TranslatedString id=\"common.edit_action\" />\r\n                    </Button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(CheckoutStepHeader);\r\n","import classNames from 'classnames';\r\nimport { noop } from 'lodash';\r\nimport React, { Component, createRef, ReactNode } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport { isMobileView, MobileView } from '../ui/responsive';\r\n\r\nimport CheckoutStepHeader from './CheckoutStepHeader';\r\nimport CheckoutStepType from './CheckoutStepType';\r\n\r\nexport interface CheckoutStepProps {\r\n    heading?: ReactNode;\r\n    isActive?: boolean;\r\n    isBusy: boolean;\r\n    isComplete?: boolean;\r\n    isEditable?: boolean;\r\n    suggestion?: ReactNode;\r\n    summary?: ReactNode;\r\n    type: CheckoutStepType;\r\n    onExpanded?(step: CheckoutStepType): void;\r\n    onEdit?(step: CheckoutStepType): void;\r\n}\r\n\r\nexport interface CheckoutStepState {\r\n    isClosed: boolean;\r\n}\r\n\r\nexport default class CheckoutStep extends Component<CheckoutStepProps, CheckoutStepState> {\r\n    state = {\r\n        isClosed: true,\r\n    };\r\n\r\n    private containerRef = createRef<HTMLLIElement>();\r\n    private contentRef = createRef<HTMLDivElement>();\r\n    private timeoutRef?: number;\r\n    private timeoutDelay?: number;\r\n\r\n    componentDidMount(): void {\r\n        const { isActive } = this.props;\r\n\r\n        if (isActive) {\r\n            this.focusStep();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<CheckoutStepProps>): void {\r\n        const { isActive } = this.props;\r\n\r\n        if (isActive && isActive !== prevProps.isActive) {\r\n            this.focusStep();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        if (this.timeoutRef) {\r\n            window.clearTimeout(this.timeoutRef);\r\n\r\n            this.timeoutRef = undefined;\r\n        }\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { heading, isActive, isComplete, isEditable, onEdit, suggestion, summary, type } =\r\n            this.props;\r\n\r\n        const { isClosed } = this.state;\r\n\r\n        return (\r\n            <li\r\n                className={classNames('checkout-step', 'optimizedCheckout-checkoutStep', {\r\n                    [`checkout-step--${type}`]: !!type,\r\n                })}\r\n                ref={this.containerRef}\r\n            >\r\n                <div className=\"checkout-view-header\">\r\n                    <CheckoutStepHeader\r\n                        heading={heading}\r\n                        isActive={isActive}\r\n                        isComplete={isComplete}\r\n                        isEditable={isEditable}\r\n                        onEdit={onEdit}\r\n                        summary={summary}\r\n                        type={type}\r\n                    />\r\n                </div>\r\n\r\n                {suggestion && isClosed && !isActive && (\r\n                    <div className=\"checkout-suggestion\" data-test=\"step-suggestion\">\r\n                        {suggestion}\r\n                    </div>\r\n                )}\r\n\r\n                {this.renderContent()}\r\n            </li>\r\n        );\r\n    }\r\n\r\n    private renderContent(): ReactNode {\r\n        const { children, isActive, isBusy } = this.props;\r\n\r\n        return (\r\n            <MobileView>\r\n                {(matched) => (\r\n                    <CSSTransition\r\n                        addEndListener={this.handleTransitionEnd}\r\n                        classNames=\"checkout-view-content\"\r\n                        enter={!matched}\r\n                        exit={!matched}\r\n                        in={isActive}\r\n                        mountOnEnter\r\n                        onExited={ this.onAnimationEnd }\r\n                        timeout={ {} }\r\n                        unmountOnExit\r\n                    >\r\n                        <div\r\n                            aria-busy={isBusy}\r\n                            className=\"checkout-view-content\"\r\n                            ref={this.contentRef}\r\n                        >\r\n                            {isActive ? children : null}\r\n                        </div>\r\n                    </CSSTransition>\r\n                )}\r\n            </MobileView>\r\n        );\r\n    }\r\n\r\n    private focusStep(): void {\r\n        const delay = isMobileView() ? 0 : this.getTransitionDelay();\r\n\r\n        this.setState({ isClosed: false });\r\n\r\n        this.timeoutRef = window.setTimeout(() => {\r\n            const input = this.getChildInput();\r\n            const position = this.getScrollPosition();\r\n            const { type, onExpanded = noop } = this.props;\r\n\r\n            if (input) {\r\n                input.focus();\r\n            }\r\n\r\n            if (position !== undefined && !isNaN(position)) {\r\n                window.scrollTo(0, position);\r\n            }\r\n\r\n            onExpanded(type);\r\n\r\n            this.timeoutRef = undefined;\r\n        }, delay);\r\n    }\r\n\r\n    private getChildInput(): HTMLElement | undefined {\r\n        const container = this.containerRef.current;\r\n\r\n        if (!container) {\r\n            return;\r\n        }\r\n\r\n        const input = container.querySelector<HTMLElement>('input, select, textarea');\r\n\r\n        return input || undefined;\r\n    }\r\n\r\n    private getScrollPosition(): number | undefined {\r\n        const container = this.getParentContainer();\r\n        const { isComplete } = this.props;\r\n\r\n        if (!container || window !== window.top) {\r\n            return;\r\n        }\r\n\r\n        const topOffset = isComplete ? 0 : window.innerHeight / 5;\r\n        const containerOffset =\r\n            container.getBoundingClientRect().top + (window.scrollY || window.pageYOffset);\r\n\r\n        return containerOffset - topOffset;\r\n    }\r\n\r\n    // For now, we need to find the parent container because `CheckoutStep`\r\n    // isn't the outer container yet. Once both the header and body are\r\n    // moved inside this component, we can remove the lookup.\r\n    private getParentContainer(): HTMLElement | undefined {\r\n        let container: HTMLElement | null = this.containerRef.current;\r\n\r\n        while (container && container.parentElement) {\r\n            if (container.parentElement.classList.contains('checkout-step')) {\r\n                return container.parentElement;\r\n            }\r\n\r\n            container = container.parentElement;\r\n        }\r\n\r\n        return this.containerRef.current ? this.containerRef.current : undefined;\r\n    }\r\n\r\n    private getTransitionDelay(): number {\r\n        if (this.timeoutDelay !== undefined) {\r\n            return this.timeoutDelay;\r\n        }\r\n\r\n        // Cache the result to avoid unnecessary reflow\r\n        this.timeoutDelay =\r\n            parseFloat(\r\n                this.contentRef.current\r\n                    ? getComputedStyle(this.contentRef.current).transitionDuration\r\n                    : '0s',\r\n            ) * 1000;\r\n\r\n        return this.timeoutDelay;\r\n    }\r\n\r\n    private handleTransitionEnd: (node: HTMLElement, done: () => void) => void = (node, done) => {\r\n        node.addEventListener('transitionend', ({ target }) => {\r\n            if (target === node) {\r\n                done();\r\n            }\r\n        });\r\n    };\r\n\r\n    private onAnimationEnd = (): void => {\r\n        const { isActive } = this.props;\r\n\r\n        if (!isActive) {\r\n            this.setState({ isClosed: true });\r\n        }\r\n    }\r\n}\r\n","enum CheckoutStepType {\r\n    Billing = 'billing',\r\n    Customer = 'customer',\r\n    Payment = 'payment',\r\n    Shipping = 'shipping',\r\n}\r\n\r\nexport default CheckoutStepType;\r\n","import { Cart, StoreConfig } from '@bigcommerce/checkout-sdk';\r\n\r\nconst itemsRequireShipping = (cart?: Cart, config?: StoreConfig) => {\r\n    if (!cart) {\r\n        return false;\r\n    }\r\n\r\n    if (cart.lineItems.physicalItems.some((lineItem) => lineItem.isShippingRequired)) {\r\n        return true;\r\n    }\r\n\r\n    if (config && cart.lineItems.customItems\r\n    ) {\r\n        return cart.lineItems.customItems.length > 0;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nexport default itemsRequireShipping;\r\n","import { CheckoutPayment, CheckoutSelectors } from '@bigcommerce/checkout-sdk';\r\nimport { compact } from 'lodash';\r\nimport { createSelector } from 'reselect';\r\n\r\nimport { shouldUseStripeLinkByMinimumAmount } from '@bigcommerce/checkout/instrument-utils';\r\n\r\nimport { isValidAddress } from '../address';\r\nimport { EMPTY_ARRAY, isExperimentEnabled } from '../common/utility';\r\nimport { SUPPORTED_METHODS } from '../customer';\r\nimport { PaymentMethodId } from '../payment/paymentMethod';\r\nimport {\r\n    hasSelectedShippingOptions,\r\n    hasUnassignedLineItems,\r\n    itemsRequireShipping,\r\n} from '../shipping';\r\n\r\nimport CheckoutStepType from './CheckoutStepType';\r\n\r\n// StripeLink is a UX that is only available with StripeUpe and will only be displayed for BC guest users,\r\n// it uses its own components in the customer and shipping steps, unfortunately in order to preserve the UX\r\n// when reloading the checkout page it's necessary to refill the stripe components with the information saved.\r\n// In this step, we require that the customer strategy be reloaded the first time.\r\nconst getStripeLinkAndCheckoutPageIsReloaded = (\r\n    isUsingWallet: boolean,\r\n    hasEmail: boolean,\r\n    isGuest: boolean,\r\n    shouldUseStripeLinkByMinimumAmount: boolean,\r\n    providerWithCustomCheckout?: string | null,\r\n) => {\r\n    return !isUsingWallet && providerWithCustomCheckout === PaymentMethodId.StripeUPE && hasEmail && isGuest && shouldUseStripeLinkByMinimumAmount;\r\n}\r\n\r\nconst getCustomerStepStatus = createSelector(\r\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\r\n    ({ data }: CheckoutSelectors) => data.getCustomer(),\r\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\r\n    ({ data }: CheckoutSelectors) => data.getConfig(),\r\n    ({ data }: CheckoutSelectors) => data.getCart(),\r\n    ({ data }: CheckoutSelectors) => data.getPaymentProviderCustomer(),\r\n    (checkout, customer, billingAddress, config, cart, paymentProviderCustomer) => {\r\n        const hasEmail = !!(\r\n            (customer && customer.email) ||\r\n            (billingAddress && billingAddress.email)\r\n        );\r\n        const isUsingWallet =\r\n            checkout && checkout.payments\r\n                ? checkout.payments.some(\r\n                    (payment: CheckoutPayment) => SUPPORTED_METHODS.indexOf(payment.providerId) >= 0,\r\n                  )\r\n                : false;\r\n        const isGuest = !!(customer && customer.isGuest);\r\n        const isComplete = hasEmail || isUsingWallet;\r\n        const isEditable = isComplete && !isUsingWallet && isGuest;\r\n        const isUsingStripeLinkAndCheckoutPageIsReloaded = getStripeLinkAndCheckoutPageIsReloaded(\r\n            isUsingWallet,\r\n            hasEmail,\r\n            isGuest,\r\n            cart ? shouldUseStripeLinkByMinimumAmount(cart) : false,\r\n            config?.checkoutSettings.providerWithCustomCheckout,\r\n        );\r\n\r\n        if (isUsingStripeLinkAndCheckoutPageIsReloaded) {\r\n            return {\r\n                type: CheckoutStepType.Customer,\r\n                isActive: false,\r\n                isComplete: paymentProviderCustomer?.stripeLinkAuthenticationState !== undefined,\r\n                isEditable,\r\n                isRequired: true,\r\n            };\r\n        }\r\n\r\n        return {\r\n            type: CheckoutStepType.Customer,\r\n            isActive: false,\r\n            isComplete,\r\n            isEditable,\r\n            isRequired: true,\r\n        };\r\n    },\r\n);\r\n\r\nconst getBillingStepStatus = createSelector(\r\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\r\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\r\n    ({ data }: CheckoutSelectors) => {\r\n        const billingAddress = data.getBillingAddress();\r\n\r\n        return billingAddress\r\n            ? data.getBillingAddressFields(billingAddress.countryCode)\r\n            : EMPTY_ARRAY;\r\n    },\r\n    ({ data }: CheckoutSelectors) => data.getConfig(),\r\n    (checkout, billingAddress, billingAddressFields, config) => {\r\n        const hasAddress = billingAddress\r\n            ? isValidAddress(billingAddress, billingAddressFields)\r\n            : false;\r\n        const isUsingWallet =\r\n            checkout && checkout.payments\r\n                ? checkout.payments.some(\r\n                      (payment) => SUPPORTED_METHODS.indexOf(payment.providerId) >= 0,\r\n                  )\r\n                : false;\r\n        const isComplete = hasAddress || isUsingWallet;\r\n        const isUsingAmazonPay =\r\n            checkout && checkout.payments\r\n                ? checkout.payments.some((payment) => payment.providerId === 'amazonpay')\r\n                : false;\r\n\r\n        if (isUsingAmazonPay) {\r\n            const billingAddressCustomFields = billingAddressFields.filter(\r\n                ({ custom }: { custom: boolean }) => custom,\r\n            );\r\n            const hasCustomFields = billingAddressCustomFields.length > 0;\r\n            const isAmazonPayBillingStepComplete =\r\n                billingAddress && hasCustomFields\r\n                    ? isValidAddress(billingAddress, billingAddressCustomFields)\r\n                    : true;\r\n\r\n            return {\r\n                type: CheckoutStepType.Billing,\r\n                isActive: false,\r\n                isComplete: isAmazonPayBillingStepComplete,\r\n                isEditable: isAmazonPayBillingStepComplete && hasCustomFields,\r\n                isRequired: true,\r\n            };\r\n        }\r\n\r\n        const isGooglePayBillingAddressEditingEnabled = isExperimentEnabled(\r\n            config?.checkoutSettings,\r\n            'STRIPE-546.allow_billing_address_editing_for_all_Google_Pay_providers',\r\n        );\r\n        const isUsingGooglePay =\r\n            isGooglePayBillingAddressEditingEnabled && (checkout && checkout.payments\r\n                ? checkout.payments.some((payment) => (payment?.providerId || '').startsWith('googlepay'))\r\n                : false);\r\n\r\n        if (isUsingGooglePay) {\r\n            return {\r\n                type: CheckoutStepType.Billing,\r\n                isActive: false,\r\n                isComplete: hasAddress,\r\n                isEditable: hasAddress,\r\n                isRequired: true,\r\n            };\r\n        }\r\n\r\n        const isUsingPaypal =\r\n            checkout && checkout.payments\r\n                ? checkout.payments.some(\r\n                    (payment) =>\r\n                        [\r\n                            'braintreepaypal',\r\n                            'braintreepaypalcredit',\r\n                            'braintreevenmo',\r\n                            'paypalcommerce',\r\n                            'paypalcommercecredit',\r\n                            'paypalcommercevenmo'\r\n                        ]\r\n                            .includes(payment.providerId))\r\n                : false;\r\n\r\n        if (isUsingPaypal) {\r\n            return {\r\n                type: CheckoutStepType.Billing,\r\n                isActive: false,\r\n                isComplete: hasAddress,\r\n                isEditable: hasAddress,\r\n                isRequired: true,\r\n            };\r\n        }\r\n\r\n        return {\r\n            type: CheckoutStepType.Billing,\r\n            isActive: false,\r\n            isComplete,\r\n            isEditable: isComplete && !isUsingWallet,\r\n            isRequired: true,\r\n        };\r\n    },\r\n);\r\n\r\nconst getShippingStepStatus = createSelector(\r\n    ({ data }: CheckoutSelectors) => data.getShippingAddress(),\r\n    ({ data }: CheckoutSelectors) => data.getConsignments(),\r\n    ({ data }: CheckoutSelectors) => data.getCart(),\r\n    ({ data }: CheckoutSelectors) => {\r\n        const shippingAddress = data.getShippingAddress();\r\n\r\n        return shippingAddress\r\n            ? data.getShippingAddressFields(shippingAddress.countryCode)\r\n            : EMPTY_ARRAY;\r\n    },\r\n    ({ data }: CheckoutSelectors) => data.getConfig(),\r\n    (shippingAddress, consignments, cart, shippingAddressFields, config) => {\r\n        const validateAddressFields =\r\n            isExperimentEnabled(\r\n                config?.checkoutSettings,\r\n                'CHECKOUT-7560.address_fields_max_length_validation'\r\n            );\r\n        const hasAddress = shippingAddress\r\n            ? isValidAddress(shippingAddress, shippingAddressFields, validateAddressFields)\r\n            : false;\r\n        const hasOptions = consignments ? hasSelectedShippingOptions(consignments) : false;\r\n        const hasUnassignedItems =\r\n            cart && consignments ? hasUnassignedLineItems(consignments, cart.lineItems) : true;\r\n        const isComplete = hasAddress && hasOptions && !hasUnassignedItems;\r\n        const isRequired = itemsRequireShipping(cart, config);\r\n        const isCustomShippingSelected =\r\n            isExperimentEnabled(\r\n                config?.checkoutSettings,\r\n                'PROJECT-5015.manual_order.display_custom_shipping',\r\n            ) &&\r\n            hasOptions &&\r\n            consignments?.some(\r\n                ({ selectedShippingOption }) => selectedShippingOption?.type === 'custom',\r\n            );\r\n\r\n        return {\r\n            type: CheckoutStepType.Shipping,\r\n            isActive: false,\r\n            isComplete,\r\n            isEditable: isComplete && isRequired && !isCustomShippingSelected,\r\n            isRequired,\r\n        };\r\n    },\r\n);\r\n\r\nconst getPaymentStepStatus = createSelector(\r\n    ({ data }: CheckoutSelectors) => data.getOrder(),\r\n    (order) => {\r\n        const isComplete = order ? order.isComplete : false;\r\n\r\n        return {\r\n            type: CheckoutStepType.Payment,\r\n            isActive: false,\r\n            isComplete,\r\n            isEditable: isComplete,\r\n            isRequired: true,\r\n        };\r\n    },\r\n);\r\n\r\nconst getOrderSubmitStatus = createSelector(\r\n    ({ statuses }: CheckoutSelectors) => statuses.isSubmittingOrder(),\r\n    (status) => status,\r\n);\r\n\r\nconst getCheckoutStepStatuses = createSelector(\r\n    getCustomerStepStatus,\r\n    getShippingStepStatus,\r\n    getBillingStepStatus,\r\n    getPaymentStepStatus,\r\n    getOrderSubmitStatus,\r\n    (customerStep, shippingStep, billingStep, paymentStep, orderStatus) => {\r\n        const isSubmittingOrder = orderStatus;\r\n\r\n        const steps = compact([customerStep, shippingStep, billingStep, paymentStep]);\r\n\r\n        const defaultActiveStep =\r\n            steps.find((step) => !step.isComplete && step.isRequired) || steps[steps.length - 1];\r\n\r\n        return steps.map((step, index) => {\r\n            const isPrevStepComplete = steps\r\n                .slice(0, index)\r\n                .every((prevStep) => prevStep.isComplete || !prevStep.isRequired);\r\n\r\n            return {\r\n                ...step,\r\n                isActive: defaultActiveStep.type === step.type,\r\n                isBusy: false,\r\n                // A step is only editable if its previous step is complete or not required\r\n                isEditable: isPrevStepComplete && step.isEditable && !isSubmittingOrder,\r\n            };\r\n        });\r\n    },\r\n);\r\n\r\nexport default getCheckoutStepStatuses;\r\n","import {\r\n    Address,\r\n    Cart,\r\n    CartChangedError,\r\n    CheckoutParams,\r\n    CheckoutSelectors,\r\n    Consignment,\r\n    EmbeddedCheckoutMessenger,\r\n    EmbeddedCheckoutMessengerOptions,\r\n    ExtensionRegion,\r\n    FlashMessage,\r\n    PaymentMethod,\r\n    Promotion,\r\n RequestOptions } from '@bigcommerce/checkout-sdk';\r\nimport classNames from 'classnames';\r\nimport { find, findIndex } from 'lodash';\r\nimport React, { Component, lazy, ReactNode } from 'react';\r\n\r\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\r\nimport { Extension, ExtensionContextProps, withExtension } from '@bigcommerce/checkout/checkout-extension';\r\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\r\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\r\nimport { AddressFormSkeleton, ChecklistSkeleton } from '@bigcommerce/checkout/ui';\r\n// import { AddressFormSkeleton} from '@bigcommerce/checkout/ui';\r\n\r\nimport { withAnalytics } from '../analytics';\r\n// import { StaticBillingAddress } from '../billing';\r\nimport { EmptyCartMessage } from '../cart';\r\nimport { withCheckout } from '../checkout';\r\nimport { CustomError, ErrorModal, isCustomError } from '../common/error';\r\nimport { retry } from '../common/utility';\r\nimport {\r\n    CheckoutButtonContainer,\r\n    CheckoutSuggestion,\r\n    Customer,\r\n    CustomerInfo,\r\n    CustomerSignOutEvent,\r\n    CustomerViewType,\r\n} from '../customer';\r\nimport { getSupportedMethodIds } from '../customer/getSupportedMethods';\r\nimport { SubscribeSessionStorage } from '../customer/SubscribeSessionStorage';\r\nimport { EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\r\nimport { PromotionBannerList } from '../promotion';\r\nimport { hasSelectedShippingOptions, isUsingMultiShipping, ShippingSummary } from '../shipping';\r\nimport { ShippingOptionExpiredError } from '../shipping/shippingOption';\r\nimport { LazyContainer, LoadingNotification, LoadingOverlay } from '../ui/loading';\r\nimport { MobileView } from '../ui/responsive';\r\n\r\nimport CheckoutStep from './CheckoutStep';\r\nimport CheckoutStepStatus from './CheckoutStepStatus';\r\nimport CheckoutStepType from './CheckoutStepType';\r\nimport CheckoutSupport from './CheckoutSupport';\r\nimport mapToCheckoutProps from './mapToCheckoutProps';\r\nimport navigateToOrderConfirmation from './navigateToOrderConfirmation';\r\n\r\n// const Billing = lazy(() =>\r\n//     retry(\r\n//         () =>\r\n//             import(\r\n//                 /* webpackChunkName: \"billing\" */\r\n//                 '../billing/Billing'\r\n//             ),\r\n//     ),\r\n// );\r\n\r\nconst CartSummary = lazy(() =>\r\n    retry(\r\n        () =>\r\n            import(\r\n                /* webpackChunkName: \"cart-summary\" */\r\n                '../cart/CartSummary'\r\n            ),\r\n    ),\r\n);\r\n\r\nconst CartSummaryDrawer = lazy(() =>\r\n    retry(\r\n        () =>\r\n            import(\r\n                /* webpackChunkName: \"cart-summary-drawer\" */\r\n                '../cart/CartSummaryDrawer'\r\n            ),\r\n    ),\r\n);\r\n\r\nconst Payment = lazy(() =>\r\n    retry(\r\n        () =>\r\n            import(\r\n                /* webpackChunkName: \"payment\" */\r\n                '../payment/Payment'\r\n            ),\r\n    ),\r\n);\r\n\r\nconst Shipping = lazy(() =>\r\n    retry(\r\n        () =>\r\n            import(\r\n                /* webpackChunkName: \"shipping\" */\r\n                '../shipping/Shipping'\r\n            ),\r\n    ),\r\n);\r\n\r\nexport interface CheckoutProps {\r\n    checkoutId: string;\r\n    containerId: string;\r\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\r\n    embeddedSupport: CheckoutSupport;\r\n    errorLogger: ErrorLogger;\r\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\r\n}\r\n\r\nexport interface CheckoutState {\r\n    activeStepType?: CheckoutStepType;\r\n    isBillingSameAsShipping: boolean;\r\n    customerViewType?: CustomerViewType;\r\n    defaultStepType?: CheckoutStepType;\r\n    error?: Error;\r\n    flashMessages?: FlashMessage[];\r\n    isMultiShippingMode: boolean;\r\n    isCartEmpty: boolean;\r\n    isRedirecting: boolean;\r\n    hasSelectedShippingOptions: boolean;\r\n    isSubscribed: boolean;\r\n    buttonConfigs: PaymentMethod[];\r\n}\r\n\r\nexport interface WithCheckoutProps {\r\n    billingAddress?: Address;\r\n    cart?: Cart;\r\n    consignments?: Consignment[];\r\n    error?: Error;\r\n    hasCartChanged: boolean;\r\n    flashMessages?: FlashMessage[];\r\n    isGuestEnabled: boolean;\r\n    isLoadingCheckout: boolean;\r\n    isPending: boolean;\r\n    isPriceHiddenFromGuests: boolean;\r\n    isShowingWalletButtonsOnTop: boolean;\r\n    isNewMultiShippingUIEnabled: boolean;\r\n    loginUrl: string;\r\n    cartUrl: string;\r\n    createAccountUrl: string;\r\n    promotions?: Promotion[];\r\n    steps: CheckoutStepStatus[];\r\n    clearError(error?: Error): void;\r\n    loadCheckout(id: string, options?: RequestOptions<CheckoutParams>): Promise<CheckoutSelectors>;\r\n    loadPaymentMethodByIds(methodIds: string[]): Promise<CheckoutSelectors>;\r\n    subscribeToConsignments(subscriber: (state: CheckoutSelectors) => void): () => void;\r\n}\r\n\r\nclass Checkout extends Component<\r\n    CheckoutProps &\r\n        WithCheckoutProps &\r\n        WithLanguageProps &\r\n        AnalyticsContextProps &\r\n        ExtensionContextProps,\r\n    CheckoutState\r\n> {\r\n    state: CheckoutState = {\r\n        isBillingSameAsShipping: true,\r\n        isCartEmpty: false,\r\n        isRedirecting: false,\r\n        isMultiShippingMode: false,\r\n        hasSelectedShippingOptions: false,\r\n        isSubscribed: false,\r\n        buttonConfigs: [],\r\n    };\r\n\r\n    private embeddedMessenger?: EmbeddedCheckoutMessenger;\r\n    private unsubscribeFromConsignments?: () => void;\r\n\r\n    componentWillUnmount(): void {\r\n        if (this.unsubscribeFromConsignments) {\r\n            this.unsubscribeFromConsignments();\r\n            this.unsubscribeFromConsignments = undefined;\r\n        }\r\n\r\n        window.removeEventListener('beforeunload', this.handleBeforeExit);\r\n        this.handleBeforeExit();\r\n    }\r\n\r\n    async componentDidMount(): Promise<void> {\r\n        const {\r\n            analyticsTracker,\r\n            checkoutId,\r\n            containerId,\r\n            createEmbeddedMessenger,\r\n            embeddedStylesheet,\r\n            extensionService,\r\n            loadCheckout,\r\n            loadPaymentMethodByIds,\r\n            subscribeToConsignments,\r\n        } = this.props;\r\n\r\n        try {\r\n            const [{ data }] = await Promise.all([loadCheckout(checkoutId, {\r\n                params: {\r\n                    include: [\r\n                        'cart.lineItems.physicalItems.categoryNames',\r\n                        'cart.lineItems.digitalItems.categoryNames',\r\n                    ] as any, // FIXME: Currently the enum is not exported so it can't be used here.\r\n                },\r\n            }), extensionService.loadExtensions()]);\r\n\r\n            const providers = data.getConfig()?.checkoutSettings?.remoteCheckoutProviders || [];\r\n            const supportedProviders = getSupportedMethodIds(providers);\r\n\r\n            if (providers.length > 0) {\r\n                const configs = await loadPaymentMethodByIds(supportedProviders);\r\n\r\n                this.setState({\r\n                    buttonConfigs: configs.data.getPaymentMethods() || [],\r\n                });\r\n            }\r\n\r\n            extensionService.preloadExtensions();\r\n\r\n            const { links: { siteLink = '' } = {} } = data.getConfig() || {};\r\n            const errorFlashMessages = data.getFlashMessages('error') || [];\r\n\r\n            if (errorFlashMessages.length) {\r\n                const { language } = this.props;\r\n\r\n                this.setState({\r\n                    error: new CustomError({\r\n                        title:\r\n                            errorFlashMessages[0].title ||\r\n                            language.translate('common.error_heading'),\r\n                        message: errorFlashMessages[0].message,\r\n                        data: {},\r\n                        name: 'default',\r\n                    }),\r\n                });\r\n            }\r\n\r\n            const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\r\n\r\n            this.unsubscribeFromConsignments = subscribeToConsignments(\r\n                this.handleConsignmentsUpdated,\r\n            );\r\n            this.embeddedMessenger = messenger;\r\n            messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\r\n            messenger.postFrameLoaded({ contentId: containerId });\r\n            messenger.postLoaded();\r\n\r\n            analyticsTracker.checkoutBegin();\r\n\r\n            const consignments = data.getConsignments();\r\n            const cart = data.getCart();\r\n\r\n            const hasMultiShippingEnabled =\r\n                data.getConfig()?.checkoutSettings.hasMultiShippingEnabled;\r\n            const checkoutBillingSameAsShippingEnabled = true;\r\n                // data.getConfig()?.checkoutSettings.checkoutBillingSameAsShippingEnabled ?? true; ## RESET THIS IF WE NEED TO CAPTURE DIFFERENT BILLING INFORMATION\r\n            const defaultNewsletterSignupOption =\r\n                data.getConfig()?.shopperConfig.defaultNewsletterSignup ??\r\n                false;\r\n            const isMultiShippingMode =\r\n                !!cart &&\r\n                !!consignments &&\r\n                hasMultiShippingEnabled &&\r\n                isUsingMultiShipping(consignments, cart.lineItems);\r\n\r\n            this.setState({\r\n                isBillingSameAsShipping: checkoutBillingSameAsShippingEnabled,\r\n                isSubscribed: defaultNewsletterSignupOption,\r\n            });\r\n\r\n            if (isMultiShippingMode) {\r\n                this.setState({ isMultiShippingMode }, this.handleReady);\r\n            } else {\r\n                this.handleReady();\r\n            }\r\n\r\n            window.addEventListener('beforeunload', this.handleBeforeExit);\r\n\r\n        } catch (error) {\r\n            if (error instanceof Error) {\r\n                this.handleUnhandledError(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { error } = this.state;\r\n        let errorModal = null;\r\n\r\n        if (error) {\r\n            if (isCustomError(error)) {\r\n                errorModal = (\r\n                    <ErrorModal\r\n                        error={error}\r\n                        onClose={this.handleCloseErrorModal}\r\n                        title={error.title}\r\n                    />\r\n                );\r\n            } else {\r\n                errorModal = <ErrorModal error={error} onClose={this.handleCloseErrorModal} />;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className={classNames('remove-checkout-step-numbers', { 'is-embedded': isEmbedded() })} data-test=\"checkout-page-container\" id=\"checkout-page-container\">\r\n                <div className=\"layout optimizedCheckout-contentPrimary\">\r\n                    {this.renderContent()}\r\n                </div>\r\n                {errorModal}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderContent(): ReactNode {\r\n        const { isPending, loginUrl, promotions = [], steps, isShowingWalletButtonsOnTop, extensionState } = this.props;\r\n\r\n        const { activeStepType, defaultStepType, isCartEmpty, isRedirecting } = this.state;\r\n\r\n        if (isCartEmpty) {\r\n            return <EmptyCartMessage loginUrl={loginUrl} waitInterval={3000} />;\r\n        }\r\n\r\n        const isPaymentStepActive = activeStepType\r\n            ? activeStepType === CheckoutStepType.Payment\r\n            : defaultStepType === CheckoutStepType.Payment;\r\n\r\n        return (\r\n            <LoadingOverlay hideContentWhenLoading isLoading={isRedirecting}>\r\n                <div className=\"layout-main\">\r\n                    <LoadingNotification isLoading={(!isShowingWalletButtonsOnTop && isPending) || extensionState.isShowingLoadingIndicator} />\r\n\r\n                    <PromotionBannerList promotions={promotions} />\r\n                    {isShowingWalletButtonsOnTop && this.state.buttonConfigs?.length > 0 && (\r\n                        <CheckoutButtonContainer\r\n                            checkEmbeddedSupport={this.checkEmbeddedSupport}\r\n                            isPaymentStepActive={isPaymentStepActive}\r\n                            onUnhandledError={this.handleUnhandledError}\r\n                            onWalletButtonClick={this.handleWalletButtonClick}\r\n                        />\r\n                    )}\r\n\r\n                    <ol className=\"checkout-steps\">\r\n                        <div className='optimizedCheckout-callToAction top-of-submit'>\r\n                            Please complete this submission form so the SmallSat Catalog sales team can help you find information and get quotes quickly ahead of your proposals and project deadlines.\r\n                        </div>\r\n                        {steps\r\n                            .filter((step) => step.isRequired)\r\n                            .map((step) =>\r\n                                this.renderStep({\r\n                                    ...step,\r\n                                    isActive: activeStepType\r\n                                        ? activeStepType === step.type\r\n                                        : defaultStepType === step.type,\r\n                                    isBusy: isPending,\r\n                                }),\r\n                            )}\r\n                    </ol>\r\n                </div>\r\n\r\n                {this.renderCartSummary()}\r\n            </LoadingOverlay>\r\n        );\r\n    }\r\n\r\n    private renderStep(step: CheckoutStepStatus): ReactNode {\r\n        switch (step.type) {\r\n            case CheckoutStepType.Customer:\r\n                return this.renderCustomerStep(step);\r\n\r\n            case CheckoutStepType.Shipping:\r\n                return this.renderShippingStep(step);\r\n\r\n            // case CheckoutStepType.Billing:\r\n            //     return this.renderBillingStep(step);\r\n\r\n            case CheckoutStepType.Payment:\r\n                return this.renderPaymentStep(step);\r\n\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    private renderCustomerStep(step: CheckoutStepStatus): ReactNode {\r\n        const { isGuestEnabled, isShowingWalletButtonsOnTop } = this.props;\r\n        const {\r\n            customerViewType = isGuestEnabled ? CustomerViewType.Guest : CustomerViewType.Login,\r\n            isSubscribed,\r\n        } = this.state;\r\n\r\n        return (\r\n            <CheckoutStep\r\n                {...step}\r\n                heading={<TranslatedString id=\"customer.customer_heading\" />}\r\n                key={step.type}\r\n                onEdit={this.handleEditStep}\r\n                onExpanded={this.handleExpanded}\r\n                suggestion={<CheckoutSuggestion />}\r\n                summary={\r\n                    <CustomerInfo\r\n                        onSignOut={this.handleSignOut}\r\n                        onSignOutError={this.handleError}\r\n                    />\r\n                }\r\n            >\r\n                <Customer\r\n                    checkEmbeddedSupport={this.checkEmbeddedSupport}\r\n                    isEmbedded={isEmbedded()}\r\n                    isSubscribed={isSubscribed}\r\n                    isWalletButtonsOnTop = {isShowingWalletButtonsOnTop }\r\n                    onAccountCreated={this.navigateToNextIncompleteStep}\r\n                    onChangeViewType={this.setCustomerViewType}\r\n                    onContinueAsGuest={this.navigateToNextIncompleteStep}\r\n                    onContinueAsGuestError={this.handleError}\r\n                    onReady={this.handleReady}\r\n                    onSignIn={this.navigateToNextIncompleteStep}\r\n                    onSignInError={this.handleError}\r\n                    onSubscribeToNewsletter={this.handleNewsletterSubscription}\r\n                    onUnhandledError={this.handleUnhandledError}\r\n                    onWalletButtonClick={this.handleWalletButtonClick}\r\n                    step={step}\r\n                    viewType={customerViewType}\r\n                />\r\n            </CheckoutStep>\r\n        );\r\n    }\r\n\r\n    private renderShippingStep(step: CheckoutStepStatus): ReactNode {\r\n        const { hasCartChanged, cart, consignments = [], isNewMultiShippingUIEnabled } = this.props;\r\n\r\n        const { isBillingSameAsShipping, isMultiShippingMode } = this.state;\r\n\r\n        if (!cart) {\r\n            return;\r\n        }\r\n\r\n        return (\r\n            <CheckoutStep\r\n                {...step}\r\n                heading={<TranslatedString id=\"shipping.shipping_heading\" />}\r\n                key={step.type}\r\n                onEdit={this.handleEditStep}\r\n                onExpanded={this.handleExpanded}\r\n                summary={<ShippingSummary cart={cart} consignments={consignments} isMultiShippingMode={isMultiShippingMode} isNewMultiShippingUIEnabled={isNewMultiShippingUIEnabled} />}\r\n            >\r\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\r\n                    <Shipping\r\n                        cartHasChanged={hasCartChanged}\r\n                        isBillingSameAsShipping={isBillingSameAsShipping}\r\n                        isMultiShippingMode={isMultiShippingMode}\r\n                        navigateNextStep={this.handleShippingNextStep}\r\n                        onCreateAccount={this.handleShippingCreateAccount}\r\n                        onReady={this.handleReady}\r\n                        onSignIn={this.handleShippingSignIn}\r\n                        onToggleMultiShipping={this.handleToggleMultiShipping}\r\n                        onUnhandledError={this.handleUnhandledError}\r\n                        step={step}\r\n                    />\r\n                </LazyContainer>\r\n            </CheckoutStep>\r\n        );\r\n    }\r\n\r\n    // private renderBillingStep(step: CheckoutStepStatus): ReactNode {\r\n    //     const { billingAddress } = this.props;\r\n\r\n    //     return (\r\n    //         <CheckoutStep\r\n    //             {...step}\r\n    //             heading={<TranslatedString id=\"billing.billing_heading\" />}\r\n    //             key={step.type}\r\n    //             onEdit={this.handleEditStep}\r\n    //             onExpanded={this.handleExpanded}\r\n    //             summary={billingAddress && <StaticBillingAddress address={billingAddress} />}\r\n    //         >\r\n    //             <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\r\n    //                 <Billing\r\n    //                     navigateNextStep={this.navigateToNextIncompleteStep}\r\n    //                     onReady={this.handleReady}\r\n    //                     onUnhandledError={this.handleUnhandledError}\r\n    //                 />\r\n    //             </LazyContainer>\r\n    //         </CheckoutStep>\r\n    //     );\r\n    // }\r\n\r\n    private renderPaymentStep(step: CheckoutStepStatus): ReactNode {\r\n        const { consignments, cart, errorLogger } = this.props;\r\n\r\n        return (\r\n            <CheckoutStep\r\n                {...step}\r\n                heading={<TranslatedString id=\"payment.payment_heading\" />}\r\n                key={step.type}\r\n                onEdit={this.handleEditStep}\r\n                onExpanded={this.handleExpanded}\r\n            >\r\n                <LazyContainer loadingSkeleton={<ChecklistSkeleton />}>\r\n                    <Payment\r\n                        checkEmbeddedSupport={this.checkEmbeddedSupport}\r\n                        errorLogger={errorLogger}\r\n                        isEmbedded={isEmbedded()}\r\n                        isUsingMultiShipping={\r\n                            cart && consignments\r\n                                ? isUsingMultiShipping(consignments, cart.lineItems)\r\n                                : false\r\n                        }\r\n                        onCartChangedError={this.handleCartChangedError}\r\n                        onFinalize={this.navigateToOrderConfirmation}\r\n                        onReady={this.handleReady}\r\n                        onSubmit={this.navigateToOrderConfirmation}\r\n                        onSubmitError={this.handleError}\r\n                        onUnhandledError={this.handleUnhandledError}\r\n                    />\r\n                </LazyContainer>\r\n            </CheckoutStep>\r\n        );\r\n    }\r\n\r\n    private renderCartSummary(): ReactNode {\r\n        const { isMultiShippingMode } = this.state;\r\n\r\n        return (\r\n            <MobileView>\r\n                {(matched) => {\r\n                    if (matched) {\r\n                        return (\r\n                            <LazyContainer>\r\n                                <Extension region={ExtensionRegion.SummaryAfter} />\r\n                                <CartSummaryDrawer isMultiShippingMode={isMultiShippingMode} />\r\n                            </LazyContainer>\r\n                        );\r\n                    }\r\n\r\n                    return (\r\n                        <aside className=\"layout-cart\">\r\n                            <LazyContainer>\r\n                                <CartSummary isMultiShippingMode={isMultiShippingMode} />\r\n                                <Extension region={ExtensionRegion.SummaryAfter} />\r\n                            </LazyContainer>\r\n                        </aside>\r\n                    );\r\n                }}\r\n            </MobileView>\r\n        );\r\n    }\r\n\r\n    private navigateToStep(type: CheckoutStepType, options?: { isDefault?: boolean }): void {\r\n        const { clearError, error, steps } = this.props;\r\n        const { activeStepType } = this.state;\r\n        const step = find(steps, { type });\r\n\r\n        if (!step) {\r\n            return;\r\n        }\r\n\r\n        if (activeStepType === step.type) {\r\n            return;\r\n        }\r\n\r\n        if (options && options.isDefault) {\r\n            this.setState({ defaultStepType: step.type });\r\n        } else {\r\n            this.setState({ activeStepType: step.type });\r\n        }\r\n\r\n        if (error) {\r\n            clearError(error);\r\n        }\r\n    }\r\n\r\n    private handleToggleMultiShipping: () => void = () => {\r\n        const { isMultiShippingMode } = this.state;\r\n\r\n        this.setState({ isMultiShippingMode: !isMultiShippingMode });\r\n    };\r\n\r\n    private navigateToNextIncompleteStep: (options?: { isDefault?: boolean }) => void = (\r\n        options,\r\n    ) => {\r\n        const { steps, analyticsTracker } = this.props;\r\n        const activeStepIndex = findIndex(steps, { isActive: true });\r\n        const activeStep = activeStepIndex >= 0 && steps[activeStepIndex];\r\n\r\n        if (!activeStep) {\r\n            return;\r\n        }\r\n\r\n        const previousStep = steps[Math.max(activeStepIndex - 1, 0)];\r\n\r\n        if (previousStep) {\r\n            analyticsTracker.trackStepCompleted(previousStep.type);\r\n        }\r\n\r\n        this.navigateToStep(activeStep.type, options);\r\n    };\r\n\r\n    private navigateToOrderConfirmation: (orderId?: number) => void = (orderId) => {\r\n        const { steps, analyticsTracker } = this.props;\r\n\r\n        analyticsTracker.trackStepCompleted(steps[steps.length - 1].type);\r\n\r\n        if (this.embeddedMessenger) {\r\n            this.embeddedMessenger.postComplete();\r\n        }\r\n\r\n        SubscribeSessionStorage.removeSubscribeStatus();\r\n\r\n        this.setState({ isRedirecting: true }, () => {\r\n            navigateToOrderConfirmation(orderId);\r\n        });\r\n    };\r\n\r\n    private checkEmbeddedSupport: (methodIds: string[]) => boolean = (methodIds) => {\r\n        const { embeddedSupport } = this.props;\r\n\r\n        return embeddedSupport.isSupported(...methodIds);\r\n    };\r\n\r\n    private handleCartChangedError: (error: CartChangedError) => void = () => {\r\n        this.navigateToStep(CheckoutStepType.Shipping);\r\n    };\r\n\r\n    private handleConsignmentsUpdated: (state: CheckoutSelectors) => void = ({ data }) => {\r\n        const { hasSelectedShippingOptions: prevHasSelectedShippingOptions, activeStepType, defaultStepType } =\r\n            this.state;\r\n\r\n        const { steps } = this.props;\r\n\r\n        const newHasSelectedShippingOptions = hasSelectedShippingOptions(\r\n            data.getConsignments() || [],\r\n        );\r\n\r\n        const isDefaultStepPaymentOrBilling =\r\n            !activeStepType &&\r\n            (defaultStepType === CheckoutStepType.Payment ||\r\n                defaultStepType === CheckoutStepType.Billing);\r\n\r\n        const isShippingStepFinished =\r\n            findIndex(steps, { type: CheckoutStepType.Shipping }) <\r\n                findIndex(steps, { type: activeStepType }) || isDefaultStepPaymentOrBilling;\r\n\r\n        if (\r\n            prevHasSelectedShippingOptions &&\r\n            !newHasSelectedShippingOptions &&\r\n            isShippingStepFinished\r\n        ) {\r\n            this.navigateToStep(CheckoutStepType.Shipping);\r\n            this.setState({ error: new ShippingOptionExpiredError() });\r\n        }\r\n\r\n        this.setState({ hasSelectedShippingOptions: newHasSelectedShippingOptions });\r\n    };\r\n\r\n    private handleCloseErrorModal: () => void = () => {\r\n        this.setState({ error: undefined });\r\n    };\r\n\r\n    private handleExpanded: (type: CheckoutStepType) => void = (type) => {\r\n        const { analyticsTracker } = this.props;\r\n\r\n        analyticsTracker.trackStepViewed(type);\r\n    };\r\n\r\n    private handleUnhandledError: (error: Error) => void = (error) => {\r\n        this.handleError(error);\r\n\r\n        // For errors that are not caught and handled by child components, we\r\n        // handle them here by displaying a generic error modal to the shopper.\r\n        this.setState({ error });\r\n    };\r\n\r\n    private handleError: (error: Error) => void = (error) => {\r\n        const { errorLogger } = this.props;\r\n\r\n        errorLogger.log(error);\r\n\r\n        if (this.embeddedMessenger) {\r\n            this.embeddedMessenger.postError(error);\r\n        }\r\n    };\r\n\r\n    private handleEditStep: (type: CheckoutStepType) => void = (type) => {\r\n        this.navigateToStep(type);\r\n    };\r\n\r\n    private handleReady: () => void = () => {\r\n        this.navigateToNextIncompleteStep({ isDefault: true });\r\n    };\r\n\r\n    private handleNewsletterSubscription: (subscribed: boolean) => void = (subscribed) => {\r\n        this.setState({ isSubscribed: subscribed });\r\n    }\r\n\r\n    private handleSignOut: (event: CustomerSignOutEvent) => void = ({ isCartEmpty }) => {\r\n        const { loginUrl, cartUrl, isPriceHiddenFromGuests, isGuestEnabled } = this.props;\r\n\r\n        if (isPriceHiddenFromGuests) {\r\n            if (window.top) {\r\n                return (window.top.location.href = cartUrl);\r\n            }\r\n        }\r\n\r\n        if (this.embeddedMessenger) {\r\n            this.embeddedMessenger.postSignedOut();\r\n        }\r\n\r\n        if (isGuestEnabled) {\r\n            this.setCustomerViewType(CustomerViewType.Guest);\r\n        }\r\n\r\n        if (isCartEmpty) {\r\n            this.setState({ isCartEmpty: true });\r\n\r\n            if (!isEmbedded()) {\r\n                if (window.top) {\r\n                    return window.top.location.assign(loginUrl);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.navigateToStep(CheckoutStepType.Customer);\r\n    };\r\n\r\n    private handleShippingNextStep: (isBillingSameAsShipping: boolean) => void = (\r\n        isBillingSameAsShipping,\r\n    ) => {\r\n        this.setState({ isBillingSameAsShipping });\r\n\r\n        if (isBillingSameAsShipping) {\r\n            this.navigateToNextIncompleteStep();\r\n        } else {\r\n            this.navigateToStep(CheckoutStepType.Billing);\r\n        }\r\n    };\r\n\r\n    private handleShippingSignIn: () => void = () => {\r\n        this.setCustomerViewType(CustomerViewType.Login);\r\n    };\r\n\r\n    private handleShippingCreateAccount: () => void = () => {\r\n        this.setCustomerViewType(CustomerViewType.CreateAccount);\r\n    };\r\n\r\n    private setCustomerViewType: (viewType: CustomerViewType) => void = (customerViewType) => {\r\n        const { createAccountUrl } = this.props;\r\n\r\n        if (customerViewType === CustomerViewType.CreateAccount && isEmbedded()) {\r\n            if (window.top) {\r\n                window.top.location.replace(createAccountUrl);\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.navigateToStep(CheckoutStepType.Customer);\r\n        this.setState({ customerViewType });\r\n    };\r\n\r\n    private handleBeforeExit: () => void = () => {\r\n        const { analyticsTracker } = this.props;\r\n\r\n        analyticsTracker.exitCheckout();\r\n    }\r\n\r\n    private handleWalletButtonClick: (methodName: string) => void = (methodName) => {\r\n        const { analyticsTracker } = this.props;\r\n\r\n        analyticsTracker.walletButtonClick(methodName);\r\n    }\r\n}\r\n\r\nexport default withExtension(\r\n    withAnalytics(withLanguage(withCheckout(mapToCheckoutProps)(Checkout))),\r\n);\r\n","import { CheckoutSelectors, CustomError } from '@bigcommerce/checkout-sdk';\r\nimport { createSelector } from 'reselect';\r\n\r\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nimport { EMPTY_ARRAY, isExperimentEnabled } from '../common/utility';\r\n\r\nimport { WithCheckoutProps } from './Checkout';\r\nimport getCheckoutStepStatuses from './getCheckoutStepStatuses';\r\n\r\nexport default function mapToCheckoutProps({\r\n    checkoutService,\r\n    checkoutState,\r\n}: CheckoutContextProps): WithCheckoutProps {\r\n    const { data, errors, statuses } = checkoutState;\r\n    const { promotions = EMPTY_ARRAY } = data.getCheckout() || {};\r\n    const submitOrderError = errors.getSubmitOrderError() as CustomError;\r\n    const {\r\n        checkoutSettings: {\r\n            guestCheckoutEnabled: isGuestEnabled = false,\r\n            checkoutUserExperienceSettings = {\r\n                walletButtonsOnTop: false,\r\n                floatingLabelEnabled: false,\r\n            },\r\n        } = {},\r\n        links: {\r\n            loginLink: loginUrl = '',\r\n            createAccountLink: createAccountUrl = '',\r\n            cartLink: cartUrl = '',\r\n        } = {},\r\n        displaySettings: { hidePriceFromGuests: isPriceHiddenFromGuests = false } = {},\r\n    } = data.getConfig() || {};\r\n\r\n    const subscribeToConsignmentsSelector = createSelector(\r\n        ({ checkoutService: { subscribe } }: CheckoutContextProps) => subscribe,\r\n        (subscribe) => (subscriber: (state: CheckoutSelectors) => void) => {\r\n            return subscribe(subscriber, ({ data: { getConsignments } }) => getConsignments());\r\n        },\r\n    );\r\n\r\n    const walletButtonsOnTopFlag = Boolean(checkoutUserExperienceSettings.walletButtonsOnTop);\r\n    const isNewMultiShippingUIEnabled =\r\n    isExperimentEnabled(\r\n        data.getConfig()?.checkoutSettings,\r\n        'PROJECT-4159.improve_multi_address_shipping_ui',\r\n    ) \r\n\r\n    return {\r\n        billingAddress: data.getBillingAddress(),\r\n        cart: data.getCart(),\r\n        clearError: checkoutService.clearError,\r\n        consignments: data.getConsignments(),\r\n        hasCartChanged: submitOrderError && submitOrderError.type === 'cart_changed', // TODO: Need to clear the error once it's displayed\r\n        isGuestEnabled,\r\n        isLoadingCheckout: statuses.isLoadingCheckout(),\r\n        isNewMultiShippingUIEnabled,\r\n        isPending: statuses.isPending(),\r\n        isPriceHiddenFromGuests,\r\n        isShowingWalletButtonsOnTop: walletButtonsOnTopFlag,\r\n        loadCheckout: checkoutService.loadCheckout,\r\n        loadPaymentMethodByIds: checkoutService.loadPaymentMethodByIds,\r\n        loginUrl,\r\n        cartUrl,\r\n        createAccountUrl,\r\n        promotions,\r\n        subscribeToConsignments: subscribeToConsignmentsSelector({\r\n            checkoutService,\r\n            checkoutState,\r\n        }),\r\n        steps: data.getCheckout() ? getCheckoutStepStatuses(checkoutState) : EMPTY_ARRAY,\r\n    };\r\n}\r\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\r\nimport { BrowserOptions } from '@sentry/browser';\r\nimport React, { Component } from 'react';\r\nimport ReactModal from 'react-modal';\r\n\r\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\r\nimport { ExtensionProvider } from '@bigcommerce/checkout/checkout-extension';\r\nimport { ErrorBoundary, ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\r\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\r\nimport { CheckoutProvider } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nimport '../../scss/App.scss';\r\n\r\nimport { createErrorLogger } from '../common/error';\r\nimport {\r\n    createEmbeddedCheckoutStylesheet,\r\n    createEmbeddedCheckoutSupport,\r\n} from '../embeddedCheckout';\r\n\r\nimport Checkout from './Checkout';\r\n\r\nexport interface CheckoutAppProps {\r\n    checkoutId: string;\r\n    containerId: string;\r\n    publicPath?: string;\r\n    sentryConfig?: BrowserOptions;\r\n    sentrySampleRate?: number;\r\n}\r\n\r\nexport default class CheckoutApp extends Component<CheckoutAppProps> {\r\n    private checkoutService = createCheckoutService({\r\n        locale: getLanguageService().getLocale(),\r\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\r\n    });\r\n    private embeddedStylesheet = createEmbeddedCheckoutStylesheet();\r\n    private embeddedSupport = createEmbeddedCheckoutSupport(getLanguageService());\r\n    private errorLogger: ErrorLogger;\r\n\r\n    constructor(props: Readonly<CheckoutAppProps>) {\r\n        super(props);\r\n        this.errorLogger = createErrorLogger(\r\n            { sentry: props.sentryConfig },\r\n            {\r\n                errorTypes: ['UnrecoverableError'],\r\n                publicPath: props.publicPath,\r\n                sampleRate: props.sentrySampleRate ? props.sentrySampleRate : 0.1,\r\n            },\r\n        );\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const { containerId } = this.props;\r\n\r\n        ReactModal.setAppElement(`#${containerId}`);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ErrorBoundary logger={this.errorLogger}>\r\n                <LocaleProvider checkoutService={this.checkoutService}>\r\n                    <CheckoutProvider checkoutService={this.checkoutService}>\r\n                        <AnalyticsProvider checkoutService={this.checkoutService}>\r\n                            <ExtensionProvider\r\n                                checkoutService={this.checkoutService}\r\n                                errorLogger={createErrorLogger()}\r\n                            >\r\n                                <Checkout\r\n                                    {...this.props}\r\n                                    createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\r\n                                    embeddedStylesheet={this.embeddedStylesheet}\r\n                                    embeddedSupport={this.embeddedSupport}\r\n                                    errorLogger={this.errorLogger}\r\n                                />\r\n                            </ExtensionProvider>\r\n                        </AnalyticsProvider>\r\n                    </CheckoutProvider>\r\n                </LocaleProvider>\r\n            </ErrorBoundary>\r\n        );\r\n    }\r\n}\r\n","import React, { ComponentType, Context, FunctionComponent, memo, useContext, useMemo } from 'react';\r\nimport { Omit } from 'utility-types';\r\n\r\nimport { MatchedProps } from './InjectHoc';\r\nimport MappableInjectHoc, { MapToProps, MapToPropsFactory } from './MappableInjectHoc';\r\n\r\nfunction isMapToPropsFactory<TContextProps, TMappedProps, TOwnProps>(\r\n    mapToProps:\r\n        | MapToProps<TContextProps, TMappedProps, TOwnProps>\r\n        | MapToPropsFactory<TContextProps, TMappedProps, TOwnProps>,\r\n): mapToProps is MapToPropsFactory<TContextProps, TMappedProps, TOwnProps> {\r\n    return mapToProps.length === 0;\r\n}\r\n\r\nexport default function createMappableInjectHoc<TContextProps>(\r\n    ContextComponent: Context<TContextProps>,\r\n    options?: { displayNamePrefix?: string },\r\n): MappableInjectHoc<NonNullable<TContextProps>> {\r\n    return <TMappedProps, TOwnProps>(\r\n        mapToPropsOrFactory:\r\n            | MapToProps<NonNullable<TContextProps>, TMappedProps, TOwnProps>\r\n            | MapToPropsFactory<NonNullable<TContextProps>, TMappedProps, TOwnProps>,\r\n    ) => {\r\n        return <TProps extends MatchedProps<TMappedProps, TProps>>(\r\n            OriginalComponent: ComponentType<TProps>,\r\n        ) => {\r\n            const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\r\n                <OriginalComponent {...props} />\r\n            ));\r\n\r\n            const DecoratedComponent: FunctionComponent<Omit<TProps, keyof TMappedProps>> = (\r\n                props,\r\n            ) => {\r\n                const context = useContext(ContextComponent);\r\n\r\n                const mapToProps = useMemo(\r\n                    () =>\r\n                        isMapToPropsFactory(mapToPropsOrFactory)\r\n                            ? mapToPropsOrFactory()\r\n                            : mapToPropsOrFactory,\r\n                    [],\r\n                );\r\n\r\n                const mappedProps = context\r\n                    ? mapToProps(context, props as unknown as TOwnProps)\r\n                    : context;\r\n\r\n                if (!mappedProps) {\r\n                    return null;\r\n                }\r\n\r\n                const mergedProps = { ...mappedProps, ...props } as unknown as TProps;\r\n\r\n                return <InnerDecoratedComponent {...mergedProps} />;\r\n            };\r\n\r\n            if (options && options.displayNamePrefix && OriginalComponent) {\r\n                DecoratedComponent.displayName = `${options.displayNamePrefix}(${\r\n                    OriginalComponent.displayName || OriginalComponent.name\r\n                })`;\r\n            }\r\n\r\n            return DecoratedComponent;\r\n        };\r\n    };\r\n}\r\n","import { createMappableInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\r\nimport { CheckoutContext, CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nexport type WithCheckoutProps = CheckoutContextProps;\r\n\r\nconst withCheckout = createMappableInjectHoc(CheckoutContext, {\r\n    displayNamePrefix: 'WithCheckout',\r\n});\r\n\r\nexport default withCheckout;\r\n","export default class CustomError extends Error {\r\n    static shouldReport: boolean;\r\n\r\n    data: any;\r\n    title: string;\r\n    type: string;\r\n\r\n    constructor({\r\n        data = {},\r\n        message = '',\r\n        title = '',\r\n        name = '',\r\n    }: {\r\n        data?: any;\r\n        message?: string;\r\n        title?: string;\r\n        name?: string;\r\n    }) {\r\n        super();\r\n\r\n        if (typeof Error.captureStackTrace === 'function') {\r\n            Error.captureStackTrace(this, CustomError);\r\n        } else {\r\n            this.stack = new Error().stack;\r\n        }\r\n\r\n         \r\n        this.data = data;\r\n        this.message = message;\r\n        this.name = name;\r\n        this.title = title;\r\n        this.type = 'custom';\r\n    }\r\n\r\n    // todo: remove these methods when all error types has specific subclasses.\r\n    // they are only provided for compatibility with errors defined in `app.errors.ts` while we transition\r\n    // to proper error subclasses.\r\n    protected setDefaultValues({\r\n        name,\r\n        defaultError,\r\n        defaultTitle,\r\n    }: {\r\n        name: string;\r\n        defaultError: string;\r\n        defaultTitle: string;\r\n    }): void {\r\n        this.name = this.name || name;\r\n        this.message = this.message || defaultError;\r\n        this.title = this.title || defaultTitle;\r\n    }\r\n}\r\n","import React, { FunctionComponent, memo, ReactNode } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport './ErrorCode.scss';\r\n\r\nexport interface ErrorCodeProps {\r\n    code: string;\r\n    label?: ReactNode;\r\n}\r\n\r\nconst ErrorCode: FunctionComponent<ErrorCodeProps> = ({ code, label }) => {\r\n    return (\r\n        <div className=\"errorCode\">\r\n            <span className=\"errorCode-label\">\r\n                {label ?? <TranslatedString id=\"common.error_code\" />}\r\n            </span>{' '}\r\n            <span className=\"errorCode-value\">{code}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(ErrorCode);\r\n","import { RequestError } from '@bigcommerce/checkout-sdk';\r\nimport { noop } from 'lodash';\r\nimport React, { PureComponent, ReactNode, SyntheticEvent } from 'react';\r\n\r\nimport { TranslatedHtml, TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { Button, ButtonSize } from '../../ui/button';\r\nimport { IconError, IconSize } from '../../ui/icon';\r\nimport { Modal, ModalHeader } from '../../ui/modal';\r\n\r\nimport computeErrorCode from './computeErrorCode';\r\nimport ErrorCode from './ErrorCode';\r\nimport isCustomError from './isCustomError';\r\nimport isHtmlError from './isHtmlError';\r\nimport isRequestError from './isRequestError';\r\n\r\nimport { CustomError } from './index';\r\n\r\nexport interface ErrorModalProps {\r\n    error?: Error | RequestError | CustomError;\r\n    message?: ReactNode;\r\n    title?: ReactNode;\r\n    shouldShowErrorCode?: boolean;\r\n    onClose?(event: Event, props: ErrorModalOnCloseProps): void;\r\n}\r\n\r\nexport interface ErrorModalOnCloseProps {\r\n    error: Error;\r\n}\r\n\r\nexport default class ErrorModal extends PureComponent<ErrorModalProps> {\r\n    private aria = {\r\n        labelledby: 'errorModalMessage',\r\n    };\r\n\r\n    render(): ReactNode {\r\n        const { error } = this.props;\r\n\r\n        return (\r\n            <Modal\r\n                additionalModalClassName=\"modal--error\"\r\n                aria={this.aria}\r\n                footer={this.renderFooter()}\r\n                header={this.renderHeader()}\r\n                isOpen={!!error}\r\n                onRequestClose={this.handleOnRequestClose}\r\n            >\r\n                {this.renderBody()}\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    private renderHeader(): ReactNode {\r\n        const { error, title = error && isCustomError(error) && error.title } = this.props;\r\n\r\n        return (\r\n            <ModalHeader>\r\n                <IconError\r\n                    additionalClassName=\"icon--error modal-header-icon\"\r\n                    size={IconSize.Small}\r\n                />\r\n                <span aria-live=\"assertive\" role=\"alert\">\r\n                    {title || <TranslatedString id=\"common.error_heading\" />}\r\n                </span>\r\n            </ModalHeader>\r\n        );\r\n    }\r\n\r\n    private renderBody(): ReactNode {\r\n        const { error, message = error && error.message } = this.props;\r\n\r\n        return (\r\n            <>\r\n                {error && isHtmlError(error) &&\r\n                    <TranslatedHtml id={error.data.translationKey} />\r\n                }\r\n                {message && (\r\n                    <p aria-live=\"assertive\" id=\"errorModalMessage\" role=\"alert\">\r\n                        {message}\r\n                    </p>\r\n                )}\r\n\r\n                <div className=\"optimizedCheckout-contentSecondary\">{this.renderErrorCode()}</div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    private renderFooter(): ReactNode {\r\n        return (\r\n            <Button onClick={this.handleOnRequestClose} size={ButtonSize.Small}>\r\n                <TranslatedString id=\"common.ok_action\" />\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    private renderErrorCode(): ReactNode {\r\n        const { error, shouldShowErrorCode = true } = this.props;\r\n\r\n        if (!error || !shouldShowErrorCode) {\r\n            return;\r\n        }\r\n\r\n        if (isRequestError(error) && error.headers?.['x-request-id']) {\r\n            return (\r\n                <ErrorCode\r\n                    code={error.headers['x-request-id']}\r\n                    label={<TranslatedString id=\"common.request_id\" />}\r\n                />\r\n            );\r\n        }\r\n\r\n        const errorCode = computeErrorCode(error);\r\n\r\n        if (!errorCode) {\r\n            return;\r\n        }\r\n\r\n        return <ErrorCode code={errorCode} />;\r\n    }\r\n\r\n    private handleOnRequestClose: (event: SyntheticEvent) => void = (event) => {\r\n        const { error, onClose = noop } = this.props;\r\n\r\n        if (error) {\r\n            onClose(event.nativeEvent, { error });\r\n        }\r\n    };\r\n}\r\n","import { CustomError } from \"@bigcommerce/checkout/payment-integration-api\";\r\n\r\nexport default function isHtmlError(error: Error): error is CustomError {\r\n\r\n    return 'type' in error &&\r\n        error.type === 'custom' &&\r\n        'data' in error &&\r\n        typeof error.data === 'object' &&\r\n        error.data !== null &&\r\n        'shouldBeTranslatedAsHtml' in error.data &&\r\n        typeof error.data.shouldBeTranslatedAsHtml === 'boolean';\r\n}\r\n","import HashStatic from 'object-hash';\r\n\r\nexport default function computeErrorCode(value: any): string | undefined {\r\n    try {\r\n        return HashStatic(value).toUpperCase();\r\n    } catch (error) {}\r\n}\r\n","import CustomError from './CustomError';\r\n\r\n// todo: remove this method in favour of creating proper subclasses for each error type.\r\n// it's only provided for compatibility with errors defined in `app.errors.ts` while we transition\r\n// to proper error subclasses.\r\nexport default function createCustomErrorType({\r\n    name,\r\n    defaultError = '',\r\n    defaultTitle = '',\r\n    shouldReport = false,\r\n}: {\r\n    name: string;\r\n    defaultError?: string;\r\n    defaultTitle?: string;\r\n    shouldReport?: boolean;\r\n}) {\r\n    class CustomErrorType extends CustomError {\r\n        constructor(data = {}, errorMessage = '', errorTitle = '') {\r\n            super({\r\n                data,\r\n                message: errorMessage,\r\n                title: errorTitle,\r\n            });\r\n\r\n            // todo: this should use new.taget.prototype in the parent class once we can make it work\r\n            setPrototypeOf(this, CustomErrorType.prototype);\r\n\r\n            this.setDefaultValues({\r\n                name,\r\n                defaultError,\r\n                defaultTitle,\r\n            });\r\n        }\r\n    }\r\n\r\n    CustomErrorType.shouldReport = shouldReport;\r\n\r\n    return CustomErrorType;\r\n}\r\n\r\nexport function setPrototypeOf(object: any, prototype: any) {\r\n    if (Object.setPrototypeOf) {\r\n        Object.setPrototypeOf(object, prototype);\r\n    } else {\r\n        object.__proto__ = prototype;\r\n    }\r\n\r\n    return object;\r\n}\r\n","import {\r\n  ErrorLevelType,\r\n  ErrorLogger,\r\n  ErrorMeta,\r\n  ErrorTags,\r\n} from '@bigcommerce/checkout/error-handling-utils';\r\n\r\nexport interface ConsoleErrorLoggerOptions {\r\n    console?: Console;\r\n    errorTypes?: string[];\r\n}\r\n\r\n// tslint:disable:no-console\r\nexport default class ConsoleErrorLogger implements ErrorLogger {\r\n    private console: Console;\r\n\r\n    constructor(options?: ConsoleErrorLoggerOptions) {\r\n        const { console: customConsole = console } = options || {};\r\n\r\n        this.console = customConsole;\r\n    }\r\n\r\n    log(\r\n        error: Error,\r\n        tags?: ErrorTags,\r\n        level: ErrorLevelType = ErrorLevelType.Error,\r\n        meta?: ErrorMeta,\r\n    ): void {\r\n        switch (level) {\r\n            case ErrorLevelType.Error:\r\n                return this.console.error(error, tags, meta);\r\n\r\n            case ErrorLevelType.Info:\r\n                return this.console.info(error, tags, meta);\r\n\r\n            case ErrorLevelType.Warning:\r\n                return this.console.warn(error, tags, meta);\r\n\r\n            default:\r\n                return this.console.log(error, tags, meta);\r\n        }\r\n    }\r\n}\r\n","import { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\r\n\r\nexport default class NoopErrorLogger implements ErrorLogger {\r\n    log() {}\r\n}\r\n","import {\r\n    BrowserOptions,\r\n    captureException,\r\n    Event,\r\n    init,\r\n    Integrations,\r\n    SeverityLevel,\r\n    StackFrame,\r\n    withScope,\r\n} from '@sentry/browser';\r\nimport { RewriteFrames } from '@sentry/integrations';\r\nimport { EventHint, Exception } from '@sentry/types';\r\n\r\nimport {\r\n    ErrorLevelType,\r\n    ErrorLogger,\r\n    ErrorMeta,\r\n    ErrorTags,\r\n} from '@bigcommerce/checkout/error-handling-utils';\r\n\r\nimport computeErrorCode from './computeErrorCode';\r\nimport ConsoleErrorLogger from './ConsoleErrorLogger';\r\nimport NoopErrorLogger from './NoopErrorLogger';\r\n\r\nconst FILENAME_PREFIX = 'app://';\r\n\r\nexport interface SentryErrorLoggerOptions {\r\n    consoleLogger?: ConsoleErrorLogger;\r\n    errorTypes?: string[];\r\n    publicPath?: string;\r\n    sampleRate?: number;\r\n}\r\n\r\nexport enum SeverityLevelEnum {\r\n    DEBUG = 'debug',\r\n    ERROR = 'error',\r\n    INFO = 'info',\r\n    WARNING = 'warning',\r\n}\r\n\r\nexport default class SentryErrorLogger implements ErrorLogger {\r\n    private consoleLogger: ErrorLogger;\r\n    private publicPath: string;\r\n\r\n    constructor(config: BrowserOptions, options?: SentryErrorLoggerOptions) {\r\n        const {\r\n            consoleLogger = new NoopErrorLogger(),\r\n            publicPath = '',\r\n            sampleRate = 0.1,\r\n        } = options || {};\r\n\r\n        this.consoleLogger = consoleLogger;\r\n        this.publicPath = publicPath;\r\n\r\n        init({\r\n            sampleRate,\r\n            beforeSend: this.handleBeforeSend,\r\n            denyUrls: [\r\n                ...(config.denyUrls || []),\r\n                'polyfill~checkout',\r\n                'sentry~checkout',\r\n            ],\r\n            integrations: [\r\n                new Integrations.GlobalHandlers({\r\n                    onerror: false,\r\n                    onunhandledrejection: true,\r\n                }),\r\n                new RewriteFrames({\r\n                    iteratee: this.handleRewriteFrame,\r\n                }),\r\n            ],\r\n            ...config,\r\n        });\r\n    }\r\n\r\n    log(\r\n        error: Error,\r\n        tags?: ErrorTags,\r\n        level: ErrorLevelType = ErrorLevelType.Error,\r\n        payload?: ErrorMeta,\r\n    ): void {\r\n        this.consoleLogger.log(error, tags, level);\r\n\r\n        withScope((scope) => {\r\n            const { errorCode = computeErrorCode(error) } = tags || {};\r\n\r\n            if (errorCode) {\r\n                scope.setTags({ errorCode });\r\n            }\r\n\r\n            scope.setLevel(this.mapToSentryLevel(level));\r\n\r\n            if (payload) {\r\n                scope.setExtras(payload);\r\n            }\r\n\r\n            scope.setFingerprint(['{{ default }}']);\r\n\r\n            captureException(error);\r\n        });\r\n    }\r\n\r\n    private mapToSentryLevel(level: ErrorLevelType): SeverityLevel {\r\n        switch (level) {\r\n            case ErrorLevelType.Info:\r\n                return SeverityLevelEnum.INFO;\r\n\r\n            case ErrorLevelType.Warning:\r\n                return SeverityLevelEnum.WARNING;\r\n\r\n            case ErrorLevelType.Debug:\r\n                return SeverityLevelEnum.DEBUG;\r\n\r\n            case ErrorLevelType.Error:\r\n            default:\r\n                return SeverityLevelEnum.ERROR;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ignore exceptions that don't have a stacktrace at all, or have a stacktrace that references files external to\r\n     * this app. For example, if the exception is caused by a piece of third party code, one of the frames in the\r\n     * stacktrace will reference a file that is not a part of the app. This behaviour is different to the whitelist\r\n     * config provided by Sentry, as the latter only examines the topmost frame in the stacktrace. The config is not\r\n     * sufficient for us because some stores have customisation code built on top of our code, resulting in a stacktrace\r\n     * whose topmost frame is ours but frames below it are not.\r\n     */\r\n    private shouldReportExceptions(exceptions: Exception[], originalException: unknown): boolean {\r\n        // Ignore exceptions that are not an instance of Error because they are most likely not thrown by our own code,\r\n        // as we have a lint rule that prevents us from doing so. Although these exceptions don't actually have a\r\n        // stacktrace, meaning that the condition below should theoretically cover the scenario, but we still need this\r\n        // condition because Sentry client creates a \"synthentic\" stacktrace for them using the information it has.\r\n        if (!exceptions.length || !(originalException instanceof Error)) {\r\n            return false;\r\n        }\r\n\r\n        return exceptions.every((exception) => {\r\n            if (!exception.stacktrace?.frames?.length) {\r\n                return false;\r\n            }\r\n\r\n            return exception.stacktrace.frames.every((frame) =>\r\n                frame.filename?.startsWith(FILENAME_PREFIX),\r\n            );\r\n        });\r\n    }\r\n\r\n    private handleBeforeSend: (event: Event, hint?: EventHint) => Event | null = (event, hint) => {\r\n        if (event.exception) {\r\n            if (\r\n                !this.shouldReportExceptions(\r\n                    event.exception.values ?? [],\r\n                    hint?.originalException ?? null,\r\n                )\r\n            ) {\r\n                return null;\r\n            }\r\n\r\n            return event;\r\n        }\r\n\r\n        return event;\r\n    };\r\n\r\n    private handleRewriteFrame: (frame: StackFrame) => StackFrame = (frame) => {\r\n        if (this.publicPath && frame.filename) {\r\n            // We want to remove the base path of the filename, otherwise we\r\n            // will need to specify it when we upload the sourcemaps so that the\r\n            // filenames can match up.\r\n            const filename = frame.filename.replace(new RegExp(`^${this.publicPath}/?`), '');\r\n\r\n            // `frame` needs to be modified in-place (based on the example in\r\n            // their documentation).\r\n            if (filename !== frame.filename) {\r\n                frame.filename = `${FILENAME_PREFIX}/${filename}`;\r\n            }\r\n        }\r\n\r\n        return frame;\r\n    };\r\n}\r\n","import {\r\n  ErrorLogger,\r\n  ErrorLoggerOptions,\r\n  ErrorLoggerServiceConfig,\r\n} from '@bigcommerce/checkout/error-handling-utils';\r\n\r\nimport ConsoleErrorLogger from './ConsoleErrorLogger';\r\nimport NoopErrorLogger from './NoopErrorLogger';\r\nimport SentryErrorLogger from './SentryErrorLogger';\r\n\r\nexport default function createErrorLogger(\r\n    serviceConfig?: ErrorLoggerServiceConfig,\r\n    options?: ErrorLoggerOptions,\r\n): ErrorLogger {\r\n    if (serviceConfig && serviceConfig.sentry) {\r\n        return new SentryErrorLogger(serviceConfig.sentry, {\r\n            ...options,\r\n            consoleLogger: new ConsoleErrorLogger(options),\r\n        });\r\n    }\r\n\r\n    if (process.env.NODE_ENV === 'test') {\r\n        return new NoopErrorLogger();\r\n    }\r\n\r\n    return new ConsoleErrorLogger(options);\r\n}\r\n","import CustomError from './CustomError';\r\n\r\nexport default function isCustomError(error: Error): error is CustomError {\r\n    const customError = error as CustomError;\r\n\r\n    return (\r\n        typeof customError.title !== 'undefined' &&\r\n        typeof customError.data !== 'undefined' &&\r\n        typeof customError.type !== 'undefined'\r\n    );\r\n}\r\n","import { RequestError } from '@bigcommerce/checkout-sdk';\r\n\r\ninterface ErrorWithType extends RequestError {\r\n    type: string;\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction hasOwnProperty<X extends {}, Y extends PropertyKey>(\r\n    obj: X,\r\n    key: Y,\r\n): obj is X & Record<Y, unknown> {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\n\r\nexport default function isErrorWithType(error: unknown): error is ErrorWithType {\r\n    return (\r\n        typeof error === 'object' &&\r\n        error !== null &&\r\n        hasOwnProperty(error, 'type') &&\r\n        typeof error.type === 'string'\r\n    );\r\n}\r\n","import { RequestError } from '@bigcommerce/checkout-sdk';\r\n\r\nexport default function isRequestError(error: unknown): error is RequestError {\r\n    const requestError = error as RequestError;\r\n\r\n    return requestError.type === 'request';\r\n}\r\n","// NOTE: For now, need to coerce the type as mutable array / object. Otherwise,\r\n// we'll need to change the props of all components as readonly.\r\nexport const EMPTY_ARRAY = Object.freeze([]) as never[];\r\nexport const EMPTY_OBJECT = Object.freeze({}) as any;\r\n","export default function isBuyNowCart(): boolean {\r\n    const lastPathName = window.location.pathname.split('/').pop();\r\n\r\n    return !(lastPathName === 'checkout' || lastPathName === 'embedded-checkout');\r\n}\r\n","import { CheckoutSettings } from '@bigcommerce/checkout-sdk';\r\n\r\nexport default function isExperimentEnabled(\r\n    checkoutSettings: CheckoutSettings | undefined,\r\n    experimentName: string,\r\n): boolean {\r\n    return Boolean(checkoutSettings?.features[experimentName] ?? true);\r\n}\r\n","import { CheckoutSettings } from '@bigcommerce/checkout-sdk';\r\n\r\nexport default function isFloatingLabelEnabled(checkoutSettings: CheckoutSettings): boolean {\r\n    return Boolean(checkoutSettings.checkoutUserExperienceSettings.floatingLabelEnabled);\r\n}\r\n","const DEFAULT_OPTIONS = {\r\n    count: 5,\r\n    interval: 1000,\r\n};\r\n\r\nexport interface RetryOptions {\r\n    count?: number;\r\n    interval?: number;\r\n}\r\n\r\nexport default async function retry<T>(fn: () => Promise<T>, options?: RetryOptions): Promise<T> {\r\n    const { count, interval } = { ...DEFAULT_OPTIONS, ...options };\r\n\r\n    try {\r\n        return await fn();\r\n    } catch (error) {\r\n        if (count === 1) {\r\n            throw error;\r\n        }\r\n\r\n        await new Promise((resolve) => setTimeout(resolve, interval));\r\n\r\n        return retry(fn, { interval, count: count - 1 });\r\n    }\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { withCurrency, WithCurrencyProps } from '@bigcommerce/checkout/locale';\r\n\r\nexport interface ShopperCurrencyProps {\r\n    amount: number;\r\n}\r\n\r\nconst ShopperCurrency: FunctionComponent<ShopperCurrencyProps & WithCurrencyProps> = ({\r\n    amount,\r\n    currency,\r\n}) => <>{currency.toCustomerCurrency(amount)}</>;\r\n\r\nexport default withCurrency(ShopperCurrency);\r\n","import { CurrencyService } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\r\n\r\nimport LocaleContext from './LocaleContext';\r\n\r\nexport interface WithCurrencyProps {\r\n    currency: CurrencyService;\r\n}\r\n\r\nconst withCurrency: InjectHoc<WithCurrencyProps> = createInjectHoc(LocaleContext, {\r\n    displayNamePrefix: 'WithCurrency',\r\n    pickProps: (value, key) => key === 'currency' && !!value,\r\n});\r\n\r\nexport default withCurrency;\r\n","import { CustomerPasswordRequirements, ShopperConfig } from '@bigcommerce/checkout-sdk';\r\n\r\nexport interface PasswordRequirements {\r\n    minLength: number;\r\n    alpha: RegExp;\r\n    numeric: RegExp;\r\n    description?: string;\r\n}\r\n\r\nexport function getPasswordRequirementsFromConfig(config: ShopperConfig): PasswordRequirements {\r\n    const {\r\n        passwordRequirements: { minlength, error: description, alpha, numeric },\r\n    } = config;\r\n\r\n    return getPasswordRequirements({\r\n        minlength,\r\n        description,\r\n        alpha,\r\n        numeric,\r\n    });\r\n}\r\n\r\nexport default function getPasswordRequirements({\r\n    minlength,\r\n    description,\r\n    alpha,\r\n    numeric,\r\n}: CustomerPasswordRequirements): PasswordRequirements {\r\n    const allSlashes = new RegExp('/', 'g');\r\n\r\n    return {\r\n        minLength: minlength,\r\n        description,\r\n        alpha: new RegExp(alpha.replace(allSlashes, '')),\r\n        numeric: new RegExp(numeric.replace(allSlashes, '')),\r\n    };\r\n}\r\n","import { assign, kebabCase, map, pickBy } from 'lodash';\r\n\r\nexport default function toCSSRule(\r\n    selector: string,\r\n    ...styles: Array<{ [key: string]: any } | undefined>\r\n): string {\r\n    const mergedStyles = assign({}, ...styles);\r\n    const props = map(\r\n        pickBy(mergedStyles, (value) => typeof value === 'string'),\r\n        (value, key) => `${kebabCase(key)}: ${value};`,\r\n    ).join(' ');\r\n\r\n    return `${selector} {${props}}`;\r\n}\r\n","import { EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { toCSSRule } from '../common/dom';\r\n\r\nexport default class EmbeddedCheckoutStyleParser {\r\n    parse(styles: EmbeddedCheckoutStyles): string[] {\r\n        const rules: string[] = [];\r\n\r\n        if (styles.body) {\r\n            rules.push(toCSSRule('body', styles.body));\r\n            rules.push(toCSSRule('.optimizedCheckout-overlay', styles.body));\r\n        }\r\n\r\n        if (styles.text) {\r\n            rules.push(toCSSRule('.optimizedCheckout-contentPrimary', styles.text));\r\n        }\r\n\r\n        if (styles.secondaryText) {\r\n            rules.push(toCSSRule('.optimizedCheckout-contentSecondary', styles.secondaryText));\r\n        }\r\n\r\n        if (styles.heading) {\r\n            rules.push(toCSSRule('.optimizedCheckout-headingPrimary', styles.heading));\r\n        }\r\n\r\n        if (styles.secondaryHeading) {\r\n            rules.push(toCSSRule('.optimizedCheckout-headingSecondary', styles.secondaryHeading));\r\n        }\r\n\r\n        if (styles.link) {\r\n            rules.push(toCSSRule('a', styles.link));\r\n            rules.push(toCSSRule('a:focus', styles.link, styles.link.focus));\r\n            rules.push(toCSSRule('a:hover', styles.link, styles.link.hover));\r\n        }\r\n\r\n        if (styles.label) {\r\n            rules.push(toCSSRule('.optimizedCheckout-form-label', styles.label));\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-label',\r\n                    styles.label,\r\n                    styles.label.error,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .form-inlineMessage',\r\n                    styles.label,\r\n                    styles.label.error,\r\n                ),\r\n            );\r\n        }\r\n\r\n        if (styles.button) {\r\n            rules.push(toCSSRule('.optimizedCheckout-buttonPrimary', styles.button));\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonPrimary:active',\r\n                    styles.button,\r\n                    styles.button.active,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonPrimary:focus',\r\n                    styles.button,\r\n                    styles.button.focus,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonPrimary:hover',\r\n                    styles.button,\r\n                    styles.button.hover,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonPrimary[disabled]',\r\n                    styles.button,\r\n                    styles.button.disabled,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonPrimary[disabled]:active',\r\n                    styles.button,\r\n                    styles.button.disabled,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonPrimary[disabled]:focus',\r\n                    styles.button,\r\n                    styles.button.disabled,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonPrimary[disabled]:hover',\r\n                    styles.button,\r\n                    styles.button.disabled,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonPrimary[disabled].is-active',\r\n                    styles.button,\r\n                    styles.button.disabled,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonPrimary[disabled].is-loading',\r\n                    styles.button,\r\n                    styles.button.disabled,\r\n                ),\r\n            );\r\n        }\r\n\r\n        if (styles.secondaryButton) {\r\n            rules.push(toCSSRule('.optimizedCheckout-buttonSecondary', styles.secondaryButton));\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonSecondary:active',\r\n                    styles.secondaryButton,\r\n                    styles.secondaryButton.active,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonSecondary:focus',\r\n                    styles.secondaryButton,\r\n                    styles.secondaryButton.focus,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonSecondary:hover',\r\n                    styles.secondaryButton,\r\n                    styles.secondaryButton.hover,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonSecondary[disabled]',\r\n                    styles.secondaryButton,\r\n                    styles.secondaryButton.disabled,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonSecondary[disabled]:active',\r\n                    styles.secondaryButton,\r\n                    styles.secondaryButton.disabled,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonSecondary[disabled]:focus',\r\n                    styles.secondaryButton,\r\n                    styles.secondaryButton.disabled,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonSecondary[disabled]:hover',\r\n                    styles.secondaryButton,\r\n                    styles.secondaryButton.disabled,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonSecondary[disabled].is-active',\r\n                    styles.secondaryButton,\r\n                    styles.secondaryButton.disabled,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonSecondary[disabled].is-loading',\r\n                    styles.secondaryButton,\r\n                    styles.secondaryButton.disabled,\r\n                ),\r\n            );\r\n        }\r\n\r\n        if (styles.input) {\r\n            rules.push(toCSSRule('.optimizedCheckout-form-input', styles.input));\r\n            rules.push(\r\n                toCSSRule('.optimizedCheckout-form-input:focus', styles.input, styles.input.focus),\r\n            );\r\n            rules.push(\r\n                toCSSRule('.optimizedCheckout-form-input:hover', styles.input, styles.input.hover),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-form-input::placeholder',\r\n                    styles.input,\r\n                    styles.input.placeholder,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-input',\r\n                    styles.input,\r\n                    styles.input.error,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-input:focus',\r\n                    styles.input,\r\n                    styles.input.error,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-input:hover',\r\n                    styles.input,\r\n                    styles.input.error,\r\n                ),\r\n            );\r\n        }\r\n\r\n        if (styles.select) {\r\n            rules.push(toCSSRule('.optimizedCheckout-form-select', styles.select));\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-form-select:focus',\r\n                    styles.select,\r\n                    styles.select.focus,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-form-select:hover',\r\n                    styles.select,\r\n                    styles.select.hover,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-select',\r\n                    styles.select,\r\n                    styles.select.error,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-select:focus',\r\n                    styles.select,\r\n                    styles.select.error,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-select:hover',\r\n                    styles.select,\r\n                    styles.select.error,\r\n                ),\r\n            );\r\n        }\r\n\r\n        if (styles.checkbox) {\r\n            rules.push(toCSSRule('.optimizedCheckout-form-checkbox', styles.checkbox));\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-form-checkbox:focus',\r\n                    styles.checkbox,\r\n                    styles.checkbox.focus,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-form-checkbox:hover',\r\n                    styles.checkbox,\r\n                    styles.checkbox.hover,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-checkbox',\r\n                    styles.checkbox,\r\n                    styles.checkbox.error,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-checkbox:focus',\r\n                    styles.checkbox,\r\n                    styles.checkbox.error,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-checkbox:hover',\r\n                    styles.checkbox,\r\n                    styles.checkbox.error,\r\n                ),\r\n            );\r\n        }\r\n\r\n        if (styles.radio) {\r\n            rules.push(toCSSRule('.optimizedCheckout-form-radio', styles.radio));\r\n            rules.push(\r\n                toCSSRule('.optimizedCheckout-form-radio:focus', styles.radio, styles.radio.focus),\r\n            );\r\n            rules.push(\r\n                toCSSRule('.optimizedCheckout-form-radio:hover', styles.radio, styles.radio.hover),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-radio',\r\n                    styles.radio,\r\n                    styles.radio.error,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-radio:focus',\r\n                    styles.radio,\r\n                    styles.radio.error,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-radio:hover',\r\n                    styles.radio,\r\n                    styles.radio.error,\r\n                ),\r\n            );\r\n        }\r\n\r\n        if (styles.step) {\r\n            rules.push(toCSSRule('.optimizedCheckout-checkoutStep', styles.step));\r\n            rules.push(toCSSRule('.optimizedCheckout-step', styles.step.icon));\r\n        }\r\n\r\n        if (styles.checklist) {\r\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist', styles.checklist));\r\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist-item', styles.checklist));\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-form-checklist-item:hover',\r\n                    styles.checklist,\r\n                    styles.checklist.hover,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-form-checklist-item--selected',\r\n                    styles.checklist,\r\n                    styles.checklist.checked,\r\n                ),\r\n            );\r\n        }\r\n\r\n        if (styles.discountBanner) {\r\n            rules.push(toCSSRule('.optimizedCheckout-discountBanner', styles.discountBanner));\r\n        }\r\n\r\n        if (styles.loadingBanner) {\r\n            rules.push(toCSSRule('.optimizedCheckout-loadingToaster', styles.loadingBanner));\r\n        }\r\n\r\n        if (styles.orderSummary) {\r\n            rules.push(toCSSRule('.optimizedCheckout-orderSummary', styles.orderSummary));\r\n            rules.push(\r\n                toCSSRule('.optimizedCheckout-orderSummary-cartSection', styles.orderSummary),\r\n            );\r\n        }\r\n\r\n        return rules;\r\n    }\r\n}\r\n","import { EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { appendStylesheet } from '../common/dom';\r\n\r\nimport EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\r\n\r\nexport default class EmbeddedCheckoutStylesheet {\r\n    private _parser: EmbeddedCheckoutStyleParser;\r\n\r\n    constructor(embeddedCheckoutStyleParser: EmbeddedCheckoutStyleParser) {\r\n        this._parser = embeddedCheckoutStyleParser;\r\n    }\r\n\r\n    append(styles: EmbeddedCheckoutStyles): HTMLStyleElement {\r\n        return appendStylesheet(this._parser.parse(styles));\r\n    }\r\n}\r\n","export default function appendStylesheet(rules: string[]): HTMLStyleElement {\r\n    const style = document.createElement('style');\r\n\r\n    document.head.appendChild(style);\r\n\r\n    if (style.sheet instanceof CSSStyleSheet) {\r\n        const { sheet } = style;\r\n\r\n        rules.forEach((rule, index) => {\r\n            sheet.insertRule(rule, index);\r\n        });\r\n    }\r\n\r\n    return style;\r\n}\r\n","import EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\r\nimport EmbeddedCheckoutStylesheet from './EmbeddedCheckoutStylesheet';\r\n\r\nexport default function createEmbeddedCheckoutStylesheet() {\r\n    const embeddedCheckoutStyleParser = new EmbeddedCheckoutStyleParser();\r\n\r\n    return new EmbeddedCheckoutStylesheet(embeddedCheckoutStyleParser);\r\n}\r\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\r\n    const basePath = `/${pathname.split('/')[1]}`;\r\n\r\n    return basePath === '/embedded-checkout';\r\n}\r\n","import { FormField } from '@bigcommerce/checkout-sdk';\r\nimport { memoize } from '@bigcommerce/memoize';\r\nimport {\r\n    array,\r\n    ArraySchema,\r\n    date,\r\n    number,\r\n    NumberSchema,\r\n    object,\r\n    ObjectSchema,\r\n    Schema,\r\n    string,\r\n} from 'yup';\r\n\r\nimport { DynamicFormFieldType } from '../ui/form';\r\n\r\nexport type TranslateValidationErrorFunction = (\r\n    validationType: 'max' | 'min' | 'required' | 'invalid',\r\n    field: {\r\n        name: string;\r\n        label: string;\r\n        min?: number;\r\n        max?: number;\r\n    },\r\n) => string | undefined;\r\n\r\nexport interface FormFieldsValidationSchemaOptions {\r\n    formFields: FormField[];\r\n    translate?: TranslateValidationErrorFunction;\r\n    validateGoogleMapAutoCompleteMaxLength?: boolean;\r\n    validateAddressFields?: boolean;\r\n}\r\n\r\nexport interface CustomFormFieldValues {\r\n    customFields: CustomFormFields;\r\n}\r\n\r\nexport interface CustomFormFields {\r\n    [id: string]: string | string[] | number;\r\n}\r\n\r\nexport default memoize(function getCustomFormFieldsValidationSchema({\r\n    formFields,\r\n    translate = () => undefined,\r\n}: FormFieldsValidationSchemaOptions): ObjectSchema<CustomFormFieldValues> {\r\n    return object({\r\n        customFields: object(\r\n            formFields\r\n                .filter(({ custom }) => !!custom)\r\n                .reduce((schema, { name, label, required, fieldType, type, min, max }) => {\r\n                    let maxValue: number | undefined;\r\n                    let minValue: number | undefined;\r\n\r\n                    if (type === 'date') {\r\n                        schema[name] = date()\r\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail date\r\n                            // validation when it's optional\r\n                            .nullable(true)\r\n                            .transform((value, originalValue) =>\r\n                                originalValue === '' ? null : value,\r\n                            );\r\n                    } else if (type === 'integer') {\r\n                        schema[name] = number()\r\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail number\r\n                            // validation when it's optional\r\n                            .transform((value) => (isNaN(value) ? undefined : value));\r\n\r\n                        maxValue = typeof max === 'number' ? max : undefined;\r\n                        minValue = typeof min === 'number' ? min : undefined;\r\n                    } else if (fieldType === DynamicFormFieldType.checkbox) {\r\n                        schema[name] = array();\r\n                    } else {\r\n                        schema[name] = string();\r\n                    }\r\n\r\n                    if (maxValue !== undefined) {\r\n                        schema[name] = (schema[name] as NumberSchema).max(\r\n                            maxValue,\r\n                            translate('max', { label, name, max: maxValue + 1 }),\r\n                        );\r\n                    }\r\n\r\n                    if (minValue !== undefined) {\r\n                        schema[name] = (schema[name] as NumberSchema).min(\r\n                            minValue,\r\n                            translate('min', { label, name, min: minValue - 1 }),\r\n                        );\r\n                    }\r\n\r\n                    if (required) {\r\n                        const requiredErrorMessage = translate('required', { name, label });\r\n\r\n                        schema[name] =\r\n                            fieldType === DynamicFormFieldType.checkbox\r\n                                ? (schema[name] as ArraySchema<string>).min(1, requiredErrorMessage)\r\n                                : (schema[name] as ArraySchema<string>).required(\r\n                                      requiredErrorMessage,\r\n                                  );\r\n                    }\r\n\r\n                    return schema;\r\n                }, {} as { [key: string]: Schema<any> }),\r\n        ).nullable(true),\r\n    }) as ObjectSchema<CustomFormFieldValues>;\r\n});\r\n","import { forIn, isDate, padStart } from 'lodash';\r\n\r\nexport default function mapCustomFormFieldsFromFormValues(customFieldsObject: {\r\n    [id: string]: any;\r\n}): Array<{ fieldId: string; fieldValue: string }> {\r\n    const customFields: Array<{ fieldId: string; fieldValue: string }> = [];\r\n\r\n    forIn(customFieldsObject, (value, key) => {\r\n        let fieldValue: string;\r\n\r\n        if (isDate(value)) {\r\n            const padMonth = padStart((value.getMonth() + 1).toString(), 2, '0');\r\n            const padDay = padStart(value.getDate().toString(), 2, '0');\r\n\r\n            fieldValue = `${value.getFullYear()}-${padMonth}-${padDay}`;\r\n        } else {\r\n            fieldValue = value;\r\n        }\r\n\r\n        customFields.push({\r\n            fieldId: key,\r\n            fieldValue,\r\n        });\r\n    });\r\n\r\n    return customFields;\r\n}\r\n","import React, { ComponentType } from 'react';\r\n\r\nimport ResolvableComponent from './ResolvableComponent';\r\n\r\nexport default function toResolvableComponent<TProps extends Record<string, any>, TIdentifier>(\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    Component: ComponentType<TProps>,\r\n    resolveIds: TIdentifier[],\r\n): ResolvableComponent<TProps, TIdentifier> {\r\n    return Object.assign((props: TProps) => <Component {...props} />, { resolveIds });\r\n}\r\n","import React, { FunctionComponent, useEffect } from 'react';\r\n\r\nimport {\r\n    CheckoutButtonProps,\r\n    CheckoutButtonResolveId,\r\n    toResolvableComponent,\r\n} from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nconst CheckoutButton: FunctionComponent<CheckoutButtonProps> = ({\r\n    checkoutService: { deinitializeCustomer, initializeCustomer },\r\n    checkoutButtonContainerClass,\r\n    containerId,\r\n    methodId,\r\n    onUnhandledError,\r\n    onWalletButtonClick,\r\n}) => {\r\n    useEffect(() => {\r\n        initializeCustomer({\r\n            methodId,\r\n            [methodId]: {\r\n                container: containerId,\r\n                onUnhandledError,\r\n                onClick: () => onWalletButtonClick(methodId),\r\n            },\r\n        }).catch(onUnhandledError);\r\n\r\n        return () => {\r\n            deinitializeCustomer({ methodId }).catch(onUnhandledError);\r\n        };\r\n    }, [\r\n        containerId,\r\n        deinitializeCustomer,\r\n        initializeCustomer,\r\n        methodId,\r\n        onUnhandledError,\r\n        onWalletButtonClick,\r\n    ]);\r\n\r\n    return <div className={checkoutButtonContainerClass} id={containerId} />;\r\n};\r\n\r\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\r\n    CheckoutButton,\r\n    [],\r\n);\r\n","import React, { FunctionComponent, useEffect } from 'react';\r\n\r\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\r\nimport { isHTMLElement } from '@bigcommerce/checkout/instrument-utils';\r\nimport {\r\n    CheckoutButtonProps,\r\n    CheckoutButtonResolveId,\r\n    toResolvableComponent,\r\n} from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nconst beautifyAmazonButton = (): void => {\r\n    if (!document.querySelector('.checkout-button-container')) {\r\n        return;\r\n    }\r\n\r\n    const container = document.querySelector('#amazonpayCheckoutButton > div');\r\n\r\n    if (container) {\r\n        const amazonButton = container.shadowRoot?.querySelector('.amazonpay-button-view1');\r\n\r\n        if (isHTMLElement(amazonButton)) {\r\n            amazonButton.style.height = '36px';\r\n\r\n            return;\r\n        }\r\n    }\r\n\r\n    setTimeout(beautifyAmazonButton, 10);\r\n};\r\n\r\nconst AmazonPayV2Button: FunctionComponent<CheckoutButtonProps> = (props) => {\r\n    useEffect(() => {\r\n        beautifyAmazonButton();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"AmazonPayContainer\">\r\n            <CheckoutButton {...props} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\r\n    AmazonPayV2Button,\r\n    [{ id: 'amazonpay' }],\r\n);\r\n","export default function isHTMLElement(element: unknown): element is HTMLElement {\r\n    return element instanceof HTMLElement;\r\n}\r\n","import setPrototypeOf from '../setPrototypeOf';\r\n\r\nimport CustomError from './CustomError';\r\n\r\nexport default class EmbeddedCheckoutUnsupportedError extends CustomError {\r\n    constructor(message: string) {\r\n        super({\r\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\r\n            message,\r\n        });\r\n\r\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\r\n    }\r\n}\r\n","export default function setPrototypeOf<T extends object>(object: T, prototype: object): T {\r\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\r\n    if (Object.setPrototypeOf) {\r\n        Object.setPrototypeOf(object, prototype);\r\n    } else if (hasProto(object)) {\r\n        // eslint-disable-next-line no-proto\r\n        object.__proto__ = prototype;\r\n    }\r\n\r\n    return object;\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nfunction hasProto(object: object): object is object & { __proto__: object } {\r\n    return '__proto__' in object;\r\n}\r\n","export default class CustomError extends Error {\r\n    static shouldReport: boolean;\r\n\r\n    data: any;\r\n    title: any;\r\n    type: string;\r\n\r\n    constructor({\r\n        data = {},\r\n        message = '',\r\n        title = '',\r\n        name = '',\r\n    }: {\r\n        data?: any;\r\n        message?: string;\r\n        title?: string;\r\n        name?: string;\r\n    }) {\r\n        super();\r\n\r\n        if (typeof Error.captureStackTrace === 'function') {\r\n            Error.captureStackTrace(this, CustomError);\r\n        } else {\r\n            this.stack = new Error().stack;\r\n        }\r\n\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n        this.data = data;\r\n        this.message = message;\r\n        this.name = name;\r\n        this.title = title;\r\n        this.type = 'custom';\r\n    }\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\r\nimport {\r\n    CheckoutButtonProps,\r\n    CheckoutButtonResolveId,\r\n    EmbeddedCheckoutUnsupportedError,\r\n    isEmbedded,\r\n    toResolvableComponent,\r\n} from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nimport './GooglePayButton.scss';\r\n\r\nconst GooglePayButton: FunctionComponent<CheckoutButtonProps> = (props) => {\r\n    const { language, onUnhandledError } = props;\r\n\r\n    if (isEmbedded()) {\r\n        onUnhandledError(\r\n            new EmbeddedCheckoutUnsupportedError(\r\n                language.translate('embedded_checkout.unsupported_error', {\r\n                    methods: 'googlepay',\r\n                }),\r\n            ),\r\n        );\r\n\r\n        return null;\r\n    }\r\n\r\n    return <CheckoutButton checkoutButtonContainerClass=\"google-pay-top-button\" {...props} />;\r\n};\r\n\r\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\r\n    GooglePayButton,\r\n    [\r\n        { id: 'googlepayadyenv2' },\r\n        { id: 'googlepayadyenv3' },\r\n        { id: 'googlepayauthorizenet' },\r\n        { id: 'googlepaybnz' },\r\n        { id: 'googlepaybraintree' },\r\n        { id: 'googlepaypaypalcommerce' },\r\n        { id: 'googlepaycheckoutcom' },\r\n        { id: 'googlepaycybersourcev2' },\r\n        { id: 'googlepayorbital' },\r\n        { id: 'googlepaystripe' },\r\n        { id: 'googlepaystripeupe' },\r\n        { id: 'googlepayworldpayaccess' },\r\n        { id: 'googlepaytdonlinemart' },\r\n    ],\r\n);\r\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\r\n    const basePath = `/${pathname.split('/')[1]}`;\r\n\r\n    return basePath === '/embedded-checkout';\r\n}\r\n","import {\r\n    CheckoutPayment,\r\n    GiftCertificateOrderPayment,\r\n    OrderPayment,\r\n} from '@bigcommerce/checkout-sdk';\r\n\r\nexport default function isGiftCertificatePayment(\r\n    payment: OrderPayment | CheckoutPayment,\r\n): payment is GiftCertificateOrderPayment {\r\n    return payment.providerId === 'giftcertificate';\r\n}\r\n","// `document.currentScript` can only be called at the global level as it only\r\n// holds a reference to the script when it is initially processed.\r\nconst path = document.currentScript ? (document.currentScript as HTMLScriptElement).src : undefined;\r\n\r\nexport default function getCurrentScriptPath(): string | undefined {\r\n    return path;\r\n}\r\n","import getCurrentScriptPath from './getCurrentScriptPath';\r\n\r\nexport default function configurePublicPath(publicPath?: string): string {\r\n    if (!publicPath) {\r\n        const scriptPath = getCurrentScriptPath();\r\n\r\n        if (!scriptPath) {\r\n            throw new Error(\r\n                'Unable to configure the public path of the application because it is not specified and it cannot be inferred using the path of the current script.',\r\n            );\r\n        }\r\n\r\n        __webpack_public_path__ = `${scriptPath.split('/').slice(0, -1).join('/')}/`;\r\n\r\n        return __webpack_public_path__;\r\n    }\r\n\r\n    __webpack_public_path__ = publicPath.substr(-1) === '/' ? publicPath : `${publicPath}/`;\r\n\r\n    return __webpack_public_path__;\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { configurePublicPath } from '../common/bundler';\r\n\r\nimport { CheckoutAppProps } from './CheckoutApp';\r\n\r\nexport type RenderCheckoutOptions = CheckoutAppProps;\r\nexport type RenderCheckout = typeof renderCheckout;\r\n\r\nexport default function renderCheckout({\r\n    containerId,\r\n    publicPath,\r\n    ...props\r\n}: RenderCheckoutOptions): void {\r\n    const configuredPublicPath = configurePublicPath(publicPath);\r\n\r\n    // We want to use `require` here because we want to set up the public path\r\n    // first before importing the app component and its dependencies.\r\n    const { default: CheckoutApp } = require('./CheckoutApp');\r\n\r\n    // We want to use `require` here because we only want to import the package\r\n    // in development mode.\r\n    if (process.env.NODE_ENV === 'development') {\r\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\r\n\r\n        whyDidYouRender(React, {\r\n            collapseGroups: true,\r\n        });\r\n    }\r\n\r\n    ReactDOM.render(\r\n        <CheckoutApp containerId={containerId} publicPath={configuredPublicPath} {...props} />,\r\n        document.getElementById(containerId),\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { configurePublicPath } from '../common/bundler';\r\n\r\nimport { OrderConfirmationAppProps } from './OrderConfirmationApp';\r\n\r\nexport type RenderOrderConfirmationOptions = OrderConfirmationAppProps;\r\nexport type RenderOrderConfirmation = typeof renderOrderConfirmation;\r\n\r\nexport default function renderOrderConfirmation({\r\n    containerId,\r\n    publicPath,\r\n    ...props\r\n}: RenderOrderConfirmationOptions): void {\r\n    const configuredPublicPath = configurePublicPath(publicPath);\r\n\r\n    // We want to use `require` here because we want to set up the public path\r\n    // first before importing the app component and its dependencies.\r\n    const { default: OrderConfirmationApp } = require('./OrderConfirmationApp');\r\n\r\n    // We want to use `require` here because we only want to import the package\r\n    // in development mode.\r\n    if (process.env.NODE_ENV === 'development') {\r\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\r\n\r\n        whyDidYouRender(React, {\r\n            collapseGroups: true,\r\n        });\r\n    }\r\n\r\n    ReactDOM.render(\r\n        <OrderConfirmationApp\r\n            containerId={containerId}\r\n            publicPath={configuredPublicPath}\r\n            {...props}\r\n        />,\r\n        document.getElementById(containerId),\r\n    );\r\n}\r\n","import { createRequestSender, RequestSender } from '@bigcommerce/request-sender';\r\n\r\nimport { CreatedCustomer, CreatedCustomerResponse } from './CreatedCustomer';\r\n\r\nexport interface CustomerCreateRequestBody {\r\n    confirmPassword: string;\r\n    newsletter: boolean;\r\n    orderId: number;\r\n    password: string;\r\n}\r\n\r\nexport default class AccountService {\r\n    constructor(private requestSender: RequestSender = createRequestSender()) {}\r\n\r\n    create(body: CustomerCreateRequestBody): Promise<CreatedCustomer> {\r\n        return this.requestSender\r\n            .put<CreatedCustomerResponse>('/internalapi/v1/checkout/customer', { body })\r\n            .then((response) => response.body.data.customer);\r\n    }\r\n}\r\n","import { FieldProps } from 'formik';\r\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { FormField, TextInput } from '../ui/form';\r\n\r\nexport interface PasswordField {\r\n    minLength: number;\r\n}\r\n\r\nconst SignUpPasswordField: FunctionComponent<PasswordField> = ({ minLength }) => {\r\n    const renderPasswordInput = useCallback(\r\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\r\n        [],\r\n    );\r\n\r\n    const renderPasswordConfirmationInput = useCallback(\r\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\r\n        [],\r\n    );\r\n\r\n    const passwordLabelContent = useMemo(\r\n        () => (\r\n            <>\r\n                <TranslatedString id=\"customer.password_label\" />{' '}\r\n                <small>\r\n                    {`${minLength}-`}\r\n                    <TranslatedString id=\"customer.password_minimum_character_label\" />\r\n                </small>\r\n            </>\r\n        ),\r\n        [minLength],\r\n    );\r\n\r\n    const passwordConfirmationLabelContent = useMemo(\r\n        () => <TranslatedString id=\"customer.password_confirmation_label\" />,\r\n        [],\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <FormField\r\n                input={renderPasswordInput}\r\n                labelContent={passwordLabelContent}\r\n                name=\"password\"\r\n            />\r\n\r\n            <FormField\r\n                input={renderPasswordConfirmationInput}\r\n                labelContent={passwordConfirmationLabelContent}\r\n                name=\"confirmPassword\"\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default memo(SignUpPasswordField);\r\n","import { FormikProps, withFormik } from 'formik';\r\nimport React, { FunctionComponent, memo } from 'react';\r\nimport { object, ref, string } from 'yup';\r\n\r\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\r\n\r\nimport { PasswordRequirements } from '../customer';\r\nimport { Button, ButtonVariant } from '../ui/button';\r\nimport { Fieldset, Form, Legend } from '../ui/form';\r\n\r\nimport SignUpPasswordField from './SignUpPasswordField';\r\n\r\nexport interface SignUpFormProps {\r\n    isSigningUp?: boolean;\r\n    customerCanBeCreated: boolean;\r\n    passwordRequirements: PasswordRequirements;\r\n    onSignUp(data: SignUpFormValues): void;\r\n}\r\n\r\nexport interface SignUpFormValues {\r\n    password: string;\r\n    confirmPassword: string;\r\n}\r\n\r\nconst GuestSignUpForm: FunctionComponent<\r\n    SignUpFormProps & WithLanguageProps & FormikProps<SignUpFormValues>\r\n> = ({ isSigningUp, customerCanBeCreated, passwordRequirements: { minLength } }) => (\r\n    <Fieldset\r\n        legend={\r\n            <Legend>\r\n                <TranslatedString\r\n                    id={\r\n                        customerCanBeCreated\r\n                            ? 'customer.create_account_text'\r\n                            : 'customer.set_password_text'\r\n                    }\r\n                />\r\n            </Legend>\r\n        }\r\n    >\r\n        {!customerCanBeCreated && (\r\n            <p>\r\n                <TranslatedString id=\"customer.account_created_text\" />\r\n            </p>\r\n        )}\r\n\r\n        <Form className=\"guest-signup form\">\r\n            <SignUpPasswordField minLength={minLength} />\r\n\r\n            <div className=\"form-actions\">\r\n                <Button\r\n                    id=\"createAccountButton\"\r\n                    isLoading={isSigningUp}\r\n                    type=\"submit\"\r\n                    variant={ButtonVariant.Primary}\r\n                >\r\n                    <TranslatedString\r\n                        id={\r\n                            customerCanBeCreated\r\n                                ? 'customer.create_account_action'\r\n                                : 'customer.set_password_action'\r\n                        }\r\n                    />\r\n                </Button>\r\n            </div>\r\n        </Form>\r\n    </Fieldset>\r\n);\r\n\r\nexport default withLanguage(\r\n    withFormik<SignUpFormProps & WithLanguageProps, SignUpFormValues>({\r\n        mapPropsToValues: () => ({\r\n            password: '',\r\n            confirmPassword: '',\r\n        }),\r\n        handleSubmit: (values, { props: { onSignUp } }) => {\r\n            onSignUp(values);\r\n        },\r\n        validationSchema: ({\r\n            language,\r\n            passwordRequirements: { description, numeric, alpha, minLength },\r\n        }: SignUpFormProps & WithLanguageProps) =>\r\n            object({\r\n                password: string()\r\n                    .required(description || language.translate('customer.password_required_error'))\r\n                    .matches(\r\n                        numeric,\r\n                        description ||\r\n                            language.translate('customer.password_number_required_error'),\r\n                    )\r\n                    .matches(\r\n                        alpha,\r\n                        description ||\r\n                            language.translate('customer.password_letter_required_error'),\r\n                    )\r\n                    .min(\r\n                        minLength,\r\n                        description ||\r\n                            language.translate('customer.password_under_minimum_length_error'),\r\n                    )\r\n                    .max(100, language.translate('customer.password_over_maximum_length_error')),\r\n                confirmPassword: string()\r\n                    .required(language.translate('customer.password_confirmation_required_error'))\r\n                    .oneOf(\r\n                        [ref('password')],\r\n                        language.translate('customer.password_confirmation_error'),\r\n                    ),\r\n            }),\r\n    })(memo(GuestSignUpForm)),\r\n);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { Alert, AlertType } from '../ui/alert';\r\n\r\nconst PasswordSavedSuccessAlert: FunctionComponent = () => (\r\n    <Alert type={AlertType.Success}>\r\n        <strong>\r\n            <TranslatedString id=\"customer.set_password_success\" />\r\n        </strong>\r\n    </Alert>\r\n);\r\n\r\nexport default PasswordSavedSuccessAlert;\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { Alert, AlertType } from '../ui/alert';\r\n\r\nconst SignedUpSuccessAlert: FunctionComponent = () => (\r\n    <Alert type={AlertType.Success}>\r\n        <strong>\r\n            <TranslatedString id=\"customer.create_account_success\" />\r\n        </strong>\r\n    </Alert>\r\n);\r\n\r\nexport default SignedUpSuccessAlert;\r\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\r\n\r\nimport { CustomError, setPrototypeOf } from '../../common/error';\r\n\r\nexport default class AccountCreationRequirementsError extends CustomError {\r\n    constructor(data: Error, requirements: string) {\r\n        super({\r\n            name: 'ACCOUNT_CREATION_REQUIREMENTS_ERROR',\r\n            message: requirements,\r\n            title: getLanguageService().translate(\r\n                'customer.create_account_requirements_error_heading',\r\n            ),\r\n            data,\r\n        });\r\n\r\n        setPrototypeOf(this, AccountCreationRequirementsError.prototype);\r\n    }\r\n}\r\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\r\n\r\nimport { CustomError, setPrototypeOf } from '../../common/error';\r\n\r\nexport default class AccountCreationFailedError extends CustomError {\r\n    constructor(data: Error) {\r\n        super({\r\n            name: 'ACCOUNT_CREATION_FAILED',\r\n            message: getLanguageService().translate('customer.create_account_error'),\r\n            data,\r\n        });\r\n\r\n        setPrototypeOf(this, AccountCreationFailedError.prototype);\r\n    }\r\n}\r\n","import { GatewayOrderPayment, Order, OrderPayment } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { isGiftCertificatePayment } from '../giftCertificate';\r\nimport { isStoreCreditPayment } from '../payment/storeCredit';\r\n\r\nexport interface PaymentInstructionsProps {\r\n    order: Order;\r\n}\r\n\r\nfunction isDefaultOrderPayment(payment: OrderPayment): payment is GatewayOrderPayment {\r\n    return !isGiftCertificatePayment(payment) && !isStoreCreditPayment(payment);\r\n}\r\n\r\nfunction getPaymentInstructions(order: Order): string {\r\n    const gatewayPayment = (order.payments || []).find(isDefaultOrderPayment);\r\n    const instructions = gatewayPayment && gatewayPayment.detail.instructions;\r\n\r\n    return instructions || '';\r\n}\r\n\r\nexport default getPaymentInstructions;\r\n","import { GiftCertificate, OrderPayments } from '@bigcommerce/checkout-sdk';\r\n\r\nimport isGiftCertificatePayment from './isGiftCertificatePayment';\r\n\r\nexport default function mapFromPayments(payments: OrderPayments): GiftCertificate[] {\r\n    return payments.filter(isGiftCertificatePayment).map(({ amount, detail }) => ({\r\n        code: detail.code,\r\n        remaining: detail.remaining,\r\n        used: amount,\r\n        balance: amount + detail.remaining,\r\n        purchaseDate: '',\r\n    }));\r\n}\r\n","import { OrderPayment } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { isStoreCreditPayment } from '../payment/storeCredit';\r\n\r\nexport default function getStoreCreditAmount(payments?: OrderPayment[]): number {\r\n    return (payments || [])\r\n        .filter(isStoreCreditPayment)\r\n        .reduce((total, payment) => total + payment.amount, 0);\r\n}\r\n","import { Order } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { mapFromPayments } from '../giftCertificate';\r\n\r\nimport getStoreCreditAmount from './getStoreCreditAmount';\r\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\r\n\r\nexport default function mapToOrderSummarySubtotalsProps({\r\n    baseAmount,\r\n    discountAmount,\r\n    isTaxIncluded,\r\n    shippingCostBeforeDiscount,\r\n    payments,\r\n    handlingCostTotal,\r\n    giftWrappingCostTotal,\r\n    coupons,\r\n    taxes,\r\n    fees,\r\n}: Order): OrderSummarySubtotalsProps {\r\n    return {\r\n        subtotalAmount: baseAmount,\r\n        shippingAmount: shippingCostBeforeDiscount,\r\n        giftWrappingAmount: giftWrappingCostTotal,\r\n        discountAmount,\r\n        storeCreditAmount: getStoreCreditAmount(payments),\r\n        handlingAmount: handlingCostTotal,\r\n        coupons,\r\n        giftCertificates: payments && mapFromPayments(payments),\r\n        taxes,\r\n        isTaxIncluded,\r\n        fees,\r\n    };\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nconst OrderConfirmationSection: FunctionComponent = ({ children }) => (\r\n    <section className=\"orderConfirmation-section\">{children}</section>\r\n);\r\n\r\nexport default OrderConfirmationSection;\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nexport interface MandateTextComponentProps {\r\n    mandateText: {\r\n        [key: string]: string;\r\n    },\r\n    methodId: string;\r\n    providerId: string;\r\n}\r\n\r\nexport const MandateTextComponent: FunctionComponent<MandateTextComponentProps> = ({\r\n    mandateText,\r\n    providerId,\r\n    methodId,\r\n}) => {\r\n    if (!Object.keys(mandateText).length) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <ul data-test='order-confirmation-mandate-text-list'>\r\n            {Object.entries(mandateText).map((field, index) => {\r\n                return (\r\n                    <li data-test={`order-confirmation-mandate-text-list-item-${index}`} key={index}>\r\n                        <TranslatedString\r\n                            id={`order_confirmation.mandate.${providerId}.${methodId}.${field[0]}`}\r\n                        />:\r\n                        <b>\r\n                            {` ${field[1]}`}\r\n                        </b>\r\n                    </li>\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n","import { GatewayOrderPayment } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { MandateTextComponent } from './MandateTextComponent';\r\n\r\nexport interface PaymentsWithMandatesProps {\r\n    paymentsWithMandates: GatewayOrderPayment[];\r\n}\r\n\r\nexport const PaymentsWithMandates: FunctionComponent<PaymentsWithMandatesProps> = ({\r\n    paymentsWithMandates,\r\n}) => <>\r\n    {paymentsWithMandates.map((payment) => {\r\n        if (payment?.mandate?.url) {\r\n            return (\r\n                <a\r\n                    data-test=\"order-confirmation-mandate-link-text\"\r\n                    href={payment.mandate.url}\r\n                    key={`${payment.providerId}-${payment.methodId}-mandate`}\r\n                    rel=\"noopener noreferrer\"\r\n                    target=\"_blank\"\r\n                >\r\n                    <TranslatedString\r\n                        id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\r\n                    />\r\n                </a>\r\n            );\r\n        } else if (payment?.mandate?.id) {\r\n            return (\r\n                <p\r\n                    data-test=\"order-confirmation-mandate-id-text\"\r\n                    key={`${payment.providerId}-${payment.methodId}-mandate`}\r\n                >\r\n                    <TranslatedString\r\n                        data={{ mandate: payment.mandate.id }}\r\n                        id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\r\n                    />\r\n                </p>\r\n            );\r\n        } else if (payment?.mandate?.mandateText && payment.methodId) {\r\n            return <MandateTextComponent\r\n                key='mandateTextList'\r\n                mandateText={payment.mandate.mandateText}\r\n                methodId={payment.methodId}\r\n                providerId={payment.providerId}\r\n            />\r\n        }\r\n    })}\r\n</>\r\n","import { GatewayOrderPayment, GiftCertificateOrderPayment, Order, StoreConfig } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\r\n\r\nimport OrderConfirmationSection from './OrderConfirmationSection';\r\nimport { PaymentsWithMandates } from './PaymentsWithMandates';\r\n\r\nexport interface OrderStatusProps {\r\n    config: StoreConfig;\r\n    supportEmail: string;\r\n    supportPhoneNumber?: string;\r\n    order: Order;\r\n}\r\n\r\ntype PaymentWithMandate = GatewayOrderPayment &\r\n    Required<Pick<GatewayOrderPayment, 'mandate' | 'methodId'>>;\r\n\r\nconst isPaymentWithMandate = (\r\n    payment: GatewayOrderPayment | GiftCertificateOrderPayment,\r\n): payment is PaymentWithMandate => !!payment.methodId && 'mandate' in payment && !!payment.mandate;\r\n\r\nconst OrderStatus: FunctionComponent<OrderStatusProps> = ({\r\n    config,\r\n    order,\r\n    supportEmail,\r\n    supportPhoneNumber,\r\n}) => {\r\n    const paymentsWithMandates = order.payments?.filter(isPaymentWithMandate) || [];\r\n\r\n    return (\r\n        <OrderConfirmationSection>\r\n            {order.orderId && (\r\n                <p data-test=\"order-confirmation-order-number-text\">\r\n                    <TranslatedHtml\r\n                        data={{ orderNumber: order.orderId }}\r\n                        id=\"order_confirmation.order_number_text\"\r\n                    />\r\n                </p>\r\n            )}\r\n\r\n            <p data-test=\"order-confirmation-order-status-text\">\r\n                <OrderStatusMessage\r\n                    config={config}\r\n                    orderNumber={order.orderId}\r\n                    orderStatus={order.status}\r\n                    supportEmail={supportEmail}\r\n                    supportPhoneNumber={supportPhoneNumber}\r\n                />\r\n            </p>\r\n            <PaymentsWithMandates\r\n                paymentsWithMandates={paymentsWithMandates}\r\n            />\r\n            {order.hasDigitalItems && (\r\n                <p data-test=\"order-confirmation-digital-items-text\">\r\n                    <TranslatedHtml\r\n                        id={\r\n                            order.isDownloadable\r\n                                ? 'order_confirmation.order_with_downloadable_digital_items_text'\r\n                                : 'order_confirmation.order_without_downloadable_digital_items_text'\r\n                        }\r\n                    />\r\n                </p>\r\n            )}\r\n        </OrderConfirmationSection>\r\n    );\r\n};\r\n\r\ninterface OrderStatusMessageProps {\r\n    config: StoreConfig;\r\n    orderNumber: number;\r\n    orderStatus: string;\r\n    supportEmail?: string;\r\n    supportPhoneNumber?: string;\r\n}\r\n\r\nconst OrderStatusMessage: FunctionComponent<OrderStatusMessageProps> = ({\r\n    config,\r\n    orderNumber,\r\n    orderStatus,\r\n    supportEmail,\r\n    supportPhoneNumber,\r\n}) => {\r\n    switch (orderStatus) {\r\n        case 'MANUAL_VERIFICATION_REQUIRED':\r\n        case 'AWAITING_PAYMENT':\r\n            return <TranslatedHtml id=\"order_confirmation.order_pending_review_text\" />;\r\n\r\n        case 'PENDING':\r\n            return (\r\n                <TranslatedHtml\r\n                    data={{ orderNumber, supportEmail }}\r\n                    id=\"order_confirmation.order_pending_status_text\"\r\n                />\r\n            );\r\n\r\n        case 'INCOMPLETE':\r\n            if (config.checkoutSettings.features['CHECKOUT-6891.update_incomplete_order_wording_on_order_confirmation_page']) {\r\n                return (\r\n                    <TranslatedHtml\r\n                        data={{ orderNumber, supportEmail }}\r\n                        id=\"order_confirmation.order_pending_status_text\"\r\n                    />\r\n                );\r\n            }\r\n\r\n            return (\r\n                <TranslatedHtml\r\n                    data={{ orderNumber, supportEmail }}\r\n                    id=\"order_confirmation.order_incomplete_status_text\"\r\n                />\r\n            );\r\n\r\n        default:\r\n            return (\r\n                <TranslatedHtml\r\n                    data={{ orderNumber, supportEmail, supportPhoneNumber }}\r\n                    id={\r\n                        supportPhoneNumber\r\n                            ? 'order_confirmation.order_with_support_number_text'\r\n                            : 'order_confirmation.order_without_support_number_text'\r\n                    }\r\n                />\r\n            );\r\n    }\r\n};\r\n\r\nexport default memo(OrderStatus);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconPrint: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconPrint);\r\n","import { throttle } from 'lodash';\r\nimport React, { FunctionComponent, memo, useCallback } from 'react';\r\n\r\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { IconPrint } from '../ui/icon';\r\n\r\nexport interface PrintLinkProps {\r\n    className?: string;\r\n}\r\n\r\nconst PRINT_MODAL_THROTTLE = 500;\r\n\r\nconst PrintLink: FunctionComponent<PrintLinkProps> = ({ className }) => {\r\n    const handleClick = useCallback(\r\n        throttle(() => {\r\n            window.print();\r\n        }, PRINT_MODAL_THROTTLE),\r\n        [],\r\n    );\r\n\r\n    if (typeof window.print !== 'function') {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <a\r\n            className={className || 'cart-header-link'}\r\n            href=\"#\"\r\n            id=\"cart-print-link\"\r\n            onClick={preventDefault(handleClick)}\r\n        >\r\n            <IconPrint /> <TranslatedString id=\"cart.print_action\" />\r\n        </a>\r\n    );\r\n};\r\n\r\nexport default memo(PrintLink);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nexport interface HeaderProps {\r\n    testId?: string;\r\n}\r\n\r\nconst PrimaryHeader: FunctionComponent<HeaderProps> = ({ children, testId }) => (\r\n    <h1 className=\"optimizedCheckout-headingPrimary\" data-test={testId}>\r\n        {children}\r\n    </h1>\r\n);\r\n\r\nexport default PrimaryHeader;\r\n","import React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { PrimaryHeader } from '../ui/header';\r\n\r\nexport interface HeaderProps {\r\n    name?: string;\r\n}\r\n\r\nconst ThankYouHeader: FunctionComponent<HeaderProps> = ({ name }) => (\r\n    <PrimaryHeader testId=\"order-confirmation-heading\">\r\n        {name && (\r\n            <TranslatedString data={{ name }} id=\"order_confirmation.thank_you_customer_heading\" />\r\n        )}\r\n\r\n        {!name && <TranslatedString id=\"order_confirmation.thank_you_heading\" />}\r\n    </PrimaryHeader>\r\n);\r\n\r\nexport default memo(ThankYouHeader);\r\n","import {\r\n    CheckoutSelectors,\r\n    EmbeddedCheckoutMessenger,\r\n    EmbeddedCheckoutMessengerOptions,\r\n    Order,\r\n    ShopperConfig,\r\n    StoreConfig,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport classNames from 'classnames';\r\nimport DOMPurify from 'dompurify';\r\nimport React, { Component, lazy, ReactNode } from 'react';\r\n\r\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\r\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nimport { withAnalytics } from '../analytics';\r\nimport { withCheckout } from '../checkout';\r\nimport { ErrorModal } from '../common/error';\r\nimport { retry } from '../common/utility';\r\nimport { getPasswordRequirementsFromConfig } from '../customer';\r\nimport { EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\r\nimport {\r\n    CreatedCustomer,\r\n    GuestSignUpForm,\r\n    PasswordSavedSuccessAlert,\r\n    SignedUpSuccessAlert,\r\n    SignUpFormValues,\r\n} from '../guestSignup';\r\nimport {\r\n    AccountCreationFailedError,\r\n    AccountCreationRequirementsError,\r\n} from '../guestSignup/errors';\r\nimport { Button, ButtonVariant } from '../ui/button';\r\nimport { LazyContainer, LoadingSpinner } from '../ui/loading';\r\nimport { MobileView } from '../ui/responsive';\r\n\r\nimport getPaymentInstructions from './getPaymentInstructions';\r\nimport mapToOrderSummarySubtotalsProps from './mapToOrderSummarySubtotalsProps';\r\nimport OrderConfirmationSection from './OrderConfirmationSection';\r\nimport OrderStatus from './OrderStatus';\r\nimport PrintLink from './PrintLink';\r\nimport ThankYouHeader from './ThankYouHeader';\r\n// import Stepper from '@mui/material/Stepper'\r\n\r\nconst OrderSummary = lazy(() =>\r\n    retry(\r\n        () =>\r\n            import(\r\n                /* webpackChunkName: \"order-summary\" */\r\n                './OrderSummary'\r\n            ),\r\n    ),\r\n);\r\n\r\nconst OrderSummaryDrawer = lazy(() =>\r\n    retry(\r\n        () =>\r\n            import(\r\n                /* webpackChunkName: \"order-summary-drawer\" */\r\n                './OrderSummaryDrawer'\r\n            ),\r\n    ),\r\n);\r\n\r\nexport interface OrderConfirmationState {\r\n    error?: Error;\r\n    hasSignedUp?: boolean;\r\n    isSigningUp?: boolean;\r\n}\r\n\r\nexport interface OrderConfirmationProps {\r\n    containerId: string;\r\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\r\n    errorLogger: ErrorLogger;\r\n    orderId: number;\r\n    createAccount(values: SignUpFormValues): Promise<CreatedCustomer>;\r\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\r\n}\r\n\r\ninterface WithCheckoutOrderConfirmationProps {\r\n    order?: Order;\r\n    config?: StoreConfig;\r\n    loadOrder(orderId: number): Promise<CheckoutSelectors>;\r\n    isLoadingOrder(): boolean;\r\n}\r\n\r\nclass OrderConfirmation extends Component<\r\n    OrderConfirmationProps & WithCheckoutOrderConfirmationProps & AnalyticsContextProps,\r\n    OrderConfirmationState\r\n> {\r\n    state: OrderConfirmationState = {};\r\n\r\n    private embeddedMessenger?: EmbeddedCheckoutMessenger;\r\n\r\n    componentDidMount(): void {\r\n        const {\r\n            containerId,\r\n            createEmbeddedMessenger,\r\n            embeddedStylesheet,\r\n            loadOrder,\r\n            orderId,\r\n            analyticsTracker\r\n        } = this.props;\r\n\r\n        loadOrder(orderId)\r\n            .then(({ data }) => {\r\n                const { links: { siteLink = '' } = {} } = data.getConfig() || {};\r\n                const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\r\n\r\n                this.embeddedMessenger = messenger;\r\n\r\n                messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\r\n                messenger.postFrameLoaded({ contentId: containerId });\r\n\r\n                analyticsTracker.orderPurchased();\r\n            })\r\n            .catch(this.handleUnhandledError);\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { order, config, isLoadingOrder } = this.props;\r\n\r\n        if (!order || !config || isLoadingOrder()) {\r\n            return <LoadingSpinner isLoading={true} />;\r\n        }\r\n\r\n        const paymentInstructions = getPaymentInstructions(order);\r\n        const {\r\n            storeProfile: { orderEmail, storePhoneNumber },\r\n            shopperConfig,\r\n            links: { siteLink },\r\n        } = config;\r\n\r\n        // const stepperSteps = [\r\n        //     'Step 1', 'Step 2','Step 3'\r\n        // ]\r\n\r\n        return (\r\n            <div\r\n                className={classNames('layout optimizedCheckout-contentPrimary', {\r\n                    'is-embedded': isEmbedded(),\r\n                })}\r\n            >\r\n                <div className=\"layout-main\">\r\n                    <div className=\"orderConfirmation\">\r\n                        <ThankYouHeader name={order.billingAddress.firstName} />\r\n\r\n                        <OrderStatus\r\n                            config={config}\r\n                            order={order}\r\n                            supportEmail={orderEmail}\r\n                            supportPhoneNumber={storePhoneNumber}\r\n                        />\r\n\r\n                        <div>\r\n                            What to expect:\r\n                            <ul>\r\n                                <li>\r\n                                    Orbital Transports will respond to your request within 2 to 3 business days with information, questions, or a quote.\r\n                                </li>\r\n                                <li>\r\n                                    A SmallSat Catalog sales engineer will help you find the most appropriate solutions for your small satellite project needs and help you coordinate your smallsat project supply chain.\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                        {paymentInstructions && (\r\n                            <OrderConfirmationSection>\r\n                                <div\r\n                                    dangerouslySetInnerHTML={{\r\n                                        __html: DOMPurify.sanitize(paymentInstructions),\r\n                                    }}\r\n                                    data-test=\"payment-instructions\"\r\n                                />\r\n                            </OrderConfirmationSection>\r\n                        )}\r\n\r\n                        {this.renderGuestSignUp({\r\n                            shouldShowPasswordForm: order.customerCanBeCreated,\r\n                            customerCanBeCreated: !order.customerId,\r\n                            shopperConfig,\r\n                        })}\r\n\r\n                        <div className=\"continueButtonContainer\">\r\n                            <form action={siteLink} method=\"get\" target=\"_top\">\r\n                                <Button type=\"submit\" variant={ButtonVariant.Secondary}>\r\n                                    <TranslatedString id=\"order_confirmation.continue_shopping\" />\r\n                                </Button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {this.renderOrderSummary()}\r\n                {this.renderErrorModal()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderGuestSignUp({\r\n        customerCanBeCreated,\r\n        shouldShowPasswordForm,\r\n        shopperConfig,\r\n    }: {\r\n        customerCanBeCreated: boolean;\r\n        shouldShowPasswordForm: boolean;\r\n        shopperConfig: ShopperConfig;\r\n    }): ReactNode {\r\n        const { isSigningUp, hasSignedUp } = this.state;\r\n\r\n        const { order } = this.props;\r\n\r\n        return (\r\n            <>\r\n                {shouldShowPasswordForm && !hasSignedUp && (\r\n                    <GuestSignUpForm\r\n                        customerCanBeCreated={customerCanBeCreated}\r\n                        isSigningUp={isSigningUp}\r\n                        onSignUp={this.handleSignUp}\r\n                        passwordRequirements={getPasswordRequirementsFromConfig(shopperConfig)}\r\n                    />\r\n                )}\r\n\r\n                {hasSignedUp &&\r\n                    (order?.customerId ? <PasswordSavedSuccessAlert /> : <SignedUpSuccessAlert />)}\r\n            </>\r\n        );\r\n    }\r\n\r\n    private renderOrderSummary(): ReactNode {\r\n        const { order, config } = this.props;\r\n\r\n        if (!order || !config) {\r\n            return null;\r\n        }\r\n\r\n        const { currency, shopperCurrency } = config;\r\n\r\n        return (\r\n            <MobileView>\r\n                {(matched) => {\r\n                    if (matched) {\r\n                        return (\r\n                            <LazyContainer>\r\n                                <OrderSummaryDrawer\r\n                                    {...mapToOrderSummarySubtotalsProps(order)}\r\n                                    headerLink={\r\n                                        <PrintLink className=\"modal-header-link cart-modal-link\" />\r\n                                    }\r\n                                    lineItems={order.lineItems}\r\n                                    shopperCurrency={shopperCurrency}\r\n                                    storeCurrency={currency}\r\n                                    total={order.orderAmount}\r\n                                />\r\n                            </LazyContainer>\r\n                        );\r\n                    }\r\n\r\n                    return (\r\n                        <aside className=\"layout-cart\">\r\n                            <LazyContainer>\r\n                                <OrderSummary\r\n                                    headerLink={<PrintLink />}\r\n                                    {...mapToOrderSummarySubtotalsProps(order)}\r\n                                    lineItems={order.lineItems}\r\n                                    shopperCurrency={shopperCurrency}\r\n                                    storeCurrency={currency}\r\n                                    total={order.orderAmount}\r\n                                />\r\n                            </LazyContainer>\r\n                        </aside>\r\n                    );\r\n                }}\r\n            </MobileView>\r\n        );\r\n    }\r\n\r\n    private renderErrorModal(): ReactNode {\r\n        const { error } = this.state;\r\n\r\n        return (\r\n            <ErrorModal\r\n                error={error}\r\n                onClose={this.handleErrorModalClose}\r\n                shouldShowErrorCode={false}\r\n            />\r\n        );\r\n    }\r\n\r\n    private handleErrorModalClose: () => void = () => {\r\n        this.setState({ error: undefined });\r\n    };\r\n\r\n    private handleSignUp: (values: SignUpFormValues) => void = ({ password, confirmPassword }) => {\r\n        const { createAccount, config } = this.props;\r\n\r\n        const shopperConfig = config && config.shopperConfig;\r\n        const passwordRequirements =\r\n            (shopperConfig &&\r\n                shopperConfig.passwordRequirements &&\r\n                shopperConfig.passwordRequirements.error) ||\r\n            '';\r\n\r\n        this.setState({\r\n            isSigningUp: true,\r\n        });\r\n\r\n        createAccount({\r\n            password,\r\n            confirmPassword,\r\n        })\r\n            .then(() => {\r\n                this.setState({\r\n                    hasSignedUp: true,\r\n                    isSigningUp: false,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    error:\r\n                        error.status < 500\r\n                            ? new AccountCreationRequirementsError(error, passwordRequirements)\r\n                            : new AccountCreationFailedError(error),\r\n                    hasSignedUp: false,\r\n                    isSigningUp: false,\r\n                });\r\n            });\r\n    };\r\n\r\n    private handleUnhandledError: (error: Error) => void = (error) => {\r\n        const { errorLogger } = this.props;\r\n\r\n        this.setState({ error });\r\n        errorLogger.log(error);\r\n\r\n        if (this.embeddedMessenger) {\r\n            this.embeddedMessenger.postError(error);\r\n        }\r\n    };\r\n}\r\n\r\nexport function mapToOrderConfirmationProps(\r\n    context: CheckoutContextProps,\r\n): WithCheckoutOrderConfirmationProps | null {\r\n    const {\r\n        checkoutState: {\r\n            data: { getOrder, getConfig },\r\n            statuses: { isLoadingOrder },\r\n        },\r\n        checkoutService,\r\n    } = context;\r\n\r\n    const config = getConfig();\r\n    const order = getOrder();\r\n\r\n    return {\r\n        config,\r\n        isLoadingOrder,\r\n        loadOrder: checkoutService.loadOrder,\r\n        order,\r\n    };\r\n}\r\n\r\nexport default withAnalytics(withCheckout(mapToOrderConfirmationProps)(OrderConfirmation));\r\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\r\nimport { BrowserOptions } from '@sentry/browser';\r\nimport React, { Component, ReactNode } from 'react';\r\nimport ReactModal from 'react-modal';\r\n\r\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\r\nimport { ExtensionProvider } from '@bigcommerce/checkout/checkout-extension';\r\nimport { ErrorBoundary, ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\r\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\r\nimport { CheckoutProvider } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nimport '../../scss/App.scss';\r\n\r\nimport { createErrorLogger } from '../common/error';\r\nimport { createEmbeddedCheckoutStylesheet } from '../embeddedCheckout';\r\nimport { AccountService, CreatedCustomer, SignUpFormValues } from '../guestSignup';\r\n\r\nimport OrderConfirmation from './OrderConfirmation';\r\n\r\nexport interface OrderConfirmationAppProps {\r\n    containerId: string;\r\n    orderId: number;\r\n    publicPath?: string;\r\n    sentryConfig?: BrowserOptions;\r\n    sentrySampleRate?: number;\r\n}\r\n\r\nclass OrderConfirmationApp extends Component<OrderConfirmationAppProps> {\r\n    private accountService = new AccountService();\r\n    private checkoutService = createCheckoutService({\r\n        locale: getLanguageService().getLocale(),\r\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\r\n    });\r\n    private embeddedStylesheet = createEmbeddedCheckoutStylesheet();\r\n    private errorLogger: ErrorLogger;\r\n\r\n    constructor(props: Readonly<OrderConfirmationAppProps>) {\r\n        super(props);\r\n\r\n        this.errorLogger = createErrorLogger(\r\n            { sentry: props.sentryConfig },\r\n            {\r\n                errorTypes: ['UnrecoverableError'],\r\n                publicPath: props.publicPath,\r\n                sampleRate: props.sentrySampleRate ? props.sentrySampleRate : 0.1,\r\n            },\r\n        );\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const { containerId } = this.props;\r\n\r\n        ReactModal.setAppElement(`#${containerId}`);\r\n    }\r\n\r\n    render(): ReactNode {\r\n        return (\r\n            <ErrorBoundary logger={this.errorLogger}>\r\n                <LocaleProvider checkoutService={this.checkoutService}>\r\n                    <CheckoutProvider checkoutService={this.checkoutService}>\r\n                        <AnalyticsProvider checkoutService={this.checkoutService}>\r\n                            <ExtensionProvider checkoutService={this.checkoutService} errorLogger={createErrorLogger()}>\r\n                                <OrderConfirmation\r\n                                    {...this.props}\r\n                                    createAccount={this.createAccount}\r\n                                    createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\r\n                                    embeddedStylesheet={this.embeddedStylesheet}\r\n                                    errorLogger={this.errorLogger}\r\n                                />\r\n                            </ExtensionProvider>\r\n                        </AnalyticsProvider>\r\n                    </CheckoutProvider>\r\n                </LocaleProvider>\r\n            </ErrorBoundary>\r\n        );\r\n    }\r\n\r\n    private createAccount: (values: SignUpFormValues) => Promise<CreatedCustomer> = ({\r\n        password,\r\n        confirmPassword,\r\n    }) => {\r\n        const { orderId } = this.props;\r\n\r\n        return this.accountService.create({\r\n            orderId,\r\n            newsletter: false,\r\n            password,\r\n            confirmPassword,\r\n        });\r\n    };\r\n}\r\n\r\nexport default OrderConfirmationApp;\r\n","import { PaymentMethodId } from './paymentMethod';\r\n\r\nexport default function getProviderWithCustomCheckout(methodId?: string | null): string | undefined {\r\n    if (!methodId) {\r\n        return undefined;\r\n    }\r\n\r\n    if (methodId === PaymentMethodId.PaypalCommerce || methodId === PaymentMethodId.PaypalCommerceCreditCards) {\r\n        return PaymentMethodId.PayPalCommerceAcceleratedCheckout;\r\n    }\r\n\r\n    if (methodId === PaymentMethodId.Braintree) {\r\n        return PaymentMethodId.BraintreeAcceleratedCheckout;\r\n    }\r\n\r\n    return methodId;\r\n}\r\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nexport default PaymentMethodId;\r\n","import { CheckoutPayment, OrderPayment } from '@bigcommerce/checkout-sdk';\r\n\r\nexport default function isStoreCreditPayment(payment: OrderPayment | CheckoutPayment): boolean {\r\n    return payment.providerId === 'storecredit';\r\n}\r\n","import { PhysicalItem } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { MultiShippingTableItemWithType } from './MultishippingV2Type';\r\n\r\nexport interface ConsignmentLineItemDetailProps {\r\n    lineItems: MultiShippingTableItemWithType[] | PhysicalItem[]\r\n}\r\n\r\nconst renderProductOptionDetails = (item: MultiShippingTableItemWithType | PhysicalItem) => {\r\n    if (!item.options || !item.options.length) {\r\n        return null;\r\n    }\r\n\r\n    return (<span className=\"line-item-options\">{` - ${item.options.map(option => option.value).join(' / ')}`}</span>);\r\n}\r\n\r\nexport const renderItemContent = (item: MultiShippingTableItemWithType | PhysicalItem) => {\r\n    return <span>\r\n        <strong>{item.quantity} x </strong>{item.name}\r\n        {renderProductOptionDetails(item)}\r\n    </span>;\r\n};\r\n\r\nconst ConsignmentLineItemDetail: FunctionComponent<ConsignmentLineItemDetailProps> = ({\r\n    lineItems,\r\n}) => {\r\n\r\n    return (\r\n        <ul className=\"consignment-line-item-list\">\r\n        {lineItems.map((item) => (\r\n            <li key={item.id}>\r\n                {renderItemContent(item)}\r\n            </li>\r\n        ))}\r\n    </ul>\r\n    );\r\n};\r\n\r\nexport default memo(ConsignmentLineItemDetail);\r\n","import { Cart, Consignment } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport findLineItems from './findLineItems';\r\nimport getLineItemsCount from './getLineItemsCount';\r\n\r\nexport interface StaticConsignmentItemListProps {\r\n    consignment: Consignment;\r\n    cart: Cart;\r\n}\r\n\r\nconst StaticConsignmentItemList: FunctionComponent<StaticConsignmentItemListProps> = ({\r\n    cart,\r\n    consignment,\r\n}) => {\r\n    const lineItems = findLineItems(cart, consignment);\r\n\r\n    return (\r\n        <div className=\"staticConsignment-items\">\r\n            <strong>\r\n                <TranslatedString\r\n                    data={{ count: getLineItemsCount(lineItems) }}\r\n                    id=\"cart.item_count_text\"\r\n                />\r\n            </strong>\r\n\r\n            <ul>\r\n                {lineItems.map((item) => (\r\n                    <li key={item.id}>{`${item.quantity} x ${item.name}`}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(StaticConsignmentItemList);\r\n","import { Cart, Consignment, PhysicalItem } from '@bigcommerce/checkout-sdk';\r\nimport { compact, find, isNil, map } from 'lodash';\r\n\r\nexport default function findLineItems(cart: Cart, consignment: Consignment): PhysicalItem[] {\r\n    return compact(\r\n        map(consignment.lineItemIds, (itemId) =>\r\n            find(\r\n                cart.lineItems.physicalItems,\r\n                (item) => item.id === itemId && isNil(item.parentId),\r\n            ),\r\n        ),\r\n    );\r\n}\r\n","import { LineItem } from '@bigcommerce/checkout-sdk';\r\nimport { reduce } from 'lodash';\r\n\r\nexport default function getLineItemsCount(lineItems: LineItem[]): number {\r\n    return reduce(lineItems, (total, item) => total + item.quantity, 0);\r\n}\r\n","import { Consignment } from '@bigcommerce/checkout-sdk';\r\nimport { every } from 'lodash';\r\n\r\nexport default function hasSelectedShippingOptions(consignments: Consignment[]): boolean {\r\n    if (!consignments.length) {\r\n        return false;\r\n    }\r\n\r\n    return every(\r\n        consignments,\r\n        (consignment) =>\r\n            (consignment.selectedShippingOption && consignment.selectedShippingOption.id) ||\r\n            consignment.selectedShippingOption?.type === 'custom',\r\n    );\r\n}\r\n","import { Consignment, LineItemMap } from '@bigcommerce/checkout-sdk';\r\nimport { reduce } from 'lodash';\r\n\r\nexport default function hasUnassignedLineItems(\r\n    consignments: Consignment[],\r\n    lineItems: LineItemMap,\r\n): boolean {\r\n    const totalAssigned = reduce(\r\n        consignments,\r\n        (total, consignment) => total + consignment.lineItemIds.length,\r\n        0,\r\n    );\r\n\r\n    return totalAssigned < lineItems.physicalItems.filter((item) => !item.addedByPromotion).length;\r\n}\r\n","import React, { memo } from 'react';\r\n\r\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { Toggle } from '../../ui/toggle';\r\n\r\ninterface ShippingOptionAdditionalDescriptionProps {\r\n    description: string;\r\n}\r\n\r\nconst ShippingOptionAdditionalDescription: React.FunctionComponent<\r\n    ShippingOptionAdditionalDescriptionProps\r\n> = ({ description }) => {\r\n    const CHRACTER_LIMIT = 45;\r\n\r\n    return (\r\n        <div className=\"shippingOption-additionalDescription--container\">\r\n            <Toggle openByDefault={description.length < CHRACTER_LIMIT}>\r\n                {({ isOpen, toggle }) => (\r\n                    <>\r\n                        <span\r\n                            className={`shippingOption-additionalDescription ${\r\n                                isOpen\r\n                                    ? 'shippingOption-additionalDescription--expanded'\r\n                                    : 'shippingOption-additionalDescription--collapsed'\r\n                            }`}\r\n                        >\r\n                            {description}\r\n                        </span>\r\n                        {!isOpen && (\r\n                            <a className=\"shippingOption-readMore\" onClick={preventDefault(toggle)}>\r\n                                <TranslatedString id=\"common.show_more\" />\r\n                            </a>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </Toggle>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(ShippingOptionAdditionalDescription);\r\n","import { ShippingOption } from '@bigcommerce/checkout-sdk';\r\nimport React from 'react';\r\n\r\nimport { ShopperCurrency } from '../../currency';\r\n\r\nimport ShippingOptionAdditionalDescription from './ShippingOptionAdditionalDescription';\r\nimport './StaticShippingOption.scss';\r\n\r\ninterface StaticShippingOptionProps {\r\n    displayAdditionalInformation?: boolean;\r\n    method: ShippingOption;\r\n}\r\n\r\nconst StaticShippingOption: React.FunctionComponent<StaticShippingOptionProps> = ({\r\n    displayAdditionalInformation = true,\r\n    method,\r\n}) => {\r\n    return (\r\n        <div className=\"shippingOption shippingOption--alt\">\r\n            {method.imageUrl && (\r\n                <span className=\"shippingOption-figure\">\r\n                    <img\r\n                        alt={method.description}\r\n                        className=\"shippingOption-img\"\r\n                        src={method.imageUrl}\r\n                    />\r\n                </span>\r\n            )}\r\n            <span className=\"shippingOption-desc\">\r\n                {method.description}\r\n                {method.transitTime && (\r\n                    <span className=\"shippingOption-transitTime\">{method.transitTime}</span>\r\n                )}\r\n                {method.additionalDescription && displayAdditionalInformation && (\r\n                    <ShippingOptionAdditionalDescription\r\n                        description={method.additionalDescription}\r\n                    />\r\n                )}\r\n            </span>\r\n            <span className=\"shippingOption-price\">\r\n                <ShopperCurrency amount={method.cost} />\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StaticShippingOption;\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconSuccess: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconSuccess);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconInfo: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconInfo);\r\n","import classNames from 'classnames';\r\nimport React, { FunctionComponent, ReactNode } from 'react';\r\n\r\nimport { IconError, IconInfo, IconSuccess } from '../icon';\r\n\r\nexport interface AlertProps {\r\n    additionalClassName?: string;\r\n    icon?: ReactNode;\r\n    testId?: string;\r\n    type?: AlertType;\r\n}\r\n\r\nexport enum AlertType {\r\n    Error = 'error',\r\n    Info = 'info',\r\n    Success = 'success',\r\n    Warning = 'warning',\r\n}\r\n\r\nfunction renderDefaultIcon(type?: AlertType): ReactNode {\r\n    switch (type) {\r\n        case AlertType.Error:\r\n        case AlertType.Warning:\r\n            return <IconError />;\r\n\r\n        case AlertType.Success:\r\n            return <IconSuccess />;\r\n\r\n        case AlertType.Info:\r\n        default:\r\n            return <IconInfo />;\r\n    }\r\n}\r\n\r\nconst Alert: FunctionComponent<AlertProps> = ({\r\n    additionalClassName,\r\n    children,\r\n    icon,\r\n    testId,\r\n    type,\r\n}) => (\r\n    <div\r\n        className={classNames(\r\n            'alertBox',\r\n            additionalClassName,\r\n            { 'alertBox--info': type === AlertType.Info || !type },\r\n            { 'alertBox--error': type === AlertType.Error },\r\n            { 'alertBox--success': type === AlertType.Success },\r\n            { 'alertBox--warning': type === AlertType.Warning },\r\n        )}\r\n        data-test={testId}\r\n    >\r\n        <div className=\"alertBox-column alertBox-icon\">{icon || renderDefaultIcon(type)}</div>\r\n\r\n        <div aria-live=\"assertive\" className=\"alertBox-column alertBox-message\" role=\"alert\">\r\n            {children}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Alert;\r\n","import classNames from 'classnames';\r\nimport React, { ButtonHTMLAttributes, FunctionComponent } from 'react';\r\n\r\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n    isFullWidth?: boolean;\r\n    isLoading?: boolean;\r\n    size?: ButtonSize;\r\n    testId?: string;\r\n    variant?: ButtonVariant;\r\n}\r\n\r\nexport enum ButtonVariant {\r\n    Primary = 'primary',\r\n    Secondary = 'secondary',\r\n    Action = 'action',\r\n}\r\n\r\nexport enum ButtonSize {\r\n    Small = 'small',\r\n    Tiny = 'tiny',\r\n    Large = 'large',\r\n}\r\n\r\nfunction getClassName(\r\n    props: Pick<ButtonProps, 'className' | 'isFullWidth' | 'isLoading' | 'size' | 'variant'>,\r\n) {\r\n    const { className, isFullWidth, isLoading, size, variant } = props;\r\n\r\n    return classNames(\r\n        'button',\r\n        className,\r\n        { 'button--primary': variant === ButtonVariant.Primary },\r\n        { 'button--tertiary': variant === ButtonVariant.Secondary },\r\n        { 'button--action': variant === ButtonVariant.Action },\r\n        { 'button--small': size === ButtonSize.Small },\r\n        { 'button--tiny': size === ButtonSize.Tiny },\r\n        { 'button--large': size === ButtonSize.Large },\r\n        { 'button--slab': isFullWidth },\r\n        {\r\n            'optimizedCheckout-buttonPrimary':\r\n                variant === ButtonVariant.Primary || variant === ButtonVariant.Action,\r\n        },\r\n        { 'optimizedCheckout-buttonSecondary': variant === ButtonVariant.Secondary },\r\n        { 'is-loading': isLoading },\r\n    );\r\n}\r\n\r\nconst Button: FunctionComponent<ButtonProps> = ({\r\n    children,\r\n    className,\r\n    disabled,\r\n    isFullWidth,\r\n    isLoading,\r\n    size,\r\n    testId,\r\n    type,\r\n    variant,\r\n    ...rest\r\n}) => (\r\n    <button\r\n        {...rest}\r\n        className={getClassName({ className, isFullWidth, isLoading, size, variant })}\r\n        data-test={testId}\r\n        disabled={disabled || isLoading}\r\n        type={type || 'button'}\r\n    >\r\n        {children}\r\n    </button>\r\n);\r\n\r\nexport default Button;\r\n","import { Field, FieldConfig, FieldProps, getIn } from 'formik';\r\nimport { isDate, noop } from 'lodash';\r\nimport React, {\r\n    Component,\r\n    createElement,\r\n    FunctionComponent,\r\n    memo,\r\n    useCallback,\r\n    useMemo,\r\n} from 'react';\r\nimport shallowEqual from 'shallowequal';\r\n\r\nimport FormFieldContainer from './FormFieldContainer';\r\n\r\nexport interface BasicFormFieldProps extends FieldConfig {\r\n    additionalClassName?: string;\r\n    className?: string;\r\n    testId?: string;\r\n    onChange?(value: any): void;\r\n}\r\n\r\nconst BasicFormField: FunctionComponent<BasicFormFieldProps> = ({\r\n    additionalClassName,\r\n    className,\r\n    component,\r\n    render,\r\n    testId,\r\n    onChange,\r\n    ...rest\r\n}) => {\r\n    const renderInnerField = useCallback(\r\n        (props: FieldProps) => (\r\n            <InnerField\r\n                {...props}\r\n                additionalClassName={additionalClassName}\r\n                className={className}\r\n                component={component}\r\n                onChange={onChange}\r\n                render={render}\r\n                testId={testId}\r\n            />\r\n        ),\r\n        [additionalClassName, className, component, render, testId, onChange],\r\n    );\r\n\r\n    return <Field {...rest} render={renderInnerField} />;\r\n};\r\n\r\ntype InnerFieldProps = Omit<BasicFormFieldProps, keyof FieldConfig> & InnerFieldInputProps;\r\n\r\nconst InnerField: FunctionComponent<InnerFieldProps> = memo(\r\n    ({ additionalClassName, component, field, form, onChange, render, testId }) => {\r\n        const input = useMemo(\r\n            () => (\r\n                <InnerFieldInput\r\n                    component={component}\r\n                    field={field}\r\n                    form={form}\r\n                    onChange={onChange}\r\n                    render={render}\r\n                />\r\n            ),\r\n            [field, form, onChange, component, render],\r\n        );\r\n\r\n        return (\r\n            <FormFieldContainer\r\n                additionalClassName={additionalClassName}\r\n                hasError={getIn(form.errors, field.name)}\r\n                testId={testId}\r\n            >\r\n                {input}\r\n            </FormFieldContainer>\r\n        );\r\n    },\r\n    (\r\n        { form: prevForm, field: prevField, ...prevProps },\r\n        { form: nextForm, field: nextField, ...nextProps },\r\n    ) =>\r\n        shallowEqual(prevProps, nextProps) &&\r\n        shallowEqual(prevForm, nextForm) &&\r\n        shallowEqual(prevField, nextField),\r\n);\r\n\r\ntype InnerFieldInputProps = FieldProps &\r\n    Pick<FieldConfig, 'component' | 'render'> & {\r\n        onChange?(value: string): void;\r\n    };\r\n\r\nclass InnerFieldInput extends Component<InnerFieldInputProps> {\r\n    componentDidUpdate({ field: prevField }: InnerFieldInputProps) {\r\n        const {\r\n            field: { value },\r\n            onChange = noop,\r\n        } = this.props;\r\n        const comparableValue = isDate(value) ? value.getTime() : value;\r\n        const comparablePrevValue = isDate(prevField.value)\r\n            ? prevField.value.getTime()\r\n            : prevField.value;\r\n\r\n        if (comparableValue !== comparablePrevValue) {\r\n            onChange(value);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { component = 'input', field, render } = this.props;\r\n\r\n        if (render) {\r\n            return (render as any)(this.props);\r\n        }\r\n\r\n        if (typeof component === 'string') {\r\n            return createElement(component as any, field);\r\n        }\r\n\r\n        return createElement(component as any, this.props);\r\n    }\r\n}\r\n\r\nexport default memo(BasicFormField);\r\n","import { FieldProps } from 'formik';\r\nimport { kebabCase } from 'lodash';\r\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\r\n\r\nimport BasicFormField from './BasicFormField';\r\nimport CheckboxInput from './CheckboxInput';\r\nimport FormFieldError from './FormFieldError';\r\n\r\nexport interface CheckboxFormFieldProps {\r\n    additionalClassName?: string;\r\n    disabled?: boolean;\r\n    name: string;\r\n    id?: string;\r\n    labelContent: ReactNode;\r\n    onChange?(isChecked: boolean): void;\r\n    testId?: string;\r\n}\r\n\r\nconst CheckboxFormField: FunctionComponent<CheckboxFormFieldProps> = ({\r\n    additionalClassName,\r\n    disabled = false,\r\n    labelContent,\r\n    onChange,\r\n    name,\r\n    id,\r\n    testId,\r\n}) => {\r\n    const renderField = useCallback(\r\n        ({ field }: FieldProps) => (\r\n            <>\r\n                <CheckboxInput\r\n                    {...field}\r\n                    checked={!!field.value}\r\n                    disabled={disabled}\r\n                    id={id || field.name}\r\n                    label={labelContent}\r\n                    testId={testId}\r\n                />\r\n\r\n                <FormFieldError\r\n                    errorId={`${id ?? name}-field-error-message`}\r\n                    name={name}\r\n                    testId={`${kebabCase(name)}-field-error-message`}\r\n                />\r\n            </>\r\n        ),\r\n        [disabled, id, labelContent, name],\r\n    );\r\n\r\n    return (\r\n        <BasicFormField\r\n            additionalClassName={additionalClassName}\r\n            name={name}\r\n            onChange={onChange}\r\n            render={renderField}\r\n        />\r\n    );\r\n};\r\n\r\nexport default memo(CheckboxFormField);\r\n","import classNames from 'classnames';\r\nimport React, { forwardRef, ReactNode, Ref } from 'react';\r\n\r\nimport Input, { InputProps } from './Input';\r\nimport Label from './Label';\r\n\r\nexport interface CheckboxInputProps extends InputProps {\r\n    additionalClassName?: string;\r\n    label: ReactNode;\r\n    value: string;\r\n    checked: boolean;\r\n}\r\n\r\nconst CheckboxInput = forwardRef(\r\n    (\r\n        { additionalClassName, label, id, testId, ...rest }: CheckboxInputProps,\r\n        ref: Ref<HTMLInputElement>,\r\n    ) => (\r\n        <>\r\n            <Input\r\n                {...rest}\r\n                className={classNames(\r\n                    'form-checkbox',\r\n                    'optimizedCheckout-form-checkbox',\r\n                    additionalClassName,\r\n                )}\r\n                id={id}\r\n                ref={ref}\r\n                testId={testId}\r\n                type=\"checkbox\"\r\n            />\r\n            <Label htmlFor={id}>{label}</Label>\r\n        </>\r\n    ),\r\n);\r\n\r\nexport default CheckboxInput;\r\n","import classNames from 'classnames';\r\nimport React, { forwardRef, ReactNode, Ref } from 'react';\r\n\r\nimport Input, { InputProps } from './Input';\r\nimport Label from './Label';\r\n\r\nexport interface RadioInputProps extends InputProps {\r\n    additionalClassName?: string;\r\n    label: ReactNode;\r\n    value: string;\r\n    checked: boolean;\r\n}\r\n\r\nconst RadioInput = forwardRef(\r\n    (\r\n        { additionalClassName, label, value, checked, id, ...rest }: RadioInputProps,\r\n        ref: Ref<HTMLInputElement>,\r\n    ) => (\r\n        <>\r\n            <Input\r\n                {...rest}\r\n                checked={checked}\r\n                className={classNames(\r\n                    'form-radio',\r\n                    'optimizedCheckout-form-radio',\r\n                    additionalClassName,\r\n                )}\r\n                id={id}\r\n                ref={ref}\r\n                type=\"radio\"\r\n                value={value}\r\n            />\r\n            <Label htmlFor={id}>{label}</Label>\r\n        </>\r\n    ),\r\n);\r\n\r\nexport default RadioInput;\r\n","import { FormFieldItem } from '@bigcommerce/checkout-sdk';\r\nimport classNames from 'classnames';\r\nimport { isDate, noop } from 'lodash';\r\nimport React, { FunctionComponent, memo, useCallback } from 'react';\r\nimport ReactDatePicker from 'react-datepicker';\r\n\r\nimport { withDate, WithDateProps } from '@bigcommerce/checkout/locale';\r\n\r\nimport { IconChevronDown } from '../icon';\r\n\r\nimport CheckboxInput from './CheckboxInput';\r\nimport DynamicFormFieldType from './DynamicFormFieldType';\r\nimport { InputProps } from './Input';\r\nimport RadioInput from './RadioInput';\r\nimport TextArea from './TextArea';\r\nimport TextInput from './TextInput';\r\n\r\nexport interface DynamicInputProps extends InputProps {\r\n    id: string;\r\n    additionalClassName?: string;\r\n    value?: string | string[];\r\n    rows?: number;\r\n    fieldType?: DynamicFormFieldType;\r\n    options?: FormFieldItem[];\r\n    isFloatingLabelEnabled?: boolean;\r\n}\r\n\r\nconst DynamicInput: FunctionComponent<DynamicInputProps & WithDateProps> = ({\r\n    additionalClassName,\r\n    date,\r\n    fieldType,\r\n    id,\r\n    name,\r\n    onChange = noop,\r\n    options,\r\n    placeholder,\r\n    isFloatingLabelEnabled,\r\n    value,\r\n    ...rest\r\n}) => {\r\n    const { inputFormat } = date;\r\n    const handleDateChange = useCallback(\r\n        (dateValue, event) =>\r\n            onChange({\r\n                ...event,\r\n                target: {\r\n                    name,\r\n                    value: dateValue,\r\n                },\r\n            }),\r\n        [onChange, name],\r\n    );\r\n\r\n    switch (fieldType) {\r\n        case DynamicFormFieldType.dropdown:\r\n            return (\r\n                <>\r\n                    <div\r\n                        className={classNames(\r\n                            { 'dropdown-chevron': !isFloatingLabelEnabled },\r\n                            { 'floating-select-chevron': isFloatingLabelEnabled },\r\n                        )}>\r\n                        <IconChevronDown />\r\n                    </div>\r\n                    <select\r\n                        {...(rest as any)}\r\n                        className={classNames(\r\n                            { 'floating-select': isFloatingLabelEnabled },\r\n                            'form-select optimizedCheckout-form-select',\r\n                        )}\r\n                        data-test={`${id}-select`}\r\n                        id={id}\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        value={value === null ? '' : value}\r\n                    >\r\n                        {placeholder && <option value=\"\">{placeholder}</option>}\r\n                        {options &&\r\n                            options.map(({ label, value: optionValue }) => (\r\n                                <option key={optionValue} value={optionValue}>\r\n                                    {label}\r\n                                </option>\r\n                            ))}\r\n                    </select>\r\n                </>\r\n            );\r\n\r\n        case DynamicFormFieldType.radio:\r\n            if (!options || !options.length) {\r\n                return null;\r\n            }\r\n\r\n            return (\r\n                <>\r\n                    {options.map(({ label, value: optionValue }) => (\r\n                        <RadioInput\r\n                            {...rest}\r\n                            checked={optionValue === value}\r\n                            id={`${id}-${optionValue}`}\r\n                            key={optionValue}\r\n                            label={label}\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            testId={`${id}-${optionValue}-radio`}\r\n                            value={optionValue}\r\n                        />\r\n                    ))}\r\n                </>\r\n            );\r\n\r\n        case DynamicFormFieldType.checkbox:\r\n            if (!options || !options.length) {\r\n                return null;\r\n            }\r\n\r\n            return (\r\n                <>\r\n                    {options.map(({ label, value: optionValue }) => (\r\n                        <CheckboxInput\r\n                            {...rest}\r\n                            checked={Array.isArray(value) ? value.includes(optionValue) : false}\r\n                            id={`${id}-${optionValue}`}\r\n                            key={optionValue}\r\n                            label={label}\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            testId={`${id}-${optionValue}-checkbox`}\r\n                            value={optionValue}\r\n                        />\r\n                    ))}\r\n                </>\r\n            );\r\n\r\n        case DynamicFormFieldType.date:\r\n            return (\r\n                <ReactDatePicker\r\n                    {...(rest as any)}\r\n                    autoComplete=\"off\"\r\n                    // FIXME: we can avoid this by simply using onChangeRaw, but it's not being triggered properly\r\n                    // https://github.com/Hacker0x01/react-datepicker/issues/1357\r\n                    // onChangeRaw={ rest.onChange }\r\n                    calendarClassName=\"optimizedCheckout-contentPrimary\"\r\n                    className={classNames('form-input optimizedCheckout-form-input', {\r\n                        'floating-input': isFloatingLabelEnabled,\r\n                    })}\r\n                    dateFormat={inputFormat}\r\n                    maxDate={rest.max ? new Date(`${rest.max}T00:00:00Z`) : undefined}\r\n                    minDate={rest.min ? new Date(`${rest.min}T00:00:00Z`) : undefined}\r\n                    name={name}\r\n                    onChange={handleDateChange}\r\n                    placeholderText={inputFormat.toUpperCase()}\r\n                    popperClassName=\"optimizedCheckout-contentPrimary\"\r\n                    selected={isDate(value) ? value : undefined}\r\n                />\r\n            );\r\n\r\n        case DynamicFormFieldType.multiline:\r\n            return (\r\n                <TextArea\r\n                    {...(rest as any)}\r\n                    id={id}\r\n                    isFloatingLabelEnabled={isFloatingLabelEnabled}\r\n                    name={name}\r\n                    onChange={onChange}\r\n                    testId={`${id}-text`}\r\n                    type={fieldType}\r\n                    value={value}\r\n                />\r\n            );\r\n\r\n        default:\r\n            return (\r\n                <TextInput\r\n                    {...rest}\r\n                    id={id}\r\n                    isFloatingLabelEnabled={isFloatingLabelEnabled}\r\n                    name={name}\r\n                    onChange={onChange}\r\n                    placeholder={placeholder}\r\n                    testId={`${id}-${\r\n                        fieldType === DynamicFormFieldType.password ? 'password' : 'text'\r\n                    }`}\r\n                    type={fieldType}\r\n                    value={value}\r\n                />\r\n            );\r\n    }\r\n};\r\n\r\nexport default memo(withDate(DynamicInput));\r\n","import React, { FunctionComponent, memo, MouseEvent, useCallback } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport './MultiCheckboxControl.scss';\r\n\r\nexport interface MultiCheckboxControlProps {\r\n    testId?: string;\r\n    onSelectedAll(): void;\r\n    onSelectedNone(): void;\r\n}\r\n\r\nconst MultiCheckboxControl: FunctionComponent<MultiCheckboxControlProps> = ({\r\n    testId,\r\n    onSelectedAll,\r\n    onSelectedNone,\r\n}) => {\r\n    const handleSelectAllClick = useCallback(\r\n        (event: MouseEvent) => {\r\n            event.preventDefault();\r\n            onSelectedAll();\r\n        },\r\n        [onSelectedAll],\r\n    );\r\n\r\n    const handleSelectNoneClick = useCallback(\r\n        (event: MouseEvent) => {\r\n            event.preventDefault();\r\n            onSelectedNone();\r\n        },\r\n        [onSelectedNone],\r\n    );\r\n\r\n    return (\r\n        <ul className=\"multiCheckbox--controls\">\r\n            <li className=\"multiCheckbox--control\">\r\n                <TranslatedString id=\"address.select\" />\r\n            </li>\r\n\r\n            <li className=\"multiCheckbox--control\">\r\n                <a\r\n                    data-test={`${testId}Checkbox-all-button`}\r\n                    href=\"#\"\r\n                    onClick={handleSelectAllClick}\r\n                >\r\n                    <TranslatedString id=\"address.select_all\" />\r\n                </a>\r\n            </li>\r\n\r\n            <li className=\"multiCheckbox--control\">\r\n                <a\r\n                    data-test={`${testId}Checkbox-none-button`}\r\n                    href=\"#\"\r\n                    onClick={handleSelectNoneClick}\r\n                >\r\n                    <TranslatedString id=\"address.select_none\" />\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default memo(MultiCheckboxControl);\r\n","import { FormFieldItem } from '@bigcommerce/checkout-sdk';\r\nimport { FieldArray, FieldArrayRenderProps, getIn } from 'formik';\r\nimport { difference, kebabCase, noop, pick } from 'lodash';\r\nimport React, { ChangeEvent, FunctionComponent, memo, ReactNode, useCallback } from 'react';\r\n\r\nimport DynamicFormFieldType from './DynamicFormFieldType';\r\nimport DynamicInput from './DynamicInput';\r\nimport FormFieldContainer from './FormFieldContainer';\r\nimport FormFieldError from './FormFieldError';\r\nimport MultiCheckboxControl from './MultiCheckboxControl';\r\n\r\nexport interface CheckboxGroupFormFieldProps {\r\n    id: string;\r\n    label: ReactNode;\r\n    name: string;\r\n    options: FormFieldItem[];\r\n    onChange?(values: string[]): void;\r\n}\r\n\r\ntype MultiCheckboxFormFieldProps = CheckboxGroupFormFieldProps &\r\n    Pick<FieldArrayRenderProps, 'push' | 'remove' | 'pop' | 'form'>;\r\n\r\nconst MultiCheckboxFormField: FunctionComponent<MultiCheckboxFormFieldProps> = ({\r\n    form: { values, errors },\r\n    id,\r\n    label,\r\n    name,\r\n    onChange = noop,\r\n    options,\r\n    push,\r\n    remove,\r\n}) => {\r\n    const handleSelectAll = useCallback(() => {\r\n        const checkedValues: string[] = getIn(values, name) || [];\r\n\r\n        difference(\r\n            options.map(({ value }) => value),\r\n            checkedValues,\r\n        ).forEach((val) => push(val));\r\n\r\n        onChange(getIn(values, name));\r\n    }, [name, onChange, options, push, values]);\r\n\r\n    const handleSelectNone = useCallback(() => {\r\n        const checkedValues: string[] = getIn(values, name) || [];\r\n\r\n        checkedValues.forEach(() => remove(0));\r\n\r\n        onChange(getIn(values, name));\r\n    }, [name, onChange, remove, values]);\r\n\r\n    const handleInputChange = useCallback(\r\n        (event: ChangeEvent<HTMLInputElement>) => {\r\n            const checkedValues: string[] = getIn(values, name) || [];\r\n            const { value, checked } = event.target;\r\n\r\n            if (checked) {\r\n                push(value);\r\n            } else {\r\n                remove(checkedValues.indexOf(value));\r\n            }\r\n\r\n            onChange(getIn(values, name));\r\n        },\r\n        [name, onChange, push, remove, values],\r\n    );\r\n\r\n    return (\r\n        <FormFieldContainer hasError={getIn(errors, name) && getIn(errors, name).length}>\r\n            {label}\r\n\r\n            {options.length > 1 && (\r\n                <MultiCheckboxControl\r\n                    onSelectedAll={handleSelectAll}\r\n                    onSelectedNone={handleSelectNone}\r\n                    testId={id}\r\n                />\r\n            )}\r\n\r\n            <DynamicInput\r\n                fieldType={DynamicFormFieldType.checkbox}\r\n                id={id}\r\n                name={name}\r\n                onChange={handleInputChange}\r\n                options={options}\r\n                value={getIn(values, name) || []}\r\n            />\r\n\r\n            <FormFieldError\r\n                errorId={`${id ?? name}-field-error-message`}\r\n                name={name}\r\n                testId={`${kebabCase(name)}-field-error-message`}\r\n            />\r\n        </FormFieldContainer>\r\n    );\r\n};\r\n\r\nconst CheckboxGroupFormField: FunctionComponent<CheckboxGroupFormFieldProps> = ({\r\n    id,\r\n    label,\r\n    name,\r\n    onChange,\r\n    options,\r\n}) => {\r\n    const renderField = useCallback(\r\n        (renderProps: FieldArrayRenderProps) => (\r\n            <MultiCheckboxFormField\r\n                id={id}\r\n                label={label}\r\n                name={name}\r\n                onChange={onChange}\r\n                options={options}\r\n                {...pick(renderProps, ['form', 'pop', 'push', 'remove'])}\r\n            />\r\n        ),\r\n        [id, label, name, onChange, options],\r\n    );\r\n\r\n    return <FieldArray name={name} render={renderField} />;\r\n};\r\n\r\nexport default memo(CheckboxGroupFormField);\r\n","import { FormField as FormFieldType } from '@bigcommerce/checkout-sdk';\r\nimport classNames from 'classnames';\r\nimport { FieldProps } from 'formik';\r\nimport { includes } from 'lodash';\r\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useMemo } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport CheckboxGroupFormField from './CheckboxGroupFormField';\r\nimport DynamicFormFieldType from './DynamicFormFieldType';\r\nimport DynamicInput from './DynamicInput';\r\nimport FormField from './FormField';\r\nimport Label from './Label';\r\n\r\nexport interface DynamicFormFieldOption {\r\n    code: string;\r\n    name: string;\r\n}\r\n\r\nexport interface DynamicFormFieldProps {\r\n    field: FormFieldType;\r\n    inputId?: string;\r\n    extraClass?: string;\r\n    autocomplete?: string;\r\n    parentFieldName?: string;\r\n    placeholder?: string;\r\n    label?: ReactNode;\r\n    isFloatingLabelEnabled?: boolean;\r\n    onChange?(value: string | string[]): void;\r\n}\r\n\r\nconst DynamicFormField: FunctionComponent<DynamicFormFieldProps> = ({\r\n    field: {\r\n        fieldType,\r\n        type,\r\n        secret,\r\n        name,\r\n        label: fieldLabel,\r\n        required,\r\n        options,\r\n        max,\r\n        min,\r\n        maxLength,\r\n    },\r\n    parentFieldName,\r\n    onChange,\r\n    placeholder,\r\n    inputId,\r\n    autocomplete,\r\n    label,\r\n    extraClass,\r\n    isFloatingLabelEnabled,\r\n}) => {\r\n    const fieldInputId = inputId || name;\r\n    const fieldName = parentFieldName ? `${parentFieldName}.${name}` : name;\r\n    const isFloatingLabelSupportedFieldType = Boolean(\r\n        isFloatingLabelEnabled &&\r\n            (includes(['text', 'password', 'dropdown', 'date', 'multiline'], fieldType) ||\r\n                !fieldType),\r\n    );\r\n    const labelComponent = useMemo(\r\n        () => (\r\n            <Label\r\n                htmlFor={fieldInputId}\r\n                id={`${fieldInputId}-label`}\r\n                isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\r\n            >\r\n                {label || fieldLabel}\r\n                {!required && (\r\n                    <>\r\n                        {' '}\r\n                        <small className=\"optimizedCheckout-contentSecondary\">\r\n                            <TranslatedString id=\"common.optional_text\" />\r\n                        </small>\r\n                    </>\r\n                )}\r\n            </Label>\r\n        ),\r\n        [fieldInputId, fieldLabel, required, isFloatingLabelSupportedFieldType, label],\r\n    );\r\n\r\n    const dynamicFormFieldType = useMemo((): DynamicFormFieldType => {\r\n        if (fieldType === 'text') {\r\n            if (type === 'integer') {\r\n                return DynamicFormFieldType.number;\r\n            }\r\n\r\n            if (includes(name, 'phone') || includes(name, 'tel')) {\r\n                return DynamicFormFieldType.telephone;\r\n            }\r\n\r\n            return secret ? DynamicFormFieldType.password : DynamicFormFieldType.text;\r\n        }\r\n\r\n        return fieldType as DynamicFormFieldType;\r\n    }, [fieldType, type, secret, name]);\r\n\r\n    const renderInput = useCallback(\r\n        ({ field }: FieldProps<string>) => (\r\n            <DynamicInput\r\n                {...field}\r\n                aria-labelledby={`${fieldInputId}-label ${fieldInputId}-field-error-message`}\r\n                autoComplete={autocomplete}\r\n                fieldType={dynamicFormFieldType}\r\n                id={fieldInputId}\r\n                isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\r\n                max={max}\r\n                maxLength={maxLength || undefined}\r\n                min={min}\r\n                options={options && options.items}\r\n                placeholder={placeholder || (options && options.helperLabel)}\r\n                rows={options && (options as any).rows}\r\n            />\r\n        ),\r\n        [\r\n            fieldInputId,\r\n            max,\r\n            maxLength,\r\n            min,\r\n            options,\r\n            placeholder,\r\n            dynamicFormFieldType,\r\n            autocomplete,\r\n        ],\r\n    );\r\n\r\n    return (\r\n        <div\r\n            className={classNames(\r\n                'dynamic-form-field',\r\n                { 'floating-form-field': isFloatingLabelSupportedFieldType },\r\n                extraClass,\r\n            )}\r\n        >\r\n            {fieldType === DynamicFormFieldType.checkbox ? (\r\n                <CheckboxGroupFormField\r\n                    id={fieldInputId}\r\n                    label={labelComponent}\r\n                    name={fieldName}\r\n                    onChange={onChange}\r\n                    options={(options && options.items) || []}\r\n                />\r\n            ) : (\r\n                <FormField\r\n                    id={fieldInputId}\r\n                    input={renderInput}\r\n                    isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\r\n                    label={labelComponent}\r\n                    name={fieldName}\r\n                    onChange={onChange}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(DynamicFormField);\r\n","enum DynamicFormFieldType {\r\n    telephone = 'tel',\r\n    dropdown = 'dropdown',\r\n    number = 'number',\r\n    password = 'password',\r\n    checkbox = 'checkbox',\r\n    multiline = 'multiline',\r\n    date = 'date',\r\n    radio = 'radio',\r\n    text = 'text',\r\n}\r\n\r\nexport default DynamicFormFieldType;\r\n","import classNames from 'classnames';\r\nimport React, { FieldsetHTMLAttributes, forwardRef, ReactNode, Ref } from 'react';\r\n\r\nexport interface FieldsetProps extends FieldsetHTMLAttributes<HTMLFieldSetElement> {\r\n    additionalClassName?: string;\r\n    testId?: string;\r\n    legend?: ReactNode;\r\n}\r\n\r\nconst Fieldset = forwardRef(\r\n    (\r\n        { additionalClassName, children, className, legend, testId, ...rest }: FieldsetProps,\r\n        ref: Ref<HTMLFieldSetElement>,\r\n    ) => (\r\n        <fieldset\r\n            {...rest}\r\n            className={className || classNames('form-fieldset', additionalClassName)}\r\n            data-test={testId}\r\n            ref={ref}\r\n        >\r\n            {legend}\r\n\r\n            <div className=\"form-body\">{children}</div>\r\n        </fieldset>\r\n    ),\r\n);\r\n\r\nexport default Fieldset;\r\n","import { memoizeOne } from '@bigcommerce/memoize';\r\nimport { Form as FormikForm, FormikFormProps } from 'formik';\r\nimport { values } from 'lodash';\r\nimport React, { createRef, FunctionComponent, memo, useCallback, useRef } from 'react';\r\n\r\nimport { FormContextType, FormProvider } from '@bigcommerce/checkout/ui';\r\n\r\nexport interface FormProps extends FormikFormProps {\r\n    testId?: string;\r\n}\r\n\r\nconst Form: FunctionComponent<FormProps> = ({ className, testId, ...rest }) => {\r\n    const ref = useRef({ containerRef: createRef<HTMLDivElement>() });\r\n\r\n    const focusOnError = () => {\r\n        const { current } = ref.current.containerRef;\r\n\r\n        if (!current) {\r\n            return;\r\n        }\r\n\r\n        const errorInputSelectors = [\r\n            '.form-field--error input',\r\n            '.form-field--error textarea',\r\n            '.form-field--error select',\r\n        ];\r\n\r\n        const erroredFormField = current.querySelector<HTMLElement>(errorInputSelectors.join(', '));\r\n\r\n        if (erroredFormField) {\r\n            erroredFormField.focus({ preventScroll: true });\r\n\r\n            try {\r\n                erroredFormField.offsetParent?.scrollIntoView({\r\n                    behavior: 'smooth',\r\n                    block: 'center',\r\n                    inline: 'center',\r\n                });\r\n            } catch {\r\n                erroredFormField.offsetParent?.scrollIntoView();\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleSubmitCapture = useCallback(\r\n        memoizeOne((setSubmitted: FormContextType['setSubmitted']) => {\r\n            return () => {\r\n                setSubmitted(true);\r\n\r\n                // use timeout to allow Formik validation to happen\r\n                setTimeout(() => focusOnError());\r\n            };\r\n        }),\r\n        [focusOnError],\r\n    );\r\n\r\n    const renderContent = useCallback(\r\n        memoizeOne(({ setSubmitted }: FormContextType) => {\r\n            return (\r\n                <div ref={ref.current.containerRef}>\r\n                    <FormikForm\r\n                        {...rest}\r\n                        className={className}\r\n                        data-test={testId}\r\n                        noValidate\r\n                        onSubmitCapture={handleSubmitCapture(setSubmitted)}\r\n                    />\r\n                </div>\r\n            );\r\n        }),\r\n        [className, handleSubmitCapture, testId, ...values(rest)],\r\n    );\r\n\r\n    return <FormProvider>{renderContent}</FormProvider>;\r\n};\r\n\r\nexport default memo(Form);\r\n","import { FieldProps } from 'formik';\r\nimport { kebabCase } from 'lodash';\r\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\r\n\r\nimport BasicFormField from './BasicFormField';\r\nimport FormFieldError from './FormFieldError';\r\nimport Label from './Label';\r\n\r\nexport interface FormFieldProps {\r\n    additionalClassName?: string;\r\n    name: string;\r\n    label?: ReactNode | ((fieldName: string) => ReactNode);\r\n    labelContent?: ReactNode;\r\n    footer?: ReactNode;\r\n    id?: string;\r\n    isFloatingLabelEnabled?: boolean;\r\n    input(field: FieldProps<string>): ReactNode;\r\n    onChange?(value: string): void;\r\n}\r\n\r\nconst FormField: FunctionComponent<FormFieldProps> = ({\r\n    additionalClassName,\r\n    labelContent,\r\n    label,\r\n    onChange,\r\n    footer,\r\n    input,\r\n    name,\r\n    id,\r\n    isFloatingLabelEnabled,\r\n}) => {\r\n    const renderField = useCallback(\r\n        (props) => (\r\n            <>\r\n                {isFloatingLabelEnabled && input(props)}\r\n\r\n                {label && (typeof label === 'function' ? label(name) : label)}\r\n                {labelContent && !label && (\r\n                    <Label\r\n                        htmlFor={name}\r\n                        id={`${id ?? name}-label`}\r\n                        isFloatingLabelEnabled={isFloatingLabelEnabled}\r\n                    >\r\n                        {labelContent}\r\n                    </Label>\r\n                )}\r\n\r\n                {!isFloatingLabelEnabled && input(props)}\r\n\r\n                <FormFieldError\r\n                    errorId={`${id ?? name}-field-error-message`}\r\n                    name={name}\r\n                    testId={`${kebabCase(name)}-field-error-message`}\r\n                />\r\n\r\n                {footer}\r\n            </>\r\n        ),\r\n        [label, labelContent, id, input, name, footer, isFloatingLabelEnabled],\r\n    );\r\n\r\n    return (\r\n        <BasicFormField\r\n            additionalClassName={additionalClassName}\r\n            name={name}\r\n            onChange={onChange}\r\n            render={renderField}\r\n        />\r\n    );\r\n};\r\n\r\nexport default memo(FormField);\r\n","import classNames from 'classnames';\r\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\r\n\r\nimport { FormContext } from '@bigcommerce/checkout/ui';\r\n\r\nexport interface FormFieldContainerProps {\r\n    additionalClassName?: string;\r\n    children: ReactNode;\r\n    className?: string;\r\n    hasError?: boolean;\r\n    testId?: string;\r\n}\r\n\r\nconst FormFieldContainer: FunctionComponent<FormFieldContainerProps> = ({\r\n    additionalClassName,\r\n    children,\r\n    className,\r\n    hasError,\r\n    testId,\r\n}) => (\r\n    <FormContext.Consumer>\r\n        {({ isSubmitted }) => (\r\n            <div\r\n                className={\r\n                    className ||\r\n                    classNames('form-field', additionalClassName, {\r\n                        'form-field--error': hasError && isSubmitted,\r\n                    })\r\n                }\r\n                data-test={testId}\r\n            >\r\n                {children}\r\n            </div>\r\n        )}\r\n    </FormContext.Consumer>\r\n);\r\n\r\nexport default memo(FormFieldContainer);\r\n","import { ErrorMessage } from 'formik';\r\nimport React, { FunctionComponent, memo, useCallback } from 'react';\r\n\r\nimport { FormContext } from '@bigcommerce/checkout/ui';\r\n\r\nexport interface FormFieldErrorProps {\r\n    name: string;\r\n    testId?: string;\r\n    errorId: string;\r\n}\r\n\r\nconst FormFieldError: FunctionComponent<FormFieldErrorProps> = ({ name, testId, errorId }) => {\r\n    const renderMessage = useCallback(\r\n        (message: string) => (\r\n            <ul className=\"form-field-errors\" data-test={testId}>\r\n                <li className=\"form-field-error\">\r\n                    <label\r\n                        aria-live=\"polite\"\r\n                        className=\"form-inlineMessage\"\r\n                        htmlFor={name}\r\n                        id={errorId}\r\n                        role=\"alert\"\r\n                    >\r\n                        {message}\r\n                    </label>\r\n                </li>\r\n            </ul>\r\n        ),\r\n        [errorId, name, testId],\r\n    );\r\n\r\n    return (\r\n        <FormContext.Consumer>\r\n            {({ isSubmitted }) =>\r\n                isSubmitted && <ErrorMessage name={name} render={renderMessage} />\r\n            }\r\n        </FormContext.Consumer>\r\n    );\r\n};\r\n\r\nexport default memo(FormFieldError);\r\n","import classNames from 'classnames';\r\nimport { includes } from 'lodash';\r\nimport React, { forwardRef, InputHTMLAttributes, Ref } from 'react';\r\n\r\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n    testId?: string;\r\n    isFloatingLabelEnabled?: boolean;\r\n}\r\n\r\nconst Input = forwardRef(\r\n    (\r\n        { className, testId, placeholder, name, isFloatingLabelEnabled, ...rest }: InputProps,\r\n        ref: Ref<HTMLInputElement>,\r\n    ) => {\r\n        const floatingLabelDisabledFieldNames = ['orderComment', 'redeemableCode'];\r\n\r\n        return (\r\n            <input\r\n                {...{\r\n                    ...rest,\r\n                    className: classNames(className, {\r\n                        'floating-input':\r\n                            isFloatingLabelEnabled && !includes(floatingLabelDisabledFieldNames, name),\r\n                    }),\r\n                    name,\r\n                }}\r\n                data-test={testId}\r\n                placeholder={isFloatingLabelEnabled ? ' ' : placeholder}\r\n                ref={ref}\r\n            />\r\n        );\r\n    },\r\n);\r\n\r\nexport default Input;\r\n","import classNames from 'classnames';\r\nimport React, { FunctionComponent, LabelHTMLAttributes } from 'react';\r\n\r\nexport interface LabelProps extends LabelHTMLAttributes<HTMLLabelElement> {\r\n    testId?: string;\r\n    hidden?: boolean;\r\n    isFloatingLabelEnabled?: boolean;\r\n}\r\n\r\nconst Label: FunctionComponent<LabelProps> = ({\r\n    children,\r\n    className,\r\n    hidden,\r\n    testId,\r\n    isFloatingLabelEnabled,\r\n    ...rest\r\n}) => (\r\n    <label\r\n        { ...rest }\r\n        className={ classNames(\r\n            { 'floating-label': isFloatingLabelEnabled },\r\n            className || 'form-label',\r\n            { 'is-srOnly': hidden },\r\n            'optimizedCheckout-form-label'\r\n        ) }\r\n        data-test={ testId }\r\n    >\r\n        { children }\r\n    </label>\r\n);\r\n\r\nexport default Label;\r\n","import classNames from 'classnames';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nexport interface LegendProps extends React.HTMLAttributes<HTMLLegendElement> {\r\n    hidden?: boolean;\r\n    testId?: string;\r\n}\r\n\r\nconst Legend: FunctionComponent<LegendProps> = ({\r\n    children,\r\n    className,\r\n    hidden,\r\n    testId,\r\n    ...rest\r\n}) => (\r\n    <legend\r\n        {...rest}\r\n        className={classNames(\r\n            className || 'form-legend',\r\n            { 'is-srOnly': hidden },\r\n            { 'optimizedCheckout-headingSecondary': !hidden },\r\n        )}\r\n        data-test={testId}\r\n    >\r\n        {children}\r\n    </legend>\r\n);\r\n\r\nexport default Legend;\r\n","import classNames from 'classnames';\r\nimport React, { forwardRef, Ref, TextareaHTMLAttributes } from 'react';\r\n\r\nexport interface TextAreaProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {\r\n    additionalClassName?: string;\r\n    testId?: string;\r\n    isFloatingLabelEnabled?: boolean;\r\n}\r\n\r\nconst TextArea = forwardRef(\r\n    (\r\n        { additionalClassName, testId, className, isFloatingLabelEnabled, ...rest }: TextAreaProps,\r\n        ref: Ref<HTMLTextAreaElement>,\r\n    ) => {\r\n        return (\r\n            <textarea\r\n                {...rest}\r\n                className={\r\n                    className ||\r\n                    classNames(\r\n                        { 'floating-textarea': isFloatingLabelEnabled },\r\n                        'form-input',\r\n                        'optimizedCheckout-form-input',\r\n                        additionalClassName,\r\n                    )\r\n                }\r\n                data-test={testId}\r\n                ref={ref}\r\n            />\r\n        );\r\n    },\r\n);\r\n\r\nexport default TextArea;\r\n","import classNames from 'classnames';\r\nimport React, { forwardRef, Ref } from 'react';\r\n\r\nimport Input, { InputProps } from './Input';\r\n\r\nexport interface TextInputProps extends InputProps {\r\n    additionalClassName?: string;\r\n    appearFocused?: boolean;\r\n    type?: 'text' | 'password' | 'tel' | 'email' | 'number';\r\n    isFloatingLabelEnabled?: boolean;\r\n}\r\n\r\nconst TextInput = forwardRef(\r\n    (\r\n        {\r\n            additionalClassName,\r\n            isFloatingLabelEnabled,\r\n            appearFocused,\r\n            type = 'text',\r\n            ...rest\r\n        }: TextInputProps,\r\n        ref: Ref<HTMLInputElement>,\r\n    ) => (\r\n        <Input\r\n            {...rest}\r\n            className={classNames(\r\n                'form-input',\r\n                'optimizedCheckout-form-input',\r\n                { 'form-input--focus': appearFocused },\r\n                { 'optimizedCheckout-form-input--focus': appearFocused },\r\n                additionalClassName,\r\n            )}\r\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\r\n            ref={ref}\r\n            type={type}\r\n        />\r\n    ),\r\n);\r\n\r\nexport default TextInput;\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconBolt: FunctionComponent = () => (\r\n    <svg\r\n        aria-labelledby=\"iconCardBoltTitle\"\r\n        data-test=\"bolt-icon\"\r\n        height=\"12\"\r\n        role=\"img\"\r\n        viewBox=\"0 0 12 12\"\r\n        width=\"12\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n        <title id=\"iconCardBoltTitle\">Bolt</title>\r\n        <path d=\"M0 7.502h7.5v4.5L12 4.502H4.5V0z\" fill=\"#FFFFFF\" id=\"mark\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconBolt);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconChevronDown: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconChevronDown);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconClose: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconClose);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconError: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconError);\r\n","import classNames from 'classnames';\r\nimport React, { ComponentType, memo } from 'react';\r\n\r\nexport enum IconSize {\r\n    Regular = 'regular',\r\n    Small = 'small',\r\n    Medium = 'medium',\r\n    Large = 'large',\r\n}\r\n\r\nexport interface IconProps {\r\n    additionalClassName?: string;\r\n    size?: IconSize;\r\n    testId?: string;\r\n}\r\n\r\nexport default function withIconContainer<TProps extends Record<string, any>>(\r\n    OriginalComponent: ComponentType<TProps>,\r\n): ComponentType<TProps & IconProps> {\r\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\r\n        <div\r\n            className={classNames(\r\n                'icon',\r\n                additionalClassName,\r\n                size === IconSize.Small ? 'icon--small' : null,\r\n                size === IconSize.Large ? 'icon--large' : null,\r\n                size === IconSize.Medium ? 'icon--medium' : null,\r\n            )}\r\n            data-test={testId}\r\n        >\r\n            <OriginalComponent {...(rest as TProps)} />\r\n        </div>\r\n    ));\r\n}\r\n","import React, { FunctionComponent, ReactNode, Suspense } from 'react';\r\n\r\nimport { ErrorBoundary } from '@bigcommerce/checkout/error-handling-utils';\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport './LazyContainer.scss';\r\nimport LoadingSpinner from './LoadingSpinner';\r\n\r\nexport interface LazyContainerProps {\r\n    children: ReactNode;\r\n    loadingSkeleton?: ReactNode;\r\n}\r\n\r\nconst filterError = (error: Error) => error.name === 'ChunkLoadError';\r\n\r\nconst LazyContainer: FunctionComponent<LazyContainerProps> = ({ loadingSkeleton, children }) => (\r\n    <ErrorBoundary\r\n        fallback={\r\n            <div className=\"lazyContainer-error\">\r\n                <TranslatedString id=\"common.unstable_network_error\" />\r\n            </div>\r\n        }\r\n        filter={filterError}\r\n    >\r\n        <Suspense fallback={loadingSkeleton || <LoadingSpinner isLoading />}>{children}</Suspense>\r\n    </ErrorBoundary>\r\n);\r\n\r\nexport default LazyContainer;\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport LoadingSpinner from './LoadingSpinner';\r\n\r\nexport interface LoadingOverlayProps {\r\n    isLoading: boolean;\r\n    hideContentWhenLoading?: boolean;\r\n    unmountContentWhenLoading?: boolean;\r\n}\r\n\r\nconst LoadingOverlay: FunctionComponent<LoadingOverlayProps> = ({\r\n    children,\r\n    hideContentWhenLoading,\r\n    unmountContentWhenLoading,\r\n    isLoading,\r\n}) => {\r\n    if (hideContentWhenLoading || unmountContentWhenLoading) {\r\n        return (\r\n            <>\r\n                <LoadingSpinner isLoading={isLoading} />\r\n                {unmountContentWhenLoading && isLoading ? null : (\r\n                    <div\r\n                        style={{\r\n                            display: hideContentWhenLoading && isLoading ? 'none' : undefined,\r\n                        }}\r\n                    >\r\n                        {children}\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"loadingOverlay-container\">\r\n            {children}\r\n            {isLoading && <div className=\"loadingOverlay optimizedCheckout-overlay\" />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadingOverlay;\r\n","import React, { FunctionComponent, memo } from 'react';\r\n\r\nexport interface LoadingSpinnerProps {\r\n    isLoading: boolean;\r\n}\r\n\r\nconst LoadingSpinner: FunctionComponent<LoadingSpinnerProps> = ({ isLoading }) => {\r\n    if (!isLoading) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"loadingSpinner loadingOverlay-container\" style={{ height: 100 }}>\r\n            <div className=\"loadingOverlay optimizedCheckout-overlay\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(LoadingSpinner);\r\n","import classNames from 'classnames';\r\nimport { noop } from 'lodash';\r\nimport React, { FunctionComponent, KeyboardEvent, MouseEvent, ReactNode, useCallback } from 'react';\r\nimport ReactModal from 'react-modal';\r\nimport { Omit } from 'utility-types';\r\n\r\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\r\n\r\nimport { IconClose } from '../icon';\r\n\r\nexport type ModalProps = Omit<\r\n    ReactModal.Props,\r\n    'bodyOpenClassName' | 'className' | 'closeTimeoutMS' | 'overlayClassName'\r\n> & {\r\n    children: ReactNode;\r\n    closeButtonLabel?: string | ReactNode;\r\n    footer?: ReactNode;\r\n    header?: ReactNode;\r\n    additionalHeaderClassName?: string;\r\n    additionalBodyClassName?: string;\r\n    additionalModalClassName?: string;\r\n    shouldShowCloseButton?: boolean;\r\n};\r\n\r\nconst Modal: FunctionComponent<ModalProps> = ({\r\n    children,\r\n    closeButtonLabel = 'Close',\r\n    footer,\r\n    header,\r\n    additionalHeaderClassName,\r\n    additionalBodyClassName,\r\n    additionalModalClassName,\r\n    onRequestClose = noop,\r\n    shouldShowCloseButton = false,\r\n    ...rest\r\n}) => {\r\n    const handleClose = useCallback(\r\n        (event: MouseEvent | KeyboardEvent) => {\r\n            onRequestClose(event);\r\n        },\r\n        [onRequestClose],\r\n    );\r\n\r\n    return (\r\n        <ReactModal\r\n            {...rest}\r\n            ariaHideApp={process.env.NODE_ENV !== 'test'}\r\n            bodyOpenClassName=\"has-activeModal\"\r\n            className={{\r\n                base: classNames(\r\n                    'modal optimizedCheckout-contentPrimary',\r\n                    additionalModalClassName,\r\n                ),\r\n                afterOpen: 'modal--afterOpen',\r\n                beforeClose: 'modal--beforeClose',\r\n            }}\r\n            closeTimeoutMS={200}\r\n            onRequestClose={onRequestClose}\r\n            overlayClassName={{\r\n                base: 'modalOverlay',\r\n                afterOpen: 'modalOverlay--afterOpen',\r\n                beforeClose: 'modalOverlay--beforeClose',\r\n            }}\r\n            shouldCloseOnEsc={true}\r\n            shouldCloseOnOverlayClick={false}\r\n        >\r\n            <div className={classNames('modal-header', additionalHeaderClassName)}>\r\n                {header}\r\n\r\n                {shouldShowCloseButton && (\r\n                     \r\n                    <a\r\n                        className=\"modal-close\"\r\n                        data-test=\"modal-close-button\"\r\n                        href=\"#\"\r\n                        onClick={preventDefault(handleClose)}\r\n                    >\r\n                        {closeButtonLabel && <span className=\"is-srOnly\">{closeButtonLabel}</span>}\r\n\r\n                        <IconClose />\r\n                    </a>\r\n                )}\r\n            </div>\r\n\r\n            <div\r\n                className={classNames('modal-body', additionalBodyClassName)}\r\n                data-test=\"modal-body\"\r\n            >\r\n                {children}\r\n            </div>\r\n\r\n            {/* <div className=\"modal-footer\" data-test=\"modal-footer\">\r\n                {footer}\r\n            </div> */}\r\n\r\n            {Boolean(footer) && (\r\n                <div className=\"modal-footer\" data-test=\"modal-footer\">\r\n                    {footer}\r\n                </div>\r\n            )}\r\n        </ReactModal>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import classNames from 'classnames';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\ninterface ModalHeaderProps {\r\n    children: React.ReactNode;\r\n    additionalClassName?: string;\r\n}\r\n\r\nconst ModalHeader: FunctionComponent<ModalHeaderProps> = ({ children, additionalClassName }) => (\r\n    <h2\r\n        className={classNames(\r\n            'modal-header-title optimizedCheckout-headingSecondary',\r\n            additionalClassName,\r\n        )}\r\n        data-test=\"modal-heading\"\r\n    >\r\n        {children}\r\n    </h2>\r\n);\r\n\r\nexport default ModalHeader;\r\n","import React, { FunctionComponent, memo } from 'react';\r\nimport Media, { MediaQueryObject, MultiQueryProps } from 'react-media';\r\n\r\nimport { MOBILE_MAX_WIDTH } from './breakpoints';\r\n\r\nconst queries = {\r\n    print: 'print',\r\n    mobile: `screen and (max-width: ${MOBILE_MAX_WIDTH}px)`,\r\n};\r\n\r\nconst ViewPicker: FunctionComponent<Pick<MultiQueryProps<MediaQueryObject>, 'children'>> = ({\r\n    children,\r\n}) => {\r\n    return <Media queries={queries}>{children}</Media>;\r\n};\r\n\r\nexport default memo(ViewPicker);\r\n","import React, { FunctionComponent, memo } from 'react';\r\n\r\nimport ViewPicker from './ViewPicker';\r\n\r\nconst MobileView: FunctionComponent<{ children(matched: boolean): React.ReactNode }> = ({\r\n    children,\r\n}) => {\r\n    return (\r\n        <ViewPicker>\r\n            {(matches: { mobile: boolean }) => {\r\n                return children(matches.mobile);\r\n            }}\r\n        </ViewPicker>\r\n    );\r\n};\r\n\r\nexport default memo(MobileView);\r\n","// These values have to match with screensizes.scss\r\nexport const MOBILE_MAX_WIDTH = 968;\r\nexport const SMALL_SCREEN_MAX_WIDTH = 551;\r\n","import { MOBILE_MAX_WIDTH } from './breakpoints';\r\n\r\nlet query: MediaQueryList;\r\n\r\nexport default function isMobileView() {\r\n    query = window.matchMedia(`(max-width: ${MOBILE_MAX_WIDTH}px)`);\r\n\r\n    return query.matches;\r\n}\r\n","import { Component, ReactNode } from 'react';\r\n\r\nexport interface ToggleProps {\r\n    openByDefault?: boolean;\r\n    children(props: any): ReactNode;\r\n}\r\n\r\nexport interface ToggleState {\r\n    isOpen: boolean;\r\n}\r\n\r\nexport default class Toggle extends Component<ToggleProps, ToggleState> {\r\n    constructor(props: ToggleProps) {\r\n        super(props);\r\n\r\n        this.state = { isOpen: !!props.openByDefault };\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { children } = this.props;\r\n        const { isOpen } = this.state;\r\n\r\n        return children({\r\n            isOpen,\r\n            toggle: this.toggle,\r\n        });\r\n    }\r\n\r\n    private toggle: (event: Event) => void = (event) => {\r\n        const { isOpen } = this.state;\r\n\r\n        event.preventDefault();\r\n\r\n        this.setState({ isOpen: !isOpen });\r\n    };\r\n}\r\n","import { kebabCase } from 'lodash';\r\n\r\nexport default function getAppliedStyles(\r\n    element: HTMLElement,\r\n    properties: string[],\r\n): { [key: string]: string } {\r\n    const declaration = window.getComputedStyle(element);\r\n\r\n    return properties.reduce(\r\n        (result, propertyName) => ({\r\n            ...result,\r\n            [propertyName]: declaration.getPropertyValue(kebabCase(propertyName)),\r\n        }),\r\n        {},\r\n    );\r\n}\r\n","export default function parseAnchor(text: string): string[] {\r\n    const div = document.createElement('div');\r\n\r\n    div.innerHTML = text;\r\n\r\n    const anchor = div.querySelector('a');\r\n\r\n    if (!anchor) {\r\n        return [];\r\n    }\r\n\r\n    const anchorSiblings = div.innerHTML.split(anchor.outerHTML);\r\n\r\n    return [anchorSiblings[0], anchor.text, anchorSiblings[1]];\r\n}\r\n","import { SyntheticEvent } from 'react';\r\n\r\nexport default function preventDefault<\r\n    TFunc extends (event: TEvent, ...args: any[]) => any,\r\n    TEvent extends SyntheticEvent,\r\n>(fn?: TFunc): (event: TEvent) => void {\r\n    return (event) => {\r\n        event.preventDefault();\r\n\r\n        if (fn) {\r\n            fn(event);\r\n        }\r\n    };\r\n}\r\n","import { Component, ReactNode } from 'react';\r\n\r\nimport ErrorLogger from './ErrorLogger';\r\n\r\nexport interface ErrorBoundaryProps {\r\n    children: ReactNode;\r\n    fallback?: ReactNode;\r\n    logger?: ErrorLogger;\r\n    filter?(error: Error): boolean;\r\n}\r\n\r\ninterface ErrorBoundaryState {\r\n    error?: Error;\r\n}\r\n\r\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\r\n    static getDerivedStateFromError(error: Error): ErrorBoundaryState {\r\n        return { error };\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/member-ordering\r\n    state: ErrorBoundaryState = {};\r\n\r\n    componentDidCatch(error: Error): void {\r\n        const { filter = () => true, logger } = this.props;\r\n\r\n        if (!filter(error)) {\r\n            throw error;\r\n        }\r\n\r\n        if (logger) {\r\n            logger.log(error);\r\n        }\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { children, fallback, filter = () => true } = this.props;\r\n\r\n        const { error } = this.state;\r\n\r\n        if (error && filter(error)) {\r\n            return fallback || null;\r\n        }\r\n\r\n        return children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import { BrowserOptions } from '@sentry/browser';\r\n\r\nexport default interface ErrorLogger {\r\n    /**\r\n     * Logs an error in, tagging it with an error code.\r\n     *\r\n     * @param error The error object to be logged\r\n     * @param tags The tags attached to the log entry\r\n     * @param level The level of the log\r\n     * @param meta Any extra meta data\r\n     */\r\n    log(error: Error, tags?: ErrorTags, level?: ErrorLevelType, meta?: ErrorMeta): void;\r\n}\r\n\r\nexport interface ErrorLoggerOptions {\r\n    errorTypes?: string[];\r\n    publicPath?: string;\r\n    sampleRate?: number;\r\n}\r\n\r\nexport interface ErrorLoggerServiceConfig {\r\n    sentry?: BrowserOptions;\r\n}\r\n\r\nexport interface ErrorTags {\r\n    /**\r\n     * A code that identifies uniquely each error type\r\n     */\r\n    errorCode: string;\r\n}\r\n\r\nexport interface ErrorMeta {\r\n    [key: string]: unknown;\r\n}\r\n\r\nexport enum ErrorLevelType {\r\n    Info = 'info',\r\n    Warning = 'warning',\r\n    Error = 'error',\r\n    Debug = 'debug',\r\n}\r\n","import { Cart } from '@bigcommerce/checkout-sdk';\r\n\r\n/**\r\n * Minimum charge amounts due to the Stripe documentation\r\n * https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts\r\n */\r\nenum stripeLinkMinAmount {\r\n    'USD' = 0.5,\r\n    'AED' = 2,\r\n    'AUD' = 0.5,\r\n    'BGN' = 1,\r\n    'BRL' = 0.5,\r\n    'CAD' = 0.5,\r\n    'CHF' = 0.5,\r\n    'CZK' = 15,\r\n    'DKK' = 2.5,\r\n    'EUR' = 0.5,\r\n    'GBP' = 0.3,\r\n    'HKD' = 4,\r\n    'HUF' = 175,\r\n    'INR' = 0.5,\r\n    'JPY' = 50,\r\n    'MXN' = 10,\r\n    'MYR' = 2,\r\n    'NOK' = 3,\r\n    'NZD' = 0.5,\r\n    'PLN' = 2,\r\n    'RON' = 2,\r\n    'SEK' = 3,\r\n    'SGD' = 0.5,\r\n    'THB' = 10,\r\n}\r\n\r\nconst isStripeLinkMinAmount = (code: string): code is keyof typeof stripeLinkMinAmount => {\r\n    return code in stripeLinkMinAmount;\r\n};\r\n\r\nconst shouldUseStripeLinkByMinimumAmount = (cart: Cart) => {\r\n    const {\r\n        currency: { code },\r\n        cartAmount,\r\n    } = cart;\r\n\r\n    if (isStripeLinkMinAmount(code) && cartAmount >= stripeLinkMinAmount[code]) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nexport default shouldUseStripeLinkByMinimumAmount;\r\n","import { isEmpty, pickBy } from 'lodash';\r\nimport React, { ComponentType, Context, FunctionComponent, memo, useContext } from 'react';\r\n\r\nimport InjectHoc from './InjectHoc';\r\n\r\nexport interface InjectHocOptions<TInjectedProps> {\r\n    displayNamePrefix?: string;\r\n    pickProps?(value: TInjectedProps[keyof TInjectedProps], key: keyof TInjectedProps): boolean;\r\n}\r\n\r\nexport default function createInjectHoc<\r\n    TInjectedProps extends object | undefined,\r\n    TPickedProps extends Partial<TInjectedProps> = TInjectedProps,\r\n>(\r\n    ContextComponent: Context<TInjectedProps>,\r\n    options?: InjectHocOptions<TInjectedProps>,\r\n): InjectHoc<NonNullable<TPickedProps>> {\r\n    return <TProps extends TPickedProps>(OriginalComponent: ComponentType<TProps>) => {\r\n        const { displayNamePrefix = '', pickProps = () => true } = options || {};\r\n\r\n        const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\r\n            <OriginalComponent {...props} />\r\n        ));\r\n\r\n        const DecoratedComponent = (props: Omit<TProps, keyof NonNullable<TPickedProps>>) => {\r\n            const context = useContext(ContextComponent);\r\n            const injectedProps = pickBy(context, (value, key) =>\r\n                pickProps(value, key as keyof TInjectedProps),\r\n            );\r\n\r\n            if (isEmpty(injectedProps)) {\r\n                return null;\r\n            }\r\n\r\n            const mergedProps = { ...injectedProps, ...props } as unknown as TProps;\r\n\r\n            return <InnerDecoratedComponent {...mergedProps} />;\r\n        };\r\n\r\n        if (displayNamePrefix) {\r\n            DecoratedComponent.displayName = `${displayNamePrefix}(${\r\n                OriginalComponent.displayName || OriginalComponent.name\r\n            })`;\r\n        }\r\n\r\n        return DecoratedComponent;\r\n    };\r\n}\r\n","import { CurrencyService, LanguageService } from '@bigcommerce/checkout-sdk';\r\nimport { createContext, useContext } from 'react';\r\n\r\nexport interface LocaleContextType {\r\n    language: LanguageService;\r\n    date?: {\r\n        inputFormat: string;\r\n    };\r\n    currency?: CurrencyService;\r\n}\r\n\r\nconst LocaleContext = createContext<LocaleContextType | undefined>(undefined);\r\n\r\nexport default LocaleContext;\r\n\r\nexport function useLocale() {\r\n    const context = useContext(LocaleContext);\r\n\r\n    if (!context) {\r\n        throw new Error('useLocale must be used within a LocaleContextProvider');\r\n    }\r\n\r\n    return context;\r\n}\r\n","import { CheckoutService, createCurrencyService, StoreConfig } from '@bigcommerce/checkout-sdk';\r\nimport { memoizeOne } from '@bigcommerce/memoize';\r\nimport React, { Component, ReactNode } from 'react';\r\n\r\nimport getLanguageService from './getLanguageService';\r\nimport LocaleContext from './LocaleContext';\r\n\r\nexport interface LocaleProviderProps {\r\n    checkoutService: CheckoutService;\r\n}\r\n\r\nexport interface LocaleProviderState {\r\n    config?: StoreConfig;\r\n}\r\n\r\nclass LocaleProvider extends Component<LocaleProviderProps> {\r\n    state: Readonly<LocaleProviderState> = {};\r\n\r\n    private languageService = getLanguageService();\r\n    private unsubscribe?: () => void;\r\n\r\n    private getContextValue = memoizeOne((config?: StoreConfig) => {\r\n        return {\r\n            currency: config ? createCurrencyService(config) : undefined,\r\n            date: config\r\n                ? {\r\n                      inputFormat: config.inputDateFormat,\r\n                  }\r\n                : undefined,\r\n            language: this.languageService,\r\n        };\r\n    });\r\n\r\n    componentDidMount(): void {\r\n        const { checkoutService } = this.props;\r\n\r\n        this.unsubscribe = checkoutService.subscribe(\r\n            ({ data }) => {\r\n                this.setState({ config: data.getConfig() });\r\n            },\r\n            ({ data }) => data.getConfig(),\r\n        );\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        if (this.unsubscribe) {\r\n            this.unsubscribe();\r\n            this.unsubscribe = undefined;\r\n        }\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { children } = this.props;\r\n        const { config } = this.state;\r\n\r\n        return (\r\n            <LocaleContext.Provider value={this.getContextValue(config)}>\r\n                {children}\r\n            </LocaleContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LocaleProvider;\r\n","import DOMPurify from 'dompurify';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nimport { useLocale } from './LocaleContext';\r\n\r\nexport interface TranslatedHtmlProps {\r\n    id: string;\r\n    data?: any;\r\n}\r\n\r\nexport const TranslatedHtml: FunctionComponent<TranslatedHtmlProps> = ({ data, id }) => {\r\n    const { language } = useLocale();\r\n\r\n    return (\r\n        <span\r\n            dangerouslySetInnerHTML={{\r\n                __html: DOMPurify.sanitize(language.translate(id, data), { ADD_ATTR: ['target'] }),\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default TranslatedHtml;\r\n","import React, { FunctionComponent, MouseEventHandler } from 'react';\r\n\r\nimport { parseAnchor, preventDefault } from '@bigcommerce/checkout/dom-utils';\r\n\r\nimport { useLocale } from './LocaleContext';\r\nimport { TranslatedStringProps } from './TranslatedString';\r\n\r\nexport type TranslatedLinkProps = TranslatedStringProps & {\r\n    testId?: string;\r\n    onClick: MouseEventHandler;\r\n};\r\n\r\nconst TranslatedLink: FunctionComponent<TranslatedLinkProps> = ({ data, id, onClick, testId }) => {\r\n    const { language } = useLocale();\r\n    const translatedString = language.translate(id, data);\r\n    const parsedString = parseAnchor(translatedString);\r\n\r\n    return parsedString.length ? (\r\n        <>\r\n            {parsedString[0]}\r\n            <a data-test={testId} href=\"#\" onClick={preventDefault(onClick)}>\r\n                {parsedString[1]}\r\n            </a>\r\n            {parsedString[2]}\r\n        </>\r\n    ) : (\r\n        <>{translatedString}</>\r\n    );\r\n};\r\n\r\nexport default TranslatedLink;\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { useLocale } from './LocaleContext';\r\n\r\nexport interface TranslatedStringProps {\r\n    id: string;\r\n    data?: any;\r\n}\r\n\r\nconst TranslatedString: FunctionComponent<TranslatedStringProps> = ({ data, id }) => {\r\n    const { language } = useLocale();\r\n\r\n    return <>{language.translate(id, data)}</>;\r\n};\r\n\r\nexport default TranslatedString;\r\n","import FALLBACK_TRANSLATIONS from './en.json';\r\n\r\nexport const FALLBACK_LOCALE = 'en';\r\n\r\nexport { FALLBACK_TRANSLATIONS };\r\n","import { createLanguageService, LanguageConfig, LanguageService } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { FALLBACK_LOCALE, FALLBACK_TRANSLATIONS } from './translations';\r\n\r\nlet languageService: LanguageService | undefined;\r\n\r\nexport default function getLanguageService(): LanguageService {\r\n    languageService =\r\n        languageService ??\r\n        createLanguageService({\r\n            fallbackLocale: FALLBACK_LOCALE,\r\n            fallbackTranslations: FALLBACK_TRANSLATIONS,\r\n        });\r\n\r\n    return languageService;\r\n}\r\n\r\nexport type InitializeLanguageService = typeof initializeLanguageService;\r\n\r\nexport function initializeLanguageService(config: LanguageConfig): LanguageService {\r\n    languageService = createLanguageService({\r\n        ...config,\r\n        defaultLocale: config.locale,\r\n        defaultTranslations: config.defaultTranslations,\r\n        fallbackLocale: FALLBACK_LOCALE,\r\n        fallbackTranslations: FALLBACK_TRANSLATIONS,\r\n    });\r\n\r\n    return languageService;\r\n}\r\n","import { Address, Country } from '@bigcommerce/checkout-sdk';\r\nimport { find, isEmpty } from 'lodash';\r\n\r\ninterface LocalizedGeography {\r\n    localizedCountry: string;\r\n    localizedProvince: string;\r\n}\r\n\r\nconst localizeAddress = <T1 extends Address>(\r\n    address: T1,\r\n    countries?: Country[],\r\n): T1 & LocalizedGeography => {\r\n    const country = find(countries, { code: address.countryCode });\r\n    const states = !country || isEmpty(country.subdivisions) ? [] : country.subdivisions;\r\n    const state = find(states, { code: address.stateOrProvinceCode });\r\n\r\n    return {\r\n        ...address,\r\n        localizedCountry: country ? country.name : address.country,\r\n        localizedProvince: state ? state.name : address.stateOrProvince,\r\n    };\r\n};\r\n\r\nexport default localizeAddress;\r\n","import { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\r\n\r\nimport LocaleContext from './LocaleContext';\r\n\r\nexport interface WithDateProps {\r\n    date: {\r\n        inputFormat: string;\r\n    };\r\n}\r\n\r\nconst withDate: InjectHoc<WithDateProps> = createInjectHoc(LocaleContext, {\r\n    displayNamePrefix: 'withDate',\r\n    pickProps: (value, key) => key === 'date' && !!value,\r\n});\r\n\r\nexport default withDate;\r\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\r\n\r\nimport LocaleContext from './LocaleContext';\r\n\r\nexport interface WithLanguageProps {\r\n    language: LanguageService;\r\n}\r\n\r\nconst withLanguage: InjectHoc<WithLanguageProps> = createInjectHoc(LocaleContext, {\r\n    displayNamePrefix: 'WithLanguage',\r\n    pickProps: (value, key) => key === 'language' && !!value,\r\n});\r\n\r\nexport default withLanguage;\r\n","enum PaymentMethodId {\r\n    Adyen = 'adyen',\r\n    AdyenV2 = 'adyenv2',\r\n    AdyenV2GooglePay = 'googlepayadyenv2',\r\n    AdyenV3GooglePay = 'googlepayadyenv3',\r\n    AdyenV3 = 'adyenv3',\r\n    Affirm = 'affirm',\r\n    Afterpay = 'afterpay',\r\n    AmazonPay = 'amazonpay',\r\n    ApplePay = 'applepay',\r\n    Barclaycard = 'barclaycard',\r\n    BlueSnapV2 = 'bluesnapv2',\r\n    BlueSnapDirect = 'bluesnapdirect',\r\n    Boleto = 'boleto',\r\n    Bolt = 'bolt',\r\n    Braintree = 'braintree',\r\n    BraintreeAch = 'braintreeach',\r\n    BraintreeVenmo = 'braintreevenmo',\r\n    AuthorizeNetGooglePay = 'googlepayauthorizenet',\r\n    BNZGooglePay = 'googlepaybnz',\r\n    BraintreeAcceleratedCheckout = 'braintreeacceleratedcheckout',\r\n    BraintreeGooglePay = 'googlepaybraintree',\r\n    PayPalCommerceAcceleratedCheckout = 'paypalcommerceacceleratedcheckout',\r\n    PayPalCommerceGooglePay = 'googlepaypaypalcommerce',\r\n    BraintreeVisaCheckout = 'braintreevisacheckout',\r\n    BraintreeLocalPaymentMethod = 'braintreelocalmethods',\r\n    BraintreePaypalCredit = 'braintreepaypalcredit',\r\n    CBAMPGS = 'cba_mpgs',\r\n    CCAvenueMars = 'ccavenuemars',\r\n    Checkoutcom = 'checkoutcom',\r\n    CheckoutcomGooglePay = 'googlepaycheckoutcom',\r\n    Clearpay = 'clearpay',\r\n    Converge = 'converge',\r\n    CybersourceV2GooglePay = 'googlepaycybersourcev2',\r\n    DigitalRiver = 'digitalriver',\r\n    Fawry = 'fawry',\r\n    Humm = 'humm',\r\n    Ideal = 'ideal',\r\n    Klarna = 'klarna',\r\n    Laybuy = 'laybuy',\r\n    Masterpass = 'masterpass',\r\n    Mollie = 'mollie',\r\n    Moneris = 'moneris',\r\n    Opy = 'opy',\r\n    OrbitalGooglePay = 'googlepayorbital',\r\n    Oxxo = 'oxxo',\r\n    PaypalExpress = 'paypalexpress',\r\n    PaypalPaymentsPro = 'paypal',\r\n    PaypalCommerce = 'paypalcommerce',\r\n    PaypalCommerceCredit = 'paypalcommercecredit',\r\n    PaypalCommerceCreditCards = 'paypalcommercecreditcards',\r\n    PaypalCommerceAlternativeMethod = 'paypalcommercealternativemethods',\r\n    PaypalCommerceVenmo = 'paypalcommercevenmo',\r\n    Qpay = 'qpay',\r\n    Quadpay = 'quadpay',\r\n    Ratepay = 'ratepay',\r\n    SagePay = 'sagepay',\r\n    Sepa = 'sepa',\r\n    Sezzle = 'sezzle',\r\n    SquareV2 = 'squarev2',\r\n    StripeGooglePay = 'googlepaystripe',\r\n    StripeUPEGooglePay = 'googlepaystripeupe',\r\n    StripeV3 = 'stripev3',\r\n    StripeUPE = 'stripeupe',\r\n    WorldpayAccess = 'worldpayaccess',\r\n    WorldpayAccessGooglePay = 'googlepayworldpayaccess',\r\n    Zip = 'zip',\r\n    TdOnlineMartGooglePay = 'googlepaytdonlinemart',\r\n}\r\n\r\nexport default PaymentMethodId;\r\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\r\nimport { createContext, useContext } from 'react';\r\n\r\nexport interface CheckoutContextProps {\r\n    checkoutService: CheckoutService;\r\n    checkoutState: CheckoutSelectors;\r\n}\r\n\r\nconst CheckoutContext = createContext<CheckoutContextProps | undefined>(undefined);\r\n\r\nexport function useCheckout() {\r\n    const context = useContext(CheckoutContext);\r\n\r\n    if (!context) {\r\n        throw new Error('useCheckout must be used within a CheckoutContextProvider');\r\n    }\r\n\r\n    return context;\r\n}\r\n\r\nexport default CheckoutContext;\r\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\r\nimport { memoizeOne } from '@bigcommerce/memoize';\r\nimport React, { Component, ReactNode } from 'react';\r\n\r\nimport CheckoutContext from './CheckoutContext';\r\n\r\nexport interface CheckoutProviderProps {\r\n    checkoutService: CheckoutService;\r\n}\r\n\r\nexport interface CheckoutProviderState {\r\n    checkoutState: CheckoutSelectors;\r\n}\r\n\r\nexport default class CheckoutProvider extends Component<\r\n    CheckoutProviderProps,\r\n    CheckoutProviderState\r\n> {\r\n    state: Readonly<CheckoutProviderState>;\r\n\r\n    private unsubscribe?: () => void;\r\n\r\n    private getContextValue = memoizeOne(\r\n        (checkoutService: CheckoutService, checkoutState: CheckoutSelectors) => {\r\n            return {\r\n                checkoutService,\r\n                checkoutState,\r\n            };\r\n        },\r\n    );\r\n\r\n    constructor(props: Readonly<CheckoutProviderProps>) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            checkoutState: props.checkoutService.getState(),\r\n        };\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const { checkoutService } = this.props;\r\n\r\n        this.unsubscribe = checkoutService.subscribe((checkoutState) =>\r\n            this.setState({ checkoutState }),\r\n        );\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        if (this.unsubscribe) {\r\n            this.unsubscribe();\r\n            this.unsubscribe = undefined;\r\n        }\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { checkoutService, children } = this.props;\r\n        const { checkoutState } = this.state;\r\n\r\n        return (\r\n            <CheckoutContext.Provider value={this.getContextValue(checkoutService, checkoutState)}>\r\n                {children}\r\n            </CheckoutContext.Provider>\r\n        );\r\n    }\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconPayPalFastlane: FunctionComponent = () => (\r\n    <svg viewBox=\"0 0 101 12\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path\r\n            d=\"M.009 9.791 1.653.298C1.681.1 1.805 0 1.997 0H7.74c.22 0 .332.141.29.354l-.236 1.334c-.028.185-.152.298-.344.298H3.627l-.359 2.058h3.479c.22 0 .332.142.29.354l-.221 1.306C6.788 5.9 6.664 6 6.472 6H2.936l-.662 3.847c-.028.198-.152.298-.344.298H.298c-.22 0-.332-.142-.289-.354m6.78-1.49c0-1.844 1.905-2.468 3.906-2.71.234-.029.415-.041 1.298-.112a3.25 3.25 0 0 0 .04-.498c0-.653-.344-1.022-1.063-1.022-.622 0-1.035.269-1.23.796-.068.185-.18.27-.358.27H7.975c-.18 0-.304-.085-.304-.241 0-.044.014-.086.028-.128.441-1.334 1.67-2.186 3.507-2.186s2.843.71 2.843 2.428c0 .326-.04.739-.11 1.122l-.373 2.07c-.083.484-.207 1.22-.207 1.718 0 .256-.11.341-.318.341h-1.283c-.192 0-.304-.1-.304-.282 0-.17.04-.37.069-.554-.524.539-1.2.978-2.402.978-1.42 0-2.332-.725-2.332-1.986zm5.036-1.205.054-.256-.372.041c-.746.085-2.375.2-2.375 1.205 0 .525.372.78.966.78 1.103 0 1.504-.78 1.725-1.773zm2.446 1.36c-.04-.17-.07-.297-.07-.438 0-.242.124-.313.318-.313h1.588c.192 0 .29.1.332.298.152.554.607.795 1.284.795.773 0 1.186-.326 1.186-.751 0-.369-.415-.54-1.104-.752l-.813-.256c-1.173-.369-2.14-.795-2.14-2.115 0-1.603 1.475-2.483 3.423-2.483 1.519 0 2.762.412 3.12 1.986.015.07.029.141.029.226 0 .142-.124.198-.318.198h-1.504c-.18 0-.276-.085-.36-.27-.165-.37-.538-.596-1.13-.596-.691 0-1.036.27-1.036.653s.332.554 1.284.852l.539.17c1.243.398 2.278.866 2.278 2.059 0 1.732-1.519 2.639-3.59 2.639-1.602 0-2.996-.468-3.313-1.902h-.005zm7.786.455c0-.269.04-.483.083-.725l.676-3.888h-.745c-.22 0-.332-.141-.29-.354l.166-.951c.029-.185.152-.298.344-.298h.8l.29-1.717c.028-.198.152-.298.344-.298h1.519c.22 0 .332.142.29.354l-.29 1.661h.966c.22 0 .332.142.29.356l-.166.951c-.029.186-.152.298-.345.298h-1.02l-.442 2.54c-.083.483-.152.851-.152 1.149 0 .468.152.624.47.624.124 0 .235-.015.318-.015.22 0 .29.17.249.383l-.152.922c-.055.356-.263.412-.76.412-1.297 0-2.443-.071-2.443-1.405m3.995.88 1.63-9.493C27.71.1 27.834 0 28.026 0h1.519c.22 0 .332.141.29.354l-1.643 9.493c-.028.198-.152.298-.344.298h-1.505c-.221 0-.332-.141-.29-.354zm3.147-1.49c0-1.844 1.905-2.468 3.906-2.71.235-.029.415-.041 1.298-.112a3.25 3.25 0 0 0 .04-.498c0-.653-.344-1.022-1.063-1.022-.622 0-1.034.269-1.229.796-.069.185-.18.27-.359.27h-1.407c-.18 0-.304-.085-.304-.241 0-.044.015-.086.028-.128.442-1.334 1.67-2.186 3.508-2.186 1.837 0 2.843.71 2.843 2.428 0 .326-.04.739-.112 1.122l-.372 2.07c-.083.484-.207 1.22-.207 1.718 0 .256-.111.341-.318.341h-1.284c-.192 0-.303-.1-.303-.282 0-.17.04-.37.068-.554-.524.539-1.2.978-2.401.978-1.422 0-2.333-.725-2.333-1.986V8.3m4.914-1.205.055-.256-.373.041c-.745.085-2.375.2-2.375 1.205 0 .525.372.78.966.78 1.103 0 1.505-.78 1.725-1.773zm2.475 2.695 1.16-6.798c.028-.2.152-.298.344-.298h1.421c.22 0 .318.142.275.356l-.11.666c.357-.524 1.13-1.193 2.4-1.193 1.382 0 2.182.88 2.182 2.256 0 .269-.029.54-.083.866l-.731 4.2c-.028.198-.152.298-.344.298h-1.519c-.22 0-.332-.141-.29-.353l.566-3.25c.083-.482.11-.851.11-1.121 0-.766-.274-1.179-.95-1.179-.898 0-1.436.725-1.671 2.086l-.608 3.52c-.028.197-.152.297-.344.297h-1.519c-.22 0-.332-.141-.29-.353m8.063-2.824c0-2.384 1.588-4.456 4.35-4.456 2.14 0 3.45 1.22 3.45 3.42 0 .256-.014.483-.04.71-.028.2-.152.297-.344.297h-5.233c.028 1.051.496 1.689 1.56 1.689.538 0 .91-.198 1.214-.51a.47.47 0 0 1 .387-.186h1.67c.193 0 .305.057.305.2 0 .042-.015.1-.069.198-.705 1.25-1.836 2.071-3.671 2.071-2.098 0-3.576-1.178-3.576-3.434zm5.591-1.405c0-.908-.484-1.476-1.421-1.476-1.009 0-1.616.71-1.78 1.476h3.203zm34.293-.611-1.504 2.6-.764-2.579a.195.195 0 0 0-.185-.141h-1.355a.15.15 0 0 0-.14.195l1.367 4.343-1.236 2.046c-.06.099.009.227.123.227h1.462a.24.24 0 0 0 .206-.12l3.817-6.465a.148.148 0 0 0-.126-.225h-1.46a.23.23 0 0 0-.204.119zM62.935 12c-.135 0-.206-.063-.206-.168 0-.032.01-.074.03-.116l.66-1.613-1.947-5.21c-.03-.084-.052-.126-.052-.189 0-.105.083-.136.216-.136h.7c.135 0 .227.073.268.2l.937 2.816c.176.527.299.886.433 1.329h.02c.176-.517.268-.823.454-1.36l.957-2.785q.078-.202.278-.2h.629c.134 0 .227.041.227.147a.5.5 0 0 1-.052.169l-2.699 6.927c-.051.127-.134.19-.268.19h-.587zm-4.082-1.772c-.927 0-1.524-.422-1.833-.906v.537c0 .158-.083.243-.237.243h-.505c-.154 0-.237-.085-.237-.243V2.803c0-.158.083-.243.237-.243h.577c.154 0 .237.085.237.243v1.381c0 .38 0 .697-.01 1.086.308-.454.906-.875 1.761-.875 1.535 0 2.523 1.244 2.523 2.921s-1.03 2.911-2.513 2.911m-.205-.876c1.009 0 1.596-.801 1.596-2.025s-.597-2.035-1.606-2.035-1.606.855-1.606 2.035.597 2.025 1.617 2.025zm12.82-1.666c1.397 0 2.58-1.043 2.796-2.454.218-1.424-.87-2.666-2.408-2.67h-2.482a.2.2 0 0 0-.192.17l-1.107 7.19a.18.18 0 0 0 .178.212h1.315a.2.2 0 0 0 .191-.169l.326-2.111a.2.2 0 0 1 .19-.17h1.194zm1.1-2.52c-.082.527-.479.915-1.24.915h-.972l.294-1.916h.955c.788 0 1.044.475.962 1zm7.386-.336h-1.246a.2.2 0 0 0-.191.169l-.042.266s-.968-1.082-2.68-.352c-.982.42-1.455 1.287-1.656 1.918 0 0-.638 1.929.803 2.988 0 0 1.336 1.019 2.842-.063l-.026.17a.18.18 0 0 0 .178.211h1.246a.2.2 0 0 0 .191-.169l.76-4.924a.182.182 0 0 0-.178-.214zm-1.831 2.72c-.108.705-.675 1.225-1.4 1.225a1.3 1.3 0 0 1-.393-.058c-.537-.178-.844-.705-.757-1.28.108-.706.676-1.226 1.403-1.226q.216 0 .392.06c.54.178.843.707.755 1.28zm11.3.136c1.396 0 2.58-1.043 2.795-2.454.218-1.424-.87-2.666-2.408-2.67h-2.48a.2.2 0 0 0-.192.17l-1.107 7.19a.18.18 0 0 0 .178.212h1.315a.2.2 0 0 0 .191-.169l.326-2.111a.2.2 0 0 1 .19-.17h1.19v.002zm1.101-2.52c-.082.527-.478.915-1.239.915h-.972l.294-1.916h.955c.786 0 1.043.475.962 1zm7.387-.336h-1.246a.2.2 0 0 0-.191.169l-.042.266s-.968-1.082-2.68-.352c-.982.42-1.455 1.287-1.655 1.918 0 0-.639 1.929.803 2.988 0 0 1.337 1.019 2.842-.063l-.027.17a.18.18 0 0 0 .178.211h1.246a.2.2 0 0 0 .191-.169l.76-4.924a.183.183 0 0 0-.18-.214m-1.831 2.72c-.109.705-.674 1.225-1.4 1.225q-.216 0-.392-.058c-.537-.178-.845-.705-.757-1.28.108-.706.677-1.226 1.402-1.226q.216 0 .392.06c.537.178.843.707.756 1.28zm3.233-4.82L98.206 9.92a.18.18 0 0 0 .178.212h1.314a.2.2 0 0 0 .192-.169l1.107-7.19a.18.18 0 0 0-.178-.213h-1.315a.2.2 0 0 0-.191.17\"\r\n            fill=\"#333333\"\r\n        />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconPayPalFastlane);\r\n","import React from 'react';\r\n\r\nimport { IconPayPalFastlane } from '@bigcommerce/checkout/ui';\r\n\r\nimport './PoweredByPayPalFastlaneLabel.scss';\r\n\r\nconst PoweredByPayPalFastlaneLabel = () => (\r\n    <div className=\"powered-by-paypal-fastlane\" data-test=\"paypal-fastlane-icon\">\r\n        <IconPayPalFastlane />\r\n    </div>\r\n);\r\n\r\nexport default PoweredByPayPalFastlaneLabel;\r\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nconst isBraintreeFastlaneMethod = (methodId?: string): boolean => {\r\n    return (\r\n        methodId === PaymentMethodId.Braintree || // TODO: remove after A/B testing\r\n        methodId === PaymentMethodId.BraintreeAcceleratedCheckout\r\n    );\r\n};\r\n\r\nexport default isBraintreeFastlaneMethod;\r\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nconst isPayPalCommerceFastlaneMethod = (methodId?: string): boolean => {\r\n    return (\r\n        methodId === PaymentMethodId.PaypalCommerceCreditCards || // TODO: remove after A/B testing\r\n        methodId === PaymentMethodId.PayPalCommerceAcceleratedCheckout\r\n    );\r\n};\r\n\r\nexport default isPayPalCommerceFastlaneMethod;\r\n","import isBraintreeFastlaneMethod from './is-braintree-fastlane-method';\r\nimport isPayPalCommerceFastlaneMethod from './is-paypal-commerce-fastlane-method';\r\n\r\nconst isPaypalFastlaneMethod = (methodId?: string): boolean => {\r\n    return isBraintreeFastlaneMethod(methodId) || isPayPalCommerceFastlaneMethod(methodId);\r\n};\r\n\r\nexport default isPaypalFastlaneMethod;\r\n","import { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nimport isPayPalFastlaneCustomer from './is-paypal-fastlane-customer';\r\nimport isPayPalFastlaneMethod from './is-paypal-fastlane-method';\r\n\r\nconst usePayPalFastlaneAddress = () => {\r\n    const { checkoutState } = useCheckout();\r\n    const { getConfig, getPaymentProviderCustomer } = checkoutState.data;\r\n    const paymentWithCustomCheckout =\r\n        getConfig()?.checkoutSettings.providerWithCustomCheckout || '';\r\n\r\n    const isPayPalFastlaneEnabled = isPayPalFastlaneMethod(paymentWithCustomCheckout);\r\n\r\n    const paymentProviderCustomer = getPaymentProviderCustomer();\r\n    const paypalFastlaneCustomer = isPayPalFastlaneCustomer(paymentProviderCustomer)\r\n        ? paymentProviderCustomer\r\n        : {};\r\n\r\n    const customerAuthenticationState =\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n        paymentProviderCustomer?.authenticationState;\r\n\r\n    const paypalFastlaneAddresses = paypalFastlaneCustomer.addresses || [];\r\n\r\n    const shouldShowPayPalFastlaneLabel =\r\n        paypalFastlaneAddresses.length > 0 && isPayPalFastlaneEnabled;\r\n\r\n    const shouldShowPayPalFastlaneShippingForm =\r\n        paypalFastlaneAddresses.length > 0 &&\r\n        customerAuthenticationState &&\r\n        customerAuthenticationState !== 'CANCELED' &&\r\n        customerAuthenticationState !== 'unrecognized';\r\n\r\n    return {\r\n        isPayPalFastlaneEnabled,\r\n        paypalFastlaneAddresses,\r\n        shouldShowPayPalFastlaneLabel,\r\n        shouldShowPayPalFastlaneShippingForm,\r\n    };\r\n};\r\n\r\nexport default usePayPalFastlaneAddress;\r\n","import {\r\n    CardInstrument,\r\n    CustomerAddress,\r\n    PaymentProviderCustomer,\r\n} from '@bigcommerce/checkout-sdk';\r\n\r\ninterface PayPalFastlaneCustomer {\r\n    authenticationState?: string;\r\n    addresses?: CustomerAddress[];\r\n    instruments?: CardInstrument[];\r\n}\r\n\r\nexport default function isPayPalFastlaneCustomer(\r\n    customer?: PaymentProviderCustomer,\r\n): customer is PayPalFastlaneCustomer {\r\n    if (!customer) {\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        'authenticationState' in customer || 'addresses' in customer || 'instruments' in customer\r\n    );\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\r\n\r\nconst AddressFormSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\r\n    children,\r\n    isLoading,\r\n    renderWhileLoading,\r\n}) => {\r\n    const skeleton = (\r\n        <div className=\"checkout-form\">\r\n            <div className=\"form-legend-container\">\r\n                <div className=\"address-form-heading-skeleton form-legend optimizedCheckout-headingSecondary\" />\r\n            </div>\r\n            <div className=\"address-form-skeleton\">\r\n                <div className=\"name-fields-skeleton\">\r\n                    <div className=\"skeleton-container\">\r\n                        <div className=\"input-skeleton\" />\r\n                    </div>\r\n                    <div className=\"skeleton-container\">\r\n                        <div className=\"input-skeleton\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"skeleton-container\">\r\n                    <div className=\"input-skeleton\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return <LoadingSkeleton {...{ children, isLoading, renderWhileLoading, skeleton }} />;\r\n};\r\n\r\nexport default AddressFormSkeleton;\r\n","import classNames from 'classnames';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\r\n\r\ninterface ChecklistSkeletonProps {\r\n    additionalClassName?: string;\r\n    rows?: number;\r\n}\r\n\r\nconst ChecklistSkeleton: FunctionComponent<LoadingSkeletonProps & ChecklistSkeletonProps> = ({\r\n    additionalClassName,\r\n    children,\r\n    isLoading = true,\r\n    rows = 3,\r\n}) => {\r\n    const content = [];\r\n\r\n    for (let i = 0; i < rows; i += 1) {\r\n        content.push(\r\n            <div className=\"skeleton-container\" key={`checklist-skeleton-item${i}`}>\r\n                <div className=\"checklist-skeleton-circle\" />\r\n                <div className=\"checklist-skeleton-rectangle\" />\r\n            </div>,\r\n        );\r\n    }\r\n\r\n    const skeleton = (\r\n        <div className={classNames(additionalClassName, 'checklist-skeleton')}>{content}</div>\r\n    );\r\n\r\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\r\n};\r\n\r\nexport default ChecklistSkeleton;\r\n","import React, { FunctionComponent, ReactNode } from 'react';\r\n\r\nexport interface LoadingSkeletonProps {\r\n    isLoading?: boolean;\r\n    renderWhileLoading?: boolean;\r\n    skeleton?: ReactNode;\r\n}\r\n\r\nexport const LoadingSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\r\n    children,\r\n    isLoading = true,\r\n    renderWhileLoading = false,\r\n    skeleton,\r\n}) => {\r\n    const shouldShowChildren = renderWhileLoading || !isLoading;\r\n\r\n    return (\r\n        <>\r\n            {isLoading && skeleton}\r\n            {Boolean(children) && shouldShowChildren && (\r\n                <div\r\n                    className=\"loading-skeleton\"\r\n                    style={\r\n                        isLoading ? { position: 'absolute', left: '0%', top: '-300%' } : undefined\r\n                    }\r\n                >\r\n                    {children}\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n","import { isFunction, noop } from 'lodash';\r\nimport React, { createContext, FunctionComponent, memo, ReactNode, useMemo, useState } from 'react';\r\n\r\nexport interface FormContextType {\r\n    isSubmitted: boolean;\r\n    setSubmitted(isSubmitted: boolean): void;\r\n}\r\n\r\nexport const FormContext = createContext<FormContextType>({\r\n    isSubmitted: false,\r\n    setSubmitted: noop,\r\n});\r\n\r\ntype FormContextFunction = (props: FormContextType) => ReactNode;\r\n\r\nexport interface FormProviderProps {\r\n    initialIsSubmitted?: boolean;\r\n    children: ReactNode | FormContextFunction;\r\n}\r\n\r\nexport const FormProvider: FunctionComponent<FormProviderProps> = memo(\r\n    ({ children, initialIsSubmitted = false }) => {\r\n        const [isSubmitted, setSubmitted] = useState(initialIsSubmitted);\r\n        const contextValue = useMemo(() => ({ isSubmitted, setSubmitted }), [isSubmitted]);\r\n\r\n        return (\r\n            <FormContext.Provider value={contextValue}>\r\n                {isFunction(children) ? children({ isSubmitted, setSubmitted }) : children}\r\n            </FormContext.Provider>\r\n        );\r\n    },\r\n);\r\n\r\nexport default FormContext;\r\n","import classNames from 'classnames';\r\nimport React, { ComponentType, memo } from 'react';\r\n\r\nexport enum IconSize {\r\n    Regular = 'regular',\r\n    Small = 'small',\r\n    Medium = 'medium',\r\n    Large = 'large',\r\n}\r\n\r\nexport interface IconProps {\r\n    additionalClassName?: string;\r\n    size?: IconSize;\r\n    testId?: string;\r\n}\r\n\r\nexport default function withIconContainer<TProps extends Record<string, any>>(\r\n    OriginalComponent: ComponentType<TProps>,\r\n): ComponentType<TProps & IconProps> {\r\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\r\n        <div\r\n            className={classNames(\r\n                'icon',\r\n                additionalClassName,\r\n                size === IconSize.Small ? 'icon--small' : null,\r\n                size === IconSize.Large ? 'icon--large' : null,\r\n                size === IconSize.Medium ? 'icon--medium' : null,\r\n            )}\r\n            data-test={testId}\r\n        >\r\n            <OriginalComponent {...(rest as TProps)} />\r\n        </div>\r\n    ));\r\n}\r\n"],"names":["createContext","undefined","createAnalyticsService","createFn","createArguments","analyticsTracker","checkoutService","children","getStepTracker","useMemo","createStepTracker","getBodlService","createBodlService","subscribe","getBraintreeAnalyticTracker","createBraintreeAnalyticTracker","getPayPalCommerceAnalyticTracker","createPayPalCommerceAnalyticTracker","checkoutBegin","trackCheckoutStarted","trackStepCompleted","currentStep","stepCompleted","trackStepViewed","step","orderPurchased","trackOrderComplete","customerEmailEntry","email","customerSuggestionInit","payload","customerSuggestionExecute","customerPaymentMethodExecuted","showShippingMethods","selectedPaymentMethod","methodName","methodId","clickPayButton","paymentRejected","paymentComplete","exitCheckout","walletButtonClick","AnalyticsContext","A","Provider","value","ExtensionRegionContainer","extensionRegionToContainerMap","ShippingShippingAddressFormBefore","ShippingShippingAddressFormAfter","ShippingSelectedShippingMethod","SummaryAfter","SummaryLastItemAfter","Extension","region","getExtensions","getConfig","getCheckout","extensions","config","checkout","extensionService","extensionContext","useContext","ExtensionContext","Error","useExtensions","isRegionEnabled","containerId","useEffect","renderExtension","removeListeners","id","extensionReducer","state","action","type","ExtensionActionType","SHOW_LOADING_INDICATOR","isShowingLoadingIndicator","createReloadCheckoutHandler","commandType","ExtensionCommandType","ReloadCheckout","handler","loadCheckout","getState","data","params","include","createSetIframeStyleHandler","extension","SetIframeStyle","style","extensionContainer","document","querySelector","iframe","Object","assign","createShowLoadingIndicatorHandler","dispatch","ShowLoadingIndicator","show","createGetConsignmentHandler","GetConsignments","consignments","postMessageToExtension","errorLogger","handlers","loadExtensions","this","preloadExtensions","cartId","getCart","parentOrigin","links","siteLink","forEach","url","URL","searchParams","set","link","createElement","rel","as","href","toString","head","appendChild","container","getExtensionByRegion","registerHandlers","log","errorCode","extensionId","clearExtensionCache","removers","remover","Boolean","handlerProps","values","createHandlerFactory","handlerFactory","isCommandHandler","push","handleExtensionCommand","ExtensionProvider","useReducer","extensionState","extensionValues","ExtensionService","AddressType","withCheckout","context","address","getBillingCountries","getShippingCountries","getBillingAddressFields","getShippingAddressFields","validateAddressFields","isExperimentEnabled","checkoutSettings","countries","Billing","fields","countryCode","Shipping","memo","addressWithoutLocalization","localizeAddress","isValidStaticAddress","className","firstName","lastName","phone","company","address1","address2","city","localizedProvince","postalCode","localizedCountry","WHITELIST_REGEXP","memoize","formFields","translate","validateGoogleMapAutoCompleteMaxLength","filter","reduce","schema","name","required","label","maxLength","trim","max","matches","concat","getCustomFormFieldsValidationSchema","getTranslateAddressError","language","requiredFieldErrorTranslationIds","stateOrProvince","stateOrProvinceCode","min","getFormFieldsValidationSchema","isValidAddress","isValidSync","isValid","isEmpty","field","custom","mapAddressToFormValues","addressFormValues","fieldName","fieldType","defaultValue","customFields","find","fieldValue","getValue","shouldSaveAddress","date","Date","checkbox","getDefaultValue","split","year","month","day","Number","displayNamePrefix","isSupported","message","EmbeddedCheckoutUnsupportedError","prototype","CustomError","unsupportedMethods","langService","ids","indexOf","length","methods","join","UNSUPPORTED_METHODS","withExtension","createInjectHoc","isWaiting","componentDidMount","waitInterval","props","waitToken","setTimeout","setState","componentWillUnmount","clearInterval","render","loginUrl","LoadingOverlay","hideContentWhenLoading","isLoading","TranslatedHtml","PureComponent","CustomerViewType","buttonsCount","skeleton","Array","fill","map","_v","i","key","LoadingSkeleton","renderWhileLoading","isApplePayWindow","window","APPLE_PAY","SUPPORTED_METHODS","getSupportedMethodIds","methodIds","isResolvableComponent","Component","resolveCheckoutButton","resolveId","query","components","results","entries","resolveIds","resolverId","result","component","default","matched","sort","a","b","resolveComponent","initialize","isShowingWalletButtonsOnTop","onError","onClick","noop","heightOption","buttonHeight","deinitialize","navigateToOrderConfirmation","orderId","isBuyNowCart","location","pathname","replace","Promise","rest","localeContext","LocaleContext","initializeOptions","useCallback","options","applepay","shippingLabel","subtotalLabel","onPaymentAuthorize","onComplete","paypalCommerceIds","checkoutState","getCustomer","isPaymentDataRequired","isInitializedCustomer","getInitializeCustomerError","availableMethodIds","remoteCheckoutProviders","customer","isGuest","checkEmbeddedSupport","isPaymentStepActive","onUnhandledError","onWalletButtonClick","error","position","left","top","TranslatedString","includes","isPayPalCommerce","ResolvedCheckoutButton","deinitializeCustomer","initializeCustomer","analyticsContext","isExecutingPaymentMethodCheckout","executePaymentMethodCheckout","useState","showSuggestion","setShowSuggestion","bolt","onInit","hasBoltAccount","fn","event","stopPropagation","provider","providerFlow","Button","IconBolt","additionalClassName","providerWithCustomCheckout","PaymentMethodId","Bolt","beautifyAmazonButton","amazonButton","shadowRoot","height","isInitializing","hideText","supportedMethodIds","filterUnsupportedMethodIds","SUPPORTED_SIGNOUT_METHODS","isSupportedSignoutMethod","canSignOut","every","payments","payment","providerId","getBillingAddress","isSigningOut","billingAddress","isSignedIn","signOut","signOutCustomer","onSignOut","onSignOutError","isCartEmpty","reload","isErrorWithType","size","Tiny","testId","variant","Secondary","EMAIL_REGEXP","getEmailValidationSchema","getTranslateCreateCustomerError","passwordRequirements","description","numeric","alpha","minLength","password","getAcceptsMarketingEmailsDefault","defaultShouldSubscribe","requiresMarketingConsent","withLanguage","withFormik","handleSubmit","onSubmit","mapPropsToValues","acceptsMarketingEmails","validationSchema","requirements","getCreateCustomerValidationSchema","getPasswordRequirements","fixNewsletterCheckboxExperimentEnabled","createAccountError","isCreatingAccount","onCancel","isFloatingLabelEnabled","createAccountErrorMessage","isRequestError","status","splitMessage","updatedItems","items","item","transformFormFieldsData","Form","Fieldset","Alert","DynamicFormField","autocomplete","extraClass","parentFieldName","disabled","Primary","preventDefault","onChange","renderInput","TextInput","autoComplete","labelContent","FormField","input","onSendLoginEmail","isOpen","isSendingEmail","emailHasBeenRequested","onRequestClose","sentEmailError","sentEmail","submitForm","formEmail","modalHeaderStringId","okButton","footer","LoadingSpinner","sent_email","TranslatedLink","form","expiry","minutes","Math","round","Modal","additionalBodyClassName","additionalModalClassName","header","ModalHeader","shouldShowCloseButton","isFastlaneHostWindow","hasOwnProperty","getPaymentMethod","paymentMethod","shouldRenderFastlaneWatermark","initializationData","isFastlanePrivacySettingEnabled","braintreeFastlane","paypalFastlane","FastlaneWatermarkComponent","includeAdditionalInfo","then","PrivacyPolicyCheckboxFieldLink","CheckboxFormField","PrivacyPolicyFieldset","PrivacyPolicyAutoConsent","getPrivacyPolicyValidationSchema","isRequired","schemaFields","privacyPolicy","oneOf","Input","checked","Label","htmlFor","setSubscribeStatus","shouldSubscribe","sessionStorage","setItem","getSubscribeStatus","getItem","removeSubscribeStatus","removeItem","getShouldSubscribeValue","SubscribeSessionStorage","onContinueAsGuest","privacyPolicyUrl","isExpressPrivacyPolicy","baseSchema","canSubscribe","checkoutButtons","continueAsGuestButtonLabelId","onChangeEmail","onShowLogin","shouldShowEmailWatermark","renderField","fieldProps","legend","Legend","hidden","BasicFormField","role","tabIndex","withIconContainer","viewBox","xmlns","d","Toggle","openByDefault","toggle","onSignIn","canCancel","forgotPasswordUrl","isSignInEmailEnabled","isSigningIn","onCreateAccount","signInError","shouldShowCreateAccountLink","viewType","Login","changeEmailLink","body","mapErrorMessage","SuggestedLogin","Info","CancellableEnforcedLogin","EnforcedLogin","target","mapCreateAccountFromFormValues","mapCustomFormFieldsFromFormValues","setStatus","valSuccess","continueAsAGuestButton","setContinueAsAGuestButton","emailValue","setEmailValue","authentication","setAuthentication","isStripeLoading","setIsStripeLoading","isNewAuth","setIsNewAuth","handleOnClickSubmitButton","setEmailCallback","authenticated","isComplete","handleLoading","mounted","stripeupe","onEmailChange","getStyles","getStripeStyles","gatewayId","getStylesFromElement","properties","parentContainer","getElementById","getAppliedStyles","formInput","formLabel","formError","labelText","color","fieldText","fieldPlaceholderText","fieldErrorText","fieldBackground","fieldInnerShadow","fieldBorder","buttonText","display","placeholder","isEmailLoginFormOpen","isReady","hasRequestedLoginEmail","closeEmailLoginFormForm","handleEmailLoginClicked","draftEmail","handleSendLoginEmail","sendLoginEmail","handleContinueAsGuest","formValues","continueAsGuest","hasBillingId","onChangeViewType","onContinueAsGuestError","onSubscribeToNewsletter","updateSubscriptionWhenUnchecked","acceptsMarketingNewsletter","acceptsAbandonedCartEmails","paymentProviderCustomer","getPaymentProviderCustomer","shouldEncourageSignIn","stripeLinkAuthenticationState","executePaymentMethodCheckoutOrContinue","handleSignIn","credentials","signIn","onSignInError","handleCreateAccount","createAccount","onAccountCreated","showCreateAccount","CreateAccount","handleCancelCreateAccount","clearError","handleCancelSignIn","Guest","handleChangeEmail","handleShowLogin","StripeUPE","continueWithCheckoutCallback","checkoutPaymentMethodExecuted","onReady","shouldRenderGuestForm","shouldRenderCreateAccountForm","shouldRenderLoginForm","renderEmailLoginLinkForm","renderLoginForm","renderGuestForm","renderCreateAccountForm","checkoutButtonIds","isContinuingAsGuest","isSubscribed","isWalletButtonsOnTop","shouldRenderStripeForm","isLoadingGuestForm","isSendingSignInEmail","signInEmailError","signInEmail","customerAccountFields","isEmbedded","isGuestEnabled","isAccountCreationEnabled","withAnalytics","getCustomerAccountFields","getSignInEmail","getSignInError","getSignInEmailError","getCreateCustomerAccountError","isInitializingCustomer","isCreatingCustomerAccount","cart","features","getProviderWithCustomCheckout","shopperConfig","showNewsletterSignup","createCustomerAccount","sendSignInEmail","defaultNewsletterSignup","forgotPasswordLink","guestCheckoutEnabled","signInCustomer","shouldUseStripeLinkByMinimumAmount","Customer","width","icon","dangerouslySetInnerHTML","__html","banners","promotion","banner","index","text","isUsingMultiShipping","lineItems","some","consignment","lineItemIds","hasUnassignedLineItems","normalizeAddress","omit","addresses","paypalFastlaneAddress","bcAddress","isEqual","isEqualToPayPalFastlaneAddress","compactView","paypalFastlaneAddresses","usePayPalFastlaneAddress","showPayPalFastlaneAddressLabel","StaticAddress","PoweredByPayPalFastlaneLabel","StaticConsignmentItemList","consignmentNumber","selectedShippingOption","findLineItems","count","getLineItemsCount","ConsignmentLineItemDetail","StaticShippingOption","displayAdditionalInformation","method","isNewMultiShippingUIEnabled","isMultiShippingMode","getLanguageService","title","ShippingOptionExpiredError","heading","isActive","isEditable","onEdit","summary","isClosed","containerRef","createRef","contentRef","handleTransitionEnd","node","done","addEventListener","onAnimationEnd","focusStep","componentDidUpdate","prevProps","timeoutRef","clearTimeout","suggestion","ref","renderContent","isBusy","MobileView","CSSTransition","addEndListener","classNames","enter","exit","in","mountOnEnter","onExited","timeout","unmountOnExit","delay","isMobileView","getTransitionDelay","getChildInput","getScrollPosition","onExpanded","focus","isNaN","scrollTo","current","getParentContainer","topOffset","innerHeight","getBoundingClientRect","scrollY","pageYOffset","parentElement","classList","contains","timeoutDelay","parseFloat","getComputedStyle","transitionDuration","CheckoutStepType","physicalItems","lineItem","isShippingRequired","customItems","getCustomerStepStatus","createSelector","hasEmail","isUsingWallet","isUsingStripeLinkAndCheckoutPageIsReloaded","getStripeLinkAndCheckoutPageIsReloaded","getBillingStepStatus","billingAddressFields","hasAddress","billingAddressCustomFields","hasCustomFields","isAmazonPayBillingStepComplete","startsWith","getShippingStepStatus","getShippingAddress","getConsignments","shippingAddress","shippingAddressFields","hasOptions","hasSelectedShippingOptions","hasUnassignedItems","isCustomShippingSelected","getPaymentStepStatus","getOrder","order","Payment","getOrderSubmitStatus","isSubmittingOrder","customerStep","shippingStep","billingStep","paymentStep","orderStatus","steps","compact","defaultActiveStep","isPrevStepComplete","slice","prevStep","CartSummary","lazy","retry","CartSummaryDrawer","isBillingSameAsShipping","isRedirecting","buttonConfigs","handleToggleMultiShipping","navigateToNextIncompleteStep","activeStepIndex","findIndex","activeStep","previousStep","navigateToStep","embeddedMessenger","postComplete","embeddedSupport","handleCartChangedError","handleConsignmentsUpdated","prevHasSelectedShippingOptions","activeStepType","defaultStepType","newHasSelectedShippingOptions","isDefaultStepPaymentOrBilling","isShippingStepFinished","handleCloseErrorModal","handleExpanded","handleUnhandledError","handleError","postError","handleEditStep","handleReady","isDefault","handleNewsletterSubscription","subscribed","handleSignOut","cartUrl","isPriceHiddenFromGuests","postSignedOut","setCustomerViewType","handleShippingNextStep","handleShippingSignIn","handleShippingCreateAccount","customerViewType","createAccountUrl","handleBeforeExit","handleWalletButtonClick","unsubscribeFromConsignments","removeEventListener","checkoutId","createEmbeddedMessenger","embeddedStylesheet","loadPaymentMethodByIds","subscribeToConsignments","all","providers","supportedProviders","configs","getPaymentMethods","errorFlashMessages","getFlashMessages","messenger","receiveStyles","styles","append","postFrameLoaded","contentId","postLoaded","hasMultiShippingEnabled","defaultNewsletterSignupOption","errorModal","isCustomError","ErrorModal","onClose","isPending","promotions","renderStep","renderCartSummary","renderCustomerStep","renderShippingStep","renderPaymentStep","hasCartChanged","LazyContainer","loadingSkeleton","AddressFormSkeleton","cartHasChanged","navigateNextStep","onToggleMultiShipping","ChecklistSkeleton","onCartChangedError","onFinalize","onSubmitError","errors","statuses","submitOrderError","getSubmitOrderError","checkoutUserExperienceSettings","walletButtonsOnTop","floatingLabelEnabled","loginLink","createAccountLink","cartLink","displaySettings","hidePriceFromGuests","subscribeToConsignmentsSelector","subscriber","walletButtonsOnTopFlag","isLoadingCheckout","Checkout","createCheckoutService","locale","getLocale","shouldWarnMutation","createEmbeddedCheckoutStylesheet","createErrorLogger","sentry","sentryConfig","errorTypes","publicPath","sampleRate","sentrySampleRate","ErrorBoundary","logger","LocaleProvider","CheckoutProvider","AnalyticsProvider","createEmbeddedCheckoutMessenger","ContextComponent","CheckoutContext","mapToPropsOrFactory","OriginalComponent","InnerDecoratedComponent","DecoratedComponent","mapToProps","isMapToPropsFactory","mappedProps","mergedProps","displayName","captureStackTrace","stack","setDefaultValues","defaultError","defaultTitle","code","aria","labelledby","handleOnRequestClose","nativeEvent","renderFooter","renderHeader","renderBody","IconError","Small","shouldBeTranslatedAsHtml","isHtmlError","translationKey","renderErrorCode","shouldShowErrorCode","headers","computeErrorCode","toUpperCase","setPrototypeOf","object","__proto__","customConsole","console","tags","level","meta","info","Warning","warn","SeverityLevelEnum","FILENAME_PREFIX","handleBeforeSend","hint","exception","shouldReportExceptions","originalException","handleRewriteFrame","frame","filename","RegExp","consoleLogger","beforeSend","denyUrls","integrations","GlobalHandlers","onerror","onunhandledrejection","iteratee","scope","setTags","setLevel","mapToSentryLevel","setExtras","setFingerprint","INFO","WARNING","Debug","DEBUG","ERROR","exceptions","stacktrace","frames","serviceConfig","customError","obj","call","EMPTY_ARRAY","freeze","lastPathName","pop","experimentName","DEFAULT_OPTIONS","interval","resolve","pickProps","amount","currency","toCustomerCurrency","getPasswordRequirementsFromConfig","minlength","allSlashes","toCSSRule","selector","mergedStyles","pickBy","kebabCase","parse","rules","secondaryText","secondaryHeading","hover","button","active","secondaryButton","select","radio","checklist","discountBanner","loadingBanner","orderSummary","embeddedCheckoutStyleParser","_parser","sheet","CSSStyleSheet","rule","insertRule","appendStylesheet","maxValue","minValue","nullable","transform","originalValue","requiredErrorMessage","customFieldsObject","forIn","isDate","padMonth","padStart","getMonth","padDay","getDate","getFullYear","fieldId","toResolvableComponent","checkoutButtonContainerClass","catch","HTMLElement","hasProto","isGiftCertificatePayment","path","currentScript","src","configurePublicPath","scriptPath","substr","renderCheckout","configuredPublicPath","CheckoutApp","renderOrderConfirmation","OrderConfirmationApp","requestSender","create","put","response","renderPasswordInput","renderPasswordConfirmationInput","passwordLabelContent","passwordConfirmationLabelContent","confirmPassword","onSignUp","isSigningUp","customerCanBeCreated","Success","AccountCreationRequirementsError","AccountCreationFailedError","isDefaultOrderPayment","isStoreCreditPayment","gatewayPayment","detail","instructions","mapFromPayments","remaining","used","balance","purchaseDate","getStoreCreditAmount","total","mapToOrderSummarySubtotalsProps","baseAmount","discountAmount","isTaxIncluded","shippingCostBeforeDiscount","handlingCostTotal","giftWrappingCostTotal","coupons","taxes","fees","subtotalAmount","shippingAmount","giftWrappingAmount","storeCreditAmount","handlingAmount","giftCertificates","MandateTextComponent","mandateText","keys","PaymentsWithMandates","paymentsWithMandates","mandate","isPaymentWithMandate","OrderStatusMessage","orderNumber","supportEmail","supportPhoneNumber","hasDigitalItems","isDownloadable","handleClick","throttle","print","OrderSummary","OrderSummaryDrawer","handleErrorModalClose","handleSignUp","hasSignedUp","loadOrder","isLoadingOrder","paymentInstructions","orderEmail","storePhoneNumber","renderGuestSignUp","shouldShowPasswordForm","customerId","renderOrderSummary","renderErrorModal","shopperCurrency","headerLink","storeCurrency","orderAmount","OrderConfirmation","accountService","newsletter","PaypalCommerce","PaypalCommerceCreditCards","PayPalCommerceAcceleratedCheckout","Braintree","BraintreeAcceleratedCheckout","renderItemContent","quantity","option","renderProductOptionDetails","itemId","isNil","parentId","addedByPromotion","imageUrl","alt","transitTime","additionalDescription","ShopperCurrency","cost","AlertType","renderDefaultIcon","ButtonVariant","ButtonSize","getClassName","isFullWidth","Action","Large","InnerField","InnerFieldInput","hasError","getIn","prevForm","prevField","nextForm","nextField","nextProps","getTime","renderInnerField","Field","errorId","forwardRef","withDate","inputFormat","handleDateChange","dateValue","DynamicFormFieldType","dropdown","IconChevronDown","optionValue","CheckboxInput","isArray","calendarClassName","dateFormat","maxDate","minDate","placeholderText","popperClassName","selected","multiline","TextArea","onSelectedAll","onSelectedNone","handleSelectAllClick","handleSelectNoneClick","MultiCheckboxFormField","remove","handleSelectAll","checkedValues","difference","val","handleSelectNone","handleInputChange","FormFieldContainer","FormFieldError","renderProps","pick","FieldArray","secret","fieldLabel","inputId","fieldInputId","isFloatingLabelSupportedFieldType","labelComponent","dynamicFormFieldType","number","telephone","helperLabel","rows","useRef","focusOnError","erroredFormField","preventScroll","offsetParent","scrollIntoView","behavior","block","inline","handleSubmitCapture","memoizeOne","setSubmitted","noValidate","onSubmitCapture","Consumer","isSubmitted","renderMessage","ErrorMessage","appearFocused","IconSize","Medium","filterError","fallback","Suspense","unmountContentWhenLoading","closeButtonLabel","additionalHeaderClassName","handleClose","ariaHideApp","bodyOpenClassName","base","afterOpen","beforeClose","closeTimeoutMS","overlayClassName","shouldCloseOnEsc","shouldCloseOnOverlayClick","queries","mobile","MOBILE_MAX_WIDTH","SMALL_SCREEN_MAX_WIDTH","matchMedia","element","declaration","propertyName","getPropertyValue","parseAnchor","div","innerHTML","anchor","anchorSiblings","outerHTML","getDerivedStateFromError","componentDidCatch","ErrorLevelType","stripeLinkMinAmount","cartAmount","isStripeLinkMinAmount","injectedProps","useLocale","languageService","getContextValue","createCurrencyService","inputDateFormat","unsubscribe","ADD_ATTR","translatedString","parsedString","FALLBACK_LOCALE","createLanguageService","fallbackLocale","fallbackTranslations","initializeLanguageService","defaultLocale","defaultTranslations","country","states","subdivisions","useCheckout","paymentWithCustomCheckout","isPayPalFastlaneEnabled","paypalFastlaneCustomer","customerAuthenticationState","authenticationState","shouldShowPayPalFastlaneLabel","shouldShowPayPalFastlaneShippingForm","content","shouldShowChildren","FormContext","FormProvider","initialIsSubmitted","contextValue","isFunction"],"sourceRoot":""}