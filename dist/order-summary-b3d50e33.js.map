{"version":3,"file":"order-summary-b3d50e33.js","mappings":"uKAaA,QAT8C,SAAC,G,IAAEA,EAAQ,WAAO,OAC5D,0BAAQC,UAAU,eACd,sBAAIA,UAAU,iDACV,gBAACC,EAAA,EAAgB,CAACC,GAAG,uBAExBH,EALuD,E,6ECoJhE,QA5GsD,SAAC,G,IACnDI,EAAM,SACNC,EAAW,cACXC,EAAiB,oBACjBN,EAAQ,WACRC,EAAS,YACTM,EAAY,eACZC,EAAK,QACLC,EAAW,cACXC,EAAM,SACNC,EAAS,YAEH,GAA8B,IAAAC,WAAkB,GAA9CC,EAAS,KAAEC,EAAY,KACzB,GAAwC,IAAAF,UAA2CR,GAAjFW,EAAc,KAAEC,EAAiB,KAGrBC,GAEhB,SAAa,yCAEXC,EAtCV,SAAyBd,EAAwBO,GAG7C,OAAI,MAAOP,EAFa,KAMpBO,GAAwB,IAAXP,EACNO,EAGJP,CACX,CA0ByBe,CAAgBf,EAAQO,GACvCS,EAAmBH,KAEzB,IAAAI,YAAU,WACNP,EAAaV,IAAWW,GACxBC,EAAkBZ,EACtB,GAAG,CAAEA,IAEL,IAAMkB,GAAqE,IAAAC,cAAY,SAACC,EAAMC,GAC1FD,EAAKE,iBAAiB,gBAAgB,SAAC,GAAQ,WAC5BF,IACXV,GAAa,GACbW,IAER,GACJ,GAAG,CAAEX,IAUL,OACI,mCAAgBJ,GACZ,gBAAC,EAAAiB,cAAa,CACVC,eAAgBN,EAChBO,WAAW,kBACXC,GAAIjB,EACJkB,QAAS,CAAC,GAEV,mCACc,SACV9B,UAAW,IACP,iBACA,mCACAA,IAGJ,wBAAMA,UAAU,wBACZ,oCAAgB,oBACXO,EACA,MAEJD,GACG,wBAAMN,UAAU,+BACX,WAAIM,EAAY,OAGxBD,GAAqBD,GAClB,wBAAMJ,UAAU,uBACZ,qBACIA,UAAW,IAAW,CAClB,iBAAkBmB,IACpB,YACQ,sBACVY,KAAK,IACLC,SAAS,EAAAC,EAAA,IA1Cb,YACpBd,GAAqBd,GAIzBA,GACJ,KAsCiCD,KAMjB,wBAAMJ,UAAU,wBACZ,oCAAgB,oBA5FxC,SAAuBiB,GACnB,MAA+B,iBAAjBA,CAClB,CA2F6BiB,CAAcjB,GACX,gBAACkB,EAAA,EAAe,CAAChC,OAAQc,IACzB,GAKPT,GACG,mCAAe,gCAAgCA,IAItDT,IAKrB,E,yBC3EA,QAhDwF,SAAC,G,IACrFqC,EAAa,gBACbC,EAAK,QACLC,EAAU,aACVC,EAAS,YACHC,GAAsB,IAAAC,UAAQ,WAAM,SAAAC,EAAA,GAAmBH,EAAnB,GAA+B,CAACA,IACpEI,EAAsBP,GAAiBC,GAASA,EAAMO,OAAS,EAErE,OACI,2BAAS5C,UAAU,sCAAqC,YAAW,QAC/D,gBAAC,EAAkB,KAAEsC,GAErB,gBAACO,EAAA,EAAmB,KAChB,gBAACC,EAAA,EAAiB,CAACC,uBAAqB,EAACC,MAAOR,KAGpD,gBAACS,EAAA,EAAS,CAACC,OAAM,2BAUhBP,GAAuB,gBAACE,EAAA,EAAmB,KACxC,sBACI7C,UAAU,uEAAsE,YACtE,YAEV,gBAACC,EAAA,EAAgB,CACbC,GAAG,0BAGTmC,GAAS,IAAIc,KAAI,SAACC,EAAKC,GAAU,OAC/B,gBAAC,EAAiB,CACdlD,OAAQiD,EAAIjD,OACZmD,IAAKD,EACL9C,MAAO6C,EAAIG,KACX9C,OAAO,cALoB,KAWnD,C,mHC5DA,QATA,SAAuB+C,GACnB,MAAO,CACHtD,GAAIsD,EAAKtD,GACTuD,SAAUD,EAAKC,SACftD,OAAQqD,EAAKE,kBACbH,KAAMC,EAAKD,KAEnB,ECRe,SAASI,EAAyBH,GAC7C,GAAKA,EAAKI,SAIV,OAAO,uBAAKC,IAAKL,EAAKD,KAAI,YAAY,kBAAkBO,IAAKN,EAAKI,UACtE,CCiBA,SAASG,EAA0BP,GAC/B,OAAKA,EAAKQ,gBAOH,CACHvD,OAAQ,qCACRwD,QACI,qBAAGlC,KAAMyB,EAAKQ,gBAAiBE,IAAI,sBAAsBC,OAAO,UAC5D,gBAAClE,EAAA,EAAgB,CAACC,GAAG,4BAVtB,CACHO,OAAQ,4BACRwD,QAAS,gBAAChE,EAAA,EAAgB,CAACC,GAAG,2BAY1C,CAEA,QApCA,SAAwBsD,GACpB,MAAO,CACHtD,GAAIsD,EAAKtD,GACTuD,SAAUD,EAAKC,SACftD,OAAQqD,EAAKY,wBACbC,oBAAqBb,EAAKc,kBAC1Bf,KAAMC,EAAKD,KACXgB,MAAOZ,EAAyBH,GAChCgB,gBAAgB,2CACRhB,EAAKiB,SAAW,IAAItB,KAAI,SAACuB,GAAW,OACpCjE,OAAQ,2BACRwD,QAAS,UAAGS,EAAOnB,KAAI,YAAImB,EAAOC,OAFE,KAGrC,IACHZ,EAA0BP,K,GAGtC,E,eCHA,QAdA,SAAgCA,GAC5B,MAAO,CACHtD,GAAIsD,EAAKtD,GACTuD,SAAU,EACVtD,OAAQqD,EAAKrD,OACboD,KAAMC,EAAKD,KACXgB,MACI,wBAAMvE,UAAU,+BAA8B,YAAW,8BACrD,gBAAC4E,EAAA,EAAmB,OAIpC,ECEA,QAhBA,SAAyBpB,GACrB,MAAO,CACHtD,GAAIsD,EAAKtD,GACTuD,SAAUD,EAAKC,SACftD,OAAQqD,EAAKY,wBACbC,oBAAqBb,EAAKc,kBAC1Bf,KAAMC,EAAKD,KACXgB,MAAOZ,EAAyBH,GAChCqB,YAAarB,EAAKsB,aAAetB,EAAKsB,aAAavB,UAAOwB,EAC1DP,gBAAiBhB,EAAKiB,SAAW,IAAItB,KAAI,SAACuB,GAAW,OACjDjE,OAAQ,2BACRwD,QAAS,UAAGS,EAAOnB,KAAI,YAAImB,EAAOC,OAFe,IAK7D,ECkEA,SAAe,IAAAK,OAlEoD,SAAC,G,IAChET,EAAK,QACLhB,EAAI,OACJiB,EAAc,iBACdf,EAAQ,WACRoB,EAAW,cACT,OAEF,uBAAK7E,UAAU,WACX,0BAAQA,UAAU,iCAAiCuE,GAEnD,uBAAKvE,UAAU,+BACX,sBACIA,UAAU,iDAAgD,YAChD,2BAETuD,GAEJiB,GAAkBA,EAAe5B,OAAS,GACvC,sBACI5C,UAAU,qDAAoD,YACpD,6BAETwE,EAAerB,KAAI,SAACuB,EAAQrB,GAAU,OACnC,sBAAIrD,UAAU,iBAAgB,YAAY0E,EAAOjE,OAAQ6C,IAAKD,GACzDqB,EAAOT,QAFuB,KAO9CY,GACG,uBACI7E,UAAU,yDAAwD,YACxD,iCAET6E,IAKb,uBAAK7E,UAAU,wCACX,4BACK,UAAGyD,KApCd,ICgHN,QA7GA,YACI,WAAYwB,GACR,QAAK,UAACA,IAAM,K,OAoGR,EAAAC,aAA2B,WACvB,IAAAC,EAAe,EAAKC,MAAK,WAEjC,EAAKC,SAAS,CAAEF,YAAaA,GACjC,EAtGI,EAAKC,MAAQ,CACTD,YAAY,EACZG,eAAgB,EAAKC,qB,CAE7B,CAmGJ,OA3GgC,oBAU5B,YAAAC,OAAA,WACU,MAA0CC,KAAKR,MAA7C,IAAAlC,sBAAAA,OAAqB,IAAG,GAAI,EAAEC,EAAK,QACrC,EAAiCyC,KAAKL,MAApCE,EAAc,iBAAEH,EAAU,aAElC,OACI,gCACKpC,GAAyB,sBACtB/C,UAAU,wDAAuD,YACvD,oBAEV,gBAACC,EAAA,EAAgB,CACbyF,KAAM,CAAEC,OAAO,EAAAC,EAAA,GAAc5C,IAC7B9C,GAAG,0BAGX,uBAAKF,UAAU,oBACX,uBAAKA,UAAU,sBAAoB,WAEnC,uBAAKA,UAAU,aAAW,aAG9B,kCAAc,SAASA,UAAU,gBAC5B,kFACMgD,EAAM6C,cACJC,QACAC,MAAK,SAACvC,GAAS,OAAAA,EAAKwC,SAAL,IACf7C,IAAI,IAAgB,GACtBH,EAAMiD,iBAAiBH,QAAQ3C,IAAI,IAAuB,GAC1DH,EAAMkD,aACJJ,QACAC,MAAK,SAACvC,GAAS,OAAAA,EAAKwC,SAAL,IACf7C,IAAI,IAAe,IACpBH,EAAMmD,aAAe,IAAIhD,IAAI,IAAc,GAE9C2C,MAAM,EAAGX,OAAaJ,EAAYO,GAClCnC,KAAI,SAACiD,GAAqB,OACvB,sBAAIpG,UAAU,8BAA8BsD,IAAK8C,EAAiBlG,IAC9D,gBAAC,GAAgB,iBAAKkG,IAFH,KAOlCX,KAAKY,gBAGlB,EAEQ,YAAAd,kBAAR,WACI,OAAO,EAAAe,EAAA,KAtE4B,EADb,CAwE1B,EAEQ,YAAAD,cAAR,WACY,IAAAlB,EAAeM,KAAKL,MAAK,WAEjC,KAAIK,KAAKc,oBAAsBd,KAAKF,qBAIpC,OACI,uBAAKvF,UAAU,gBACX,0BACIA,UAAU,yEACVgC,QAASyD,KAAKP,aACdsB,KAAK,UAEJrB,EACG,gCACI,gBAAClF,EAAA,EAAgB,CAACC,GAAG,yBACrB,gBAACuG,EAAA,EAAa,OAGlB,gCACI,gBAACxG,EAAA,EAAgB,CAACC,GAAG,wBACrB,gBAACwG,EAAA,EAAe,QAMxC,EAEQ,YAAAH,iBAAR,WACY,IAAAvD,EAAUyC,KAAKR,MAAK,MAE5B,OACKjC,EAAMmD,aAAe,IAAIvD,OAC1BI,EAAM6C,cAAcjD,OACpBI,EAAMkD,aAAatD,OACnBI,EAAMiD,iBAAiBrD,MAE/B,EAOJ,EA3GA,CAAgC,Y,kDCpBhC,QAN+C,SAAC,G,IAAE7C,EAAQ,WAAO,OAC7D,2BAASC,UAAU,2DACdD,EAFwD,C,kDCAlD,SAAS6F,EAAc,G,IAClCC,EAAa,gBACbK,EAAY,eACZD,EAAgB,mBAChBE,EAAW,cAOX,OALwB,8DAAIN,GAAe,GAAGK,GAAc,GAAIC,GAAe,IAAG,GAAEQ,QAChF,SAACC,EAAOpD,GAAS,OAACoD,EAASpD,EAAKC,QAAf,GACjB,GAGqBwC,EAAiBrD,MAC9C,C,iDCZe,SAASF,EAAmBH,GACvC,OAAO,gCACAA,GAAS,CACZsD,cAAetD,EAAUsD,cAAcgB,QAAO,SAACrD,GAAS,MAAyB,iBAAlBA,EAAKsD,QAAZ,IACxDZ,aAAc3D,EAAU2D,aAAaW,QAAO,SAACrD,GAAS,MAAyB,iBAAlBA,EAAKsD,QAAZ,KAE9D,C,kDCEA,SAAe,E,SAAA,IAN0B,WAAM,OAC3C,uBAAKC,OAAO,KAAKC,QAAQ,YAAYC,MAAM,KAAKC,MAAM,8BAClD,wBAAMC,EAAE,mDAF+B,G,kDCI/C,QAN+C,WAAM,OACjD,uBAAKJ,OAAO,KAAKC,QAAQ,YAAYC,MAAM,KAAKC,MAAM,8BAClD,wBAAMC,EAAE,0aAFqC,C,kDCEtC,SAASb,IAGpB,OAFQc,OAAOC,WAAW,sBAAe,IAAsB,QAElDC,OACjB,C","sources":["webpack://checkout/./packages/core/src/app/order/OrderSummaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryPrice.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummary.tsx","webpack://checkout/./packages/core/src/app/order/mapFromCustom.tsx","webpack://checkout/./packages/core/src/app/order/getOrderSummaryItemImage.tsx","webpack://checkout/./packages/core/src/app/order/mapFromDigital.tsx","webpack://checkout/./packages/core/src/app/order/mapFromGiftCertificate.tsx","webpack://checkout/./packages/core/src/app/order/mapFromPhysical.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryItem.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryItems.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummarySection.tsx","webpack://checkout/./packages/core/src/app/order/getItemsCount.ts","webpack://checkout/./packages/core/src/app/order/removeBundledItems.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconChevronUp.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconGiftCertificate.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/isSmallScreen.ts"],"sourcesContent":["import React, { FunctionComponent } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nconst OrderSummaryHeader: FunctionComponent = ({ children }) => (\r\n    <header className=\"cart-header\">\r\n        <h3 className=\"cart-title optimizedCheckout-headingSecondary\">\r\n            <TranslatedString id=\"cart.cart_heading\" />\r\n        </h3>\r\n        {children}\r\n    </header>\r\n);\r\n\r\nexport default OrderSummaryHeader;\r\n","import classNames from 'classnames';\r\nimport React, { FC, ReactNode, useCallback, useEffect, useState } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\r\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nimport { ShopperCurrency } from '../currency';\r\n\r\nexport interface OrderSummaryPriceProps {\r\n    label: ReactNode;\r\n    amount?: number | null;\r\n    zeroLabel?: ReactNode;\r\n    className?: string;\r\n    testId?: string;\r\n    currencyCode?: string;\r\n    superscript?: string;\r\n    actionLabel?: ReactNode;\r\n    onActionTriggered?(): void;\r\n}\r\n\r\nexport interface OrderSummaryPriceState {\r\n    highlight: boolean;\r\n    previousAmount?: number;\r\n}\r\n\r\nfunction getDisplayValue(amount?: number | null, zeroLabel?: ReactNode): ReactNode | number {\r\n    const notYetSetSymbol = '--';\r\n\r\n    if (typeof amount === 'undefined' || amount === null) {\r\n        return notYetSetSymbol;\r\n    }\r\n\r\n    if (zeroLabel && amount === 0) {\r\n        return zeroLabel;\r\n    }\r\n\r\n    return amount;\r\n}\r\n\r\nfunction isNumberValue(displayValue: number | ReactNode): displayValue is number {\r\n    return typeof displayValue === 'number';\r\n}\r\n\r\nconst OrderSummaryPrice: FC<OrderSummaryPriceProps> = ({\r\n    amount,\r\n    actionLabel,\r\n    onActionTriggered,\r\n    children,\r\n    className,\r\n    currencyCode,\r\n    label,\r\n    superscript,\r\n    testId,\r\n    zeroLabel,\r\n}) => {\r\n    const [ highlight, setHighlight ] = useState<boolean>(false);\r\n    const [ previousAmount, setPreviousAmount ] = useState<OrderSummaryPriceProps['amount']>(amount);\r\n    const {\r\n        checkoutState: {\r\n            statuses: { isSubmittingOrder }\r\n        }\r\n    } = useCheckout();\r\n\r\n    const displayValue = getDisplayValue(amount, zeroLabel);\r\n    const isActionDisabled = isSubmittingOrder();\r\n    \r\n    useEffect(() => {\r\n        setHighlight(amount !== previousAmount);\r\n        setPreviousAmount(amount);\r\n    }, [ amount ]);\r\n\r\n    const handleTransitionEnd: (node: HTMLElement, done: () => void) => void = useCallback((node, done) => {\r\n        node.addEventListener('animationend', ({ target }) => {\r\n            if (target === node) {\r\n                setHighlight(false);\r\n                done();\r\n            }\r\n        });\r\n    }, [ setHighlight ]);\r\n\r\n    const handleActionTrigger = () => {\r\n        if (isActionDisabled || !onActionTriggered) {\r\n            return;\r\n        }\r\n\r\n        onActionTriggered();\r\n    }\r\n\r\n    return (\r\n        <div data-test={testId}>\r\n            <CSSTransition\r\n                addEndListener={handleTransitionEnd}\r\n                classNames=\"changeHighlight\"\r\n                in={highlight}\r\n                timeout={{}}\r\n            >\r\n                <div\r\n                    aria-live=\"polite\"\r\n                    className={classNames(\r\n                        'cart-priceItem',\r\n                        'optimizedCheckout-contentPrimary',\r\n                        className,\r\n                    )}\r\n                >\r\n                    <span className=\"cart-priceItem-label\">\r\n                        <span data-test=\"cart-price-label\">\r\n                            {label}\r\n                            {'  '}\r\n                        </span>\r\n                        {currencyCode && (\r\n                            <span className=\"cart-priceItem-currencyCode\">\r\n                                {`(${currencyCode}) `}\r\n                            </span>\r\n                        )}\r\n                        {onActionTriggered && actionLabel && (\r\n                            <span className=\"cart-priceItem-link\">\r\n                                <a\r\n                                    className={classNames({\r\n                                        'link--disabled': isActionDisabled,\r\n                                    })}\r\n                                    data-test=\"cart-price-callback\"\r\n                                    href=\"#\"\r\n                                    onClick={preventDefault(handleActionTrigger)}\r\n                                >\r\n                                    {actionLabel}\r\n                                </a>\r\n                            </span>\r\n                        )}\r\n                    </span>\r\n\r\n                    <span className=\"cart-priceItem-value\">\r\n                        <span data-test=\"cart-price-value\">\r\n                            {isNumberValue(displayValue) ? (\r\n                                <ShopperCurrency amount={displayValue} />\r\n                            ) : (\r\n                                displayValue\r\n                            )}\r\n                        </span>\r\n\r\n                        {superscript && (\r\n                            <sup data-test=\"cart-price-value-superscript\">{superscript}</sup>\r\n                        )}\r\n                    </span>\r\n\r\n                    {children}\r\n                </div>\r\n            </CSSTransition>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderSummaryPrice;\r\n","import {\r\n    ExtensionRegion,\r\n    LineItemMap,\r\n    ShopperCurrency,\r\n    StoreCurrency,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, ReactNode, useMemo } from 'react';\r\n\r\nimport { Extension } from '@bigcommerce/checkout/checkout-extension';\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport OrderSummaryHeader from './OrderSummaryHeader';\r\nimport OrderSummaryItems from './OrderSummaryItems';\r\nimport OrderSummaryPrice from './OrderSummaryPrice';\r\nimport OrderSummarySection from './OrderSummarySection';\r\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\r\nimport removeBundledItems from './removeBundledItems';\r\n\r\nexport interface OrderSummaryProps {\r\n    lineItems: LineItemMap;\r\n    total: number;\r\n    headerLink: ReactNode;\r\n    storeCurrency: StoreCurrency;\r\n    shopperCurrency: ShopperCurrency;\r\n    additionalLineItems?: ReactNode;\r\n}\r\n\r\nconst OrderSummary: FunctionComponent<OrderSummaryProps & OrderSummarySubtotalsProps> = ({\r\n    isTaxIncluded,\r\n    taxes,\r\n    headerLink,\r\n    lineItems}) => {\r\n    const nonBundledLineItems = useMemo(() => removeBundledItems(lineItems), [lineItems]);\r\n    const displayInclusiveTax = isTaxIncluded && taxes && taxes.length > 0;\r\n\r\n    return (\r\n        <article className=\"cart optimizedCheckout-orderSummary\" data-test=\"cart\">\r\n            <OrderSummaryHeader>{headerLink}</OrderSummaryHeader>\r\n\r\n            <OrderSummarySection>\r\n                <OrderSummaryItems displayLineItemsCount items={nonBundledLineItems} />\r\n            </OrderSummarySection>\r\n\r\n            <Extension region={ExtensionRegion.SummaryLastItemAfter} />\r\n\r\n            {/* <OrderSummarySection>\r\n                <OrderSummaryTotal\r\n                    orderAmount={total}\r\n                    shopperCurrencyCode={shopperCurrency.code}\r\n                    storeCurrencyCode={storeCurrency.code}\r\n                />\r\n            </OrderSummarySection> */}\r\n\r\n            {displayInclusiveTax && <OrderSummarySection>\r\n                <h5\r\n                    className=\"cart-taxItem cart-taxItem--subtotal optimizedCheckout-contentPrimary\"\r\n                    data-test=\"tax-text\"\r\n                >\r\n                    <TranslatedString\r\n                        id=\"tax.inclusive_label\"\r\n                    />\r\n                </h5>\r\n                {(taxes || []).map((tax, index) => (\r\n                    <OrderSummaryPrice\r\n                        amount={tax.amount}\r\n                        key={index}\r\n                        label={tax.name}\r\n                        testId=\"cart-taxes\"\r\n                    />\r\n                ))}\r\n            </OrderSummarySection>}\r\n        </article>\r\n    );\r\n};\r\n\r\nexport default OrderSummary;\r\n","import { CustomItem } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\r\n\r\nfunction mapFromCustom(item: CustomItem): OrderSummaryItemProps {\r\n    return {\r\n        id: item.id,\r\n        quantity: item.quantity,\r\n        amount: item.extendedListPrice,\r\n        name: item.name,\r\n    };\r\n}\r\n\r\nexport default mapFromCustom;\r\n","import { DigitalItem, PhysicalItem } from '@bigcommerce/checkout-sdk';\r\nimport React, { ReactNode } from 'react';\r\n\r\nexport default function getOrderSummaryItemImage(item: DigitalItem | PhysicalItem): ReactNode {\r\n    if (!item.imageUrl) {\r\n        return;\r\n    }\r\n\r\n    return <img alt={item.name} data-test=\"cart-item-image\" src={item.imageUrl} />;\r\n}\r\n","import { DigitalItem } from '@bigcommerce/checkout-sdk';\r\nimport React from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport getOrderSummaryItemImage from './getOrderSummaryItemImage';\r\nimport { OrderSummaryItemOption, OrderSummaryItemProps } from './OrderSummaryItem';\r\n\r\nfunction mapFromDigital(item: DigitalItem): OrderSummaryItemProps {\r\n    return {\r\n        id: item.id,\r\n        quantity: item.quantity,\r\n        amount: item.extendedComparisonPrice,\r\n        amountAfterDiscount: item.extendedSalePrice,\r\n        name: item.name,\r\n        image: getOrderSummaryItemImage(item),\r\n        productOptions: [\r\n            ...(item.options || []).map((option) => ({\r\n                testId: 'cart-item-product-option',\r\n                content: `${option.name} ${option.value}`,\r\n            })),\r\n            getDigitalItemDescription(item),\r\n        ],\r\n    };\r\n}\r\n\r\nfunction getDigitalItemDescription(item: DigitalItem): OrderSummaryItemOption {\r\n    if (!item.downloadPageUrl) {\r\n        return {\r\n            testId: 'cart-item-digital-product',\r\n            content: <TranslatedString id=\"cart.digital_item_text\" />,\r\n        };\r\n    }\r\n\r\n    return {\r\n        testId: 'cart-item-digital-product-download',\r\n        content: (\r\n            <a href={item.downloadPageUrl} rel=\"noopener noreferrer\" target=\"_blank\">\r\n                <TranslatedString id=\"cart.downloads_action\" />\r\n            </a>\r\n        ),\r\n    };\r\n}\r\n\r\nexport default mapFromDigital;\r\n","import { GiftCertificateItem } from '@bigcommerce/checkout-sdk';\r\nimport React from 'react';\r\n\r\nimport { IconGiftCertificate } from '../ui/icon';\r\n\r\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\r\n\r\nfunction mapFromGiftCertificate(item: GiftCertificateItem): OrderSummaryItemProps {\r\n    return {\r\n        id: item.id,\r\n        quantity: 1,\r\n        amount: item.amount,\r\n        name: item.name,\r\n        image: (\r\n            <span className=\"productImage-giftCertificate\" data-test=\"cart-item-gift-certificate\">\r\n                <IconGiftCertificate />\r\n            </span>\r\n        ),\r\n    };\r\n}\r\n\r\nexport default mapFromGiftCertificate;\r\n","import { PhysicalItem } from '@bigcommerce/checkout-sdk';\r\n\r\nimport getOrderSummaryItemImage from './getOrderSummaryItemImage';\r\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\r\n\r\nfunction mapFromPhysical(item: PhysicalItem): OrderSummaryItemProps {\r\n    return {\r\n        id: item.id,\r\n        quantity: item.quantity,\r\n        amount: item.extendedComparisonPrice,\r\n        amountAfterDiscount: item.extendedSalePrice,\r\n        name: item.name,\r\n        image: getOrderSummaryItemImage(item),\r\n        description: item.giftWrapping ? item.giftWrapping.name : undefined,\r\n        productOptions: (item.options || []).map((option) => ({\r\n            testId: 'cart-item-product-option',\r\n            content: `${option.name} ${option.value}`,\r\n        })),\r\n    };\r\n}\r\n\r\nexport default mapFromPhysical;\r\n","import React, { FunctionComponent, memo, ReactNode } from 'react';\r\n\r\n\r\nexport interface OrderSummaryItemProps {\r\n    id: string | number;\r\n    amount: number;\r\n    quantity: number;\r\n    name: string;\r\n    amountAfterDiscount?: number;\r\n    image?: ReactNode;\r\n    description?: ReactNode;\r\n    productOptions?: OrderSummaryItemOption[];\r\n}\r\n\r\nexport interface OrderSummaryItemOption {\r\n    testId: string;\r\n    content: ReactNode;\r\n}\r\n\r\nconst OrderSummaryItem: FunctionComponent<OrderSummaryItemProps> = ({\r\n    image,\r\n    name,\r\n    productOptions,\r\n    quantity,\r\n    description,\r\n}) => (\r\n    // <div className=\"product\" data-test=\"cart-item\">\r\n    <div className='product'>\r\n        <figure className=\"product-column product-figure\">{image}</figure>\r\n\r\n        <div className=\"product-column product-body\">\r\n            <h4\r\n                className=\"product-title optimizedCheckout-contentPrimary\"\r\n                data-test=\"cart-item-product-title\"\r\n            >\r\n                {name}\r\n            </h4>\r\n            {productOptions && productOptions.length > 0 && (\r\n                <ul\r\n                    className=\"product-options optimizedCheckout-contentSecondary\"\r\n                    data-test=\"cart-item-product-options\"\r\n                >\r\n                    {productOptions.map((option, index) => (\r\n                        <li className=\"product-option\" data-test={option.testId} key={index}>\r\n                            {option.content}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n            {description && (\r\n                <div\r\n                    className=\"product-description optimizedCheckout-contentSecondary\"\r\n                    data-test=\"cart-item-product-description\"\r\n                >\r\n                    {description}\r\n                </div>\r\n            )}\r\n        </div>\r\n\r\n        <div className='product-column product-body quantity'>\r\n            <span>\r\n                {`${quantity}` }\r\n            </span>\r\n        </div>\r\n        \r\n        {/* <div className=\"product-column product-actions\">\r\n            <div\r\n                className={classNames('product-price', 'optimizedCheckout-contentPrimary', {\r\n                    'product-price--beforeDiscount':\r\n                        isNumber(amountAfterDiscount) && amountAfterDiscount !== amount,\r\n                })}\r\n                data-test=\"cart-item-product-price\"\r\n            >\r\n                <ShopperCurrency amount={amount} />\r\n            </div>\r\n\r\n            {isNumber(amountAfterDiscount) && amountAfterDiscount !== amount && (\r\n                <div className=\"product-price\" data-test=\"cart-item-product-price--afterDiscount\">\r\n                    <ShopperCurrency amount={amountAfterDiscount} />\r\n                </div>\r\n            )}\r\n        </div> */}\r\n    </div>\r\n);\r\n\r\nexport default memo(OrderSummaryItem);\r\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\r\nimport React, { ReactNode } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { IconChevronDown, IconChevronUp } from '../ui/icon';\r\nimport { isSmallScreen } from '../ui/responsive';\r\n\r\nimport getItemsCount from './getItemsCount';\r\nimport mapFromCustom from './mapFromCustom';\r\nimport mapFromDigital from './mapFromDigital';\r\nimport mapFromGiftCertificate from './mapFromGiftCertificate';\r\nimport mapFromPhysical from './mapFromPhysical';\r\nimport OrderSummaryItem from './OrderSummaryItem';\r\n\r\nconst COLLAPSED_ITEMS_LIMIT = 4;\r\nconst COLLAPSED_ITEMS_LIMIT_SMALL_SCREEN = 3;\r\n\r\nexport interface OrderSummaryItemsProps {\r\n    displayLineItemsCount: boolean;\r\n    items: LineItemMap;\r\n}\r\n\r\ninterface OrderSummaryItemsState {\r\n    isExpanded: boolean;\r\n    collapsedLimit: number;\r\n}\r\n\r\nclass OrderSummaryItems extends React.Component<OrderSummaryItemsProps, OrderSummaryItemsState> {\r\n    constructor(props: OrderSummaryItemsProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isExpanded: false,\r\n            collapsedLimit: this.getCollapsedLimit(),\r\n        };\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { displayLineItemsCount = true, items } = this.props;\r\n        const { collapsedLimit, isExpanded } = this.state;\r\n\r\n        return (\r\n            <>\r\n                {displayLineItemsCount && <h3\r\n                    className=\"cart-section-heading optimizedCheckout-contentPrimary\"\r\n                    data-test=\"cart-count-total\"\r\n                >\r\n                    <TranslatedString\r\n                        data={{ count: getItemsCount(items) }}\r\n                        id=\"cart.item_count_text\"\r\n                    />\r\n                </h3>}\r\n                <div className='cart-list-header'>\r\n                    <div className=\"cart-title product\">Product</div>\r\n                    {/* <div className=\"product\">Product</div> */}\r\n                    <div className=\"quantity \">Quantity</div>\r\n                </div>\r\n\r\n                <ul aria-live=\"polite\" className=\"productList\">\r\n                    {[\r\n                        ...items.physicalItems\r\n                            .slice()\r\n                            .sort((item) => item.variantId)\r\n                            .map(mapFromPhysical),\r\n                        ...items.giftCertificates.slice().map(mapFromGiftCertificate),\r\n                        ...items.digitalItems\r\n                            .slice()\r\n                            .sort((item) => item.variantId)\r\n                            .map(mapFromDigital),\r\n                        ...(items.customItems || []).map(mapFromCustom),\r\n                    ]\r\n                        .slice(0, isExpanded ? undefined : collapsedLimit)\r\n                        .map((summaryItemProps) => (\r\n                            <li className=\"productList-item is-visible\" key={summaryItemProps.id}>\r\n                                <OrderSummaryItem {...summaryItemProps} />\r\n                            </li>\r\n                        ))}\r\n                </ul>\r\n\r\n                {this.renderActions()}\r\n            </>\r\n        );\r\n    }\r\n\r\n    private getCollapsedLimit(): number {\r\n        return isSmallScreen() ? COLLAPSED_ITEMS_LIMIT_SMALL_SCREEN : COLLAPSED_ITEMS_LIMIT;\r\n    }\r\n\r\n    private renderActions(): ReactNode {\r\n        const { isExpanded } = this.state;\r\n\r\n        if (this.getLineItemCount() <= this.getCollapsedLimit()) {\r\n            return;\r\n        }\r\n\r\n        return (\r\n            <div className=\"cart-actions\">\r\n                <button\r\n                    className=\"button button--tertiary button--tiny optimizedCheckout-buttonSecondary\"\r\n                    onClick={this.handleToggle}\r\n                    type=\"button\"\r\n                >\r\n                    {isExpanded ? (\r\n                        <>\r\n                            <TranslatedString id=\"cart.see_less_action\" />\r\n                            <IconChevronUp />\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <TranslatedString id=\"cart.see_all_action\" />\r\n                            <IconChevronDown />\r\n                        </>\r\n                    )}\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getLineItemCount(): number {\r\n        const { items } = this.props;\r\n\r\n        return (\r\n            (items.customItems || []).length +\r\n            items.physicalItems.length +\r\n            items.digitalItems.length +\r\n            items.giftCertificates.length\r\n        );\r\n    }\r\n\r\n    private handleToggle: () => void = () => {\r\n        const { isExpanded } = this.state;\r\n\r\n        this.setState({ isExpanded: !isExpanded });\r\n    };\r\n}\r\n\r\nexport default OrderSummaryItems;\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nconst OrderSummarySection: FunctionComponent = ({ children }) => (\r\n    <section className=\"cart-section optimizedCheckout-orderSummary-cartSection\">\r\n        {children}\r\n    </section>\r\n);\r\n\r\nexport default OrderSummarySection;\r\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\r\n\r\nexport default function getItemsCount({\r\n    physicalItems,\r\n    digitalItems,\r\n    giftCertificates,\r\n    customItems,\r\n}: LineItemMap): number {\r\n    const totalItemsCount = [...physicalItems, ...digitalItems, ...(customItems || [])].reduce(\r\n        (total, item) => (total += item.quantity),\r\n        0,\r\n    );\r\n\r\n    return totalItemsCount + giftCertificates.length;\r\n}\r\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\r\n\r\nexport default function removeBundledItems(lineItems: LineItemMap): LineItemMap {\r\n    return {\r\n        ...lineItems,\r\n        physicalItems: lineItems.physicalItems.filter((item) => typeof item.parentId !== 'string'),\r\n        digitalItems: lineItems.digitalItems.filter((item) => typeof item.parentId !== 'string'),\r\n    };\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconChevronUp: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconChevronUp);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nconst IconGiftCertificate: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M20 6h-2.18c.11-.31.18-.65.18-1a2.996 2.996 0 0 0-5.5-1.65l-.5.67-.5-.68C10.96 2.54 10.05 2 9 2 7.34 2 6 3.34 6 5c0 .35.07.69.18 1H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-5-2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM9 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm11 15H4v-2h16v2zm0-5H4V8h5.08L7 10.83 8.62 12 11 8.76l1-1.36 1 1.36L15.38 12 17 10.83 14.92 8H20v6z\" />\r\n    </svg>\r\n);\r\n\r\nexport default IconGiftCertificate;\r\n","import { SMALL_SCREEN_MAX_WIDTH } from './breakpoints';\r\n\r\nlet query: MediaQueryList;\r\n\r\nexport default function isSmallScreen() {\r\n    query = window.matchMedia(`(max-width: ${SMALL_SCREEN_MAX_WIDTH}px)`);\r\n\r\n    return query.matches;\r\n}\r\n"],"names":["children","className","TranslatedString","id","amount","actionLabel","onActionTriggered","currencyCode","label","superscript","testId","zeroLabel","useState","highlight","setHighlight","previousAmount","setPreviousAmount","isSubmittingOrder","displayValue","getDisplayValue","isActionDisabled","useEffect","handleTransitionEnd","useCallback","node","done","addEventListener","CSSTransition","addEndListener","classNames","in","timeout","href","onClick","preventDefault","isNumberValue","ShopperCurrency","isTaxIncluded","taxes","headerLink","lineItems","nonBundledLineItems","useMemo","removeBundledItems","displayInclusiveTax","length","OrderSummarySection","OrderSummaryItems","displayLineItemsCount","items","Extension","region","map","tax","index","key","name","item","quantity","extendedListPrice","getOrderSummaryItemImage","imageUrl","alt","src","getDigitalItemDescription","downloadPageUrl","content","rel","target","extendedComparisonPrice","amountAfterDiscount","extendedSalePrice","image","productOptions","options","option","value","IconGiftCertificate","description","giftWrapping","undefined","memo","props","handleToggle","isExpanded","state","setState","collapsedLimit","getCollapsedLimit","render","this","data","count","getItemsCount","physicalItems","slice","sort","variantId","giftCertificates","digitalItems","customItems","summaryItemProps","renderActions","isSmallScreen","getLineItemCount","type","IconChevronUp","IconChevronDown","reduce","total","filter","parentId","height","viewBox","width","xmlns","d","window","matchMedia","matches"],"sourceRoot":""}